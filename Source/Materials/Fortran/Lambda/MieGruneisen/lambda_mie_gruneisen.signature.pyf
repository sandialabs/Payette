!    -*- f90 -*-
! Note: the context of this file is case sensitive.
python module payette__user__routines
    interface payette_user_interface
        subroutine migmessage(message)
            intent(callback) migmessage
            character*(*) :: message
            real intent(callback) :: migerror
        end subroutine migmessage
        subroutine migerror(message)
            intent(callback) migerror
            character*(*) :: message
            real intent(callback) :: migmessage
        end subroutine migerror
    end interface payette_user_interface
end python module payette__user__routines

python module lambda_mie_gruneisen ! in 
    interface  ! in :lambda_mie_gruneisen
        subroutine lambda_prefix_eosmgi(ui,gc,dc,uc,mdc,ndc,vi) ! in :lambda_mie_gruneisen:MieGruneisen.F
            use payette__user__routines
            real dimension(*) :: ui
            real dimension(*) :: gc
            real dimension(*) :: dc
            character dimension(*,1),intent(c) :: uc
            integer :: mdc
            integer :: ndc
            real dimension(*) :: vi
            intent(callback) migerror
            external migerror
            intent(callback) migmessage
            external migmessage
        end subroutine lambda_prefix_eosmgi
        subroutine lambda_prefix_eosmgk(ui,gc,dc,nx,namea,keya,rinit,rdim,iadvct,itype) ! in :lambda_mie_gruneisen:MieGruneisen.F
            use payette__user__routines
            real dimension(*) :: ui
            real dimension(*) :: gc
            real dimension(*) :: dc
            integer :: nx
            character dimension(*,1),intent(c) :: namea
            character dimension(*,1),intent(c) :: keya
            real dimension(*) :: rinit
            real dimension(7,*) :: rdim
            integer dimension(*) :: iadvct
            integer dimension(*) :: itype
            intent(callback) migerror
            external migerror
            intent(callback) migmessage
            external migmessage
        end subroutine lambda_prefix_eosmgk
        subroutine lambda_prefix_eosmgr(mc,nc,ui,gc,dc,rho,temp,alph,nx,pres,enrg,cs,s) ! in :lambda_mie_gruneisen:MieGruneisen.F
            use payette__user__routines
            integer, optional,check(len(rho)>=mc),depend(rho) :: mc=len(rho)
            integer :: nc
            real dimension(*) :: ui
            real dimension(*) :: gc
            real dimension(*) :: dc
            real dimension(mc) :: rho
            real dimension(mc),depend(mc) :: temp
            real dimension(mc,nx),depend(mc) :: alph
            integer, optional,check(shape(alph,1)==nx),depend(alph) :: nx=shape(alph,1)
            real dimension(mc),depend(mc) :: pres
            real dimension(mc),depend(mc) :: enrg
            real dimension(mc),depend(mc) :: cs
            real dimension(mc,8),depend(mc) :: s
            intent(callback) migerror
            external migerror
            intent(callback) migmessage
            external migmessage
        end subroutine lambda_prefix_eosmgr
        subroutine lambda_prefix_eosmgv(mc,nc,ui,gc,dc,rho,enrg,alph,nx,pres,temp,cs,s) ! in :lambda_mie_gruneisen:MieGruneisen.F
            use payette__user__routines
            integer, optional,check(len(rho)>=mc),depend(rho) :: mc=len(rho)
            integer :: nc
            real dimension(*) :: ui
            real dimension(*) :: gc
            real dimension(*) :: dc
            real dimension(mc) :: rho
            real dimension(mc),depend(mc) :: enrg
            real dimension(mc,nx),depend(mc) :: alph
            integer, optional,check(shape(alph,1)==nx),depend(alph) :: nx=shape(alph,1)
            real dimension(mc),depend(mc) :: pres
            real dimension(mc),depend(mc) :: temp
            real dimension(mc),depend(mc) :: cs
            real dimension(mc,8),depend(mc) :: s
            intent(callback) migerror
            external migerror
            intent(callback) migmessage
            external migmessage
        end subroutine lambda_prefix_eosmgv
    end interface 
end python module lambda_mie_gruneisen

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
