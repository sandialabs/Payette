#!/usr/bin/env python

import sys
import os
from subprocess import Popen
from os.path import join, realpath, split, splitext
import tarfile

_file = realpath(__file__)
fdir, exe = split(_file)
usage = """{0}: create release of Payette in Payette.tar.gz
usage: {0}""".format(exe)

argv = sys.argv[1:]

if any(x in ("-h", "-help", "--help") for x in argv):
    sys.exit(usage)

# root directory of Payette
payette_dir = realpath(join(fdir, "../"))
if payette_dir not in sys.path:
    sys.path.insert(0, payette_dir)

# import clean_payette and version number, clean Payette
from configure import clean_payette, __version__
clean_payette()

# files to exlcude from archive
excluded_files = [".gitignore", ".gitattributes"]
excluded_exts = [".gz", ".tar"]
excluded_dirs = [".git"]
cchars = "#"
for line in open(join(fdir, "../.gitignore"), "r").readlines():
    line = line.strip()
    if not line.split():
        continue
    elif line[0] in cchars:
        continue
    if line[0:2] == "*.":
        excluded_exts.append(line[1:])
    elif "*" in line:
        continue
    else:
        excluded_files.extend(line.split())
    continue

def exclude(fnam):
    if any(x in fnam for x in excluded_files):
        return True
    if any(x in fnam for x in excluded_dirs):
        return True
    if "Examples" in fnam and any(x in fnam
                                  for x in (".opt/", ".perm/", ".enum/")):
        return True
    if splitext(fnam)[1] in excluded_exts:
        return True
    return False

# create archive of Payette
arcnam = "Payette_v" + __version__
print "Creating " + arcnam + "tar.gz archive"
tar = tarfile.open(os.path.join(fdir, "../",arcnam + ".tar.gz"), "w:gz")
tar.add(payette_dir, arcnam, exclude=exclude)
tar.close()
print arcnam + "tar.gz archive created"
