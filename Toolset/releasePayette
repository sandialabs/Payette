#!/usr/bin/env python

# The MIT License

# Copyright (c) 2011 Tim Fuller

# License for the specific language governing rights and limitations under
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import sys
import os
from subprocess import Popen
from os.path import join, realpath, split, splitext
import tarfile

"""Clean Payette and creat an archive file of the Payette root directory"""

_file = realpath(__file__)
fdir, exe = split(_file)
usage = """{0}: create release of Payette in Payette.tar.gz
usage: {0}""".format(exe)

argv = sys.argv[1:]

if any(x in ("-h", "-help", "--help") for x in argv):
    sys.exit(usage)

# root directory of Payette
payette_dir = realpath(join(fdir, "../"))
if payette_dir not in sys.path:
    sys.path.insert(0, payette_dir)

# import clean_payette and version number, clean Payette
from configure import clean_payette, __version__
clean_payette()

# files to exlcude from archive
excluded_files = [".gitignore", ".gitattributes"]
excluded_exts = [".gz", ".tar"]
excluded_dirs = [".git"]
cchars = "#"
for line in open(join(fdir, "../.gitignore"), "r").readlines():
    line = line.strip()
    if not line.split():
        continue
    elif line[0] in cchars:
        continue
    if line[0:2] == "*.":
        excluded_exts.append(line[1:])
    elif "*" in line:
        continue
    else:
        excluded_files.extend(line.split())
    continue

def exclude(fnam):
    if any(x in fnam for x in excluded_files):
        return True
    if any(x in fnam for x in excluded_dirs):
        return True
    if "Examples" in fnam and any(x in fnam
                                  for x in (".opt/", ".perm/", ".enum/")):
        return True
    if splitext(fnam)[1] in excluded_exts:
        return True
    return False

# create archive of Payette
arcname = "Payette_v" + __version__
print "Creating " + arcname + "tar.gz archive"
tar = tarfile.open(os.path.join(fdir, "../",arcname + ".tar.gz"), "w:gz")
tar.add(name=payette_dir, arcname=arcname, exclude=exclude)
tar.close()
print arcname + "tar.gz archive created"
