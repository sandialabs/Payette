(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    467501,      13608]
NotebookOptionsPosition[    379231,      11451]
NotebookOutlinePosition[    422505,      12373]
CellTagsIndexPosition[    422432,      12368]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Kayenta demo test notebook.", "Title",
 CellChangeTimes->{{3.464032699560199*^9, 3.4640327026312437`*^9}}],

Cell[TextData[{
 "This mathematica notebook permits you to view graphs generated with the \
stand-alone demo program that runs the Kayenta multi-purpose plasticity \
model. It also lets you perform algebra on the output.  For this notebook to \
work, you MUST execute ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " from the \"demo\" directory."
}], "Text",
 CellChangeTimes->{{3.405471862324162*^9, 3.405471863113358*^9}, {
  3.487094995934558*^9, 3.4870950030602303`*^9}}],

Cell[TextData[{
 StyleBox["Notes for people who have never used ",
  FontSize->16],
 StyleBox["Mathematica",
  FontSize->16,
  FontSlant->"Italic"],
 StyleBox[": ",
  FontSize->16],
 "\n\nRED and GRAY sections (like this one) are comments that should help you \
figure out what the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook is trying to do. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a symbolic mathematics program, which means that it can perform \
operations on symbolic equations and matrices. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " input files are called \"notebooks\". This file is a notebook that uses ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s ability to read, plot, and manipulate data arrays. In particular, output \
generated by the \"demo\" program is imported, plotted, and combined with \
other data for extensive evaluation of the results.\n\nMathematica input \
commands are organized in \"blocks.\" Each block is marked by a blue bracket \
on the far right side of this window -->. Nested blocks display nested \
brackets. DOUBLE-CLICKING a blue bracket will open a block to display its \
contents (or, if the block is already open, as this one is, double-clicking \
will close the block to hide the contents. Try it now . . . double-click the \
outside bracket to hide this block, then double-click again to restore this \
block.\n\nDOUBLE-clicking merely shows or hides the commands.  To actually ",
 StyleBox["execute",
  FontSlant->"Italic"],
 " a block of commands, SINGLE-click the outer blue bar and then type \
SHIFT-return (alternatively, you can hit  ENTER on the numeric KEYPAD). A \
block of commands does NOT need to be opened for you to execute it.  For \
example, the first section below says \"execute this block AT LEAST \
ONCE....\".  That block contains obscure mathematica commands that define \
functions and other environment information that is used elsewhere in this \
file. You don't need to look at the stuff in that block, but you do need to \
execute it before working in other sections. In the \"at least once\" \
section, just SINGLE click the outer blue bar (which selects the block \
without expanding it). Then type SHIFT-return (or keypad ENTER). Whenever you \
start mathematica, you will need to re-execute the \"at least once\" block. \
You don't need to re-execute it again at any time thereafter during your  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session. (but it's harmless if you execute the \"at least once\" commands \
more than once.) The very first time that you execute any section, you will \
probably hear a bunch of beeps (or screen flashes), but these are usually \
just ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " warning about variables having similar spellings."
}], "Text",
 CellChangeTimes->{{3.405471872754719*^9, 3.405471892394442*^9}}],

Cell[TextData[{
 "\n\n\nHOW TO USE THIS MATHEMATICA FILE:\nMake sure you run the demo program \
first by typing \"make\" in a Unix command terminal while in the demo \
directory.  If you want to define your own strain paths, then you can  edit \
\"demo.inp\" and type make again. See the README in the demo directory for \
further info about running the demo program. The demo program is written so \
that you can simulate numerous load paths all at once, which is a simple form \
of regression testing that is quite convenient if you are working on some \
aspect of the material model and you wish to ensure that your modifications \
do not adversely affect any of your standard verification tests. The very \
first line in the demo.inp file lists the input set(s) that were executed \
when you ran the demo program. If, for example, the first line of the demo \
program reads \"run  091210U  091210S\" then the demo program will run the \
simulations for the uniaxial (uu) test case and the shear (ss) test case. You \
can view the results from the demo run by selecting and executing the \
appropriate ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " input set listed below. If, for example, the first line of the demo.inp \
file contains 060626S, then you can view the results by executing the section \
below named \"(ss) Simple Shear Strain\". If you add your own runs to the \
demo.inp file, then you should add a new section to this mathematica notebook \
to review the results. \n\nFurther tutorials about ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " are scattered throughout this ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook. The best commented one is usually the first one.\n\n\nIf you \
ever simply want a plain old text file containing the value of each field \
variable at each timestep,  look into the demo/091210 directory where you \
will find a subdirectory that is named the same as the run name. Within each \
run subdirectory are histories for each variable.  These directories also \
contain a  file called \"VelocityTable\" that shows the velocity boundary \
condition that you would use to simulate the same calculation in a \
finite-element code.\n\nPlease direct questions to Rebecca Brannon, \
brannon@mech.utah.edu.\nThanks for your interest in the Kayenta multipurpose \
plasticity model (as well as in other models investigated under this \
effort)."
}], "Text",
 CellChangeTimes->{{3.405471762452331*^9, 3.4054718477350388`*^9}, {
  3.405471940448125*^9, 3.405471971957062*^9}, {3.405472007364237*^9, 
  3.405472014346229*^9}, {3.405472058088613*^9, 3.405472067794127*^9}, {
  3.405472106905678*^9, 3.405472111251707*^9}, {3.4121743054117107`*^9, 
  3.412174308629487*^9}, {3.4694943946720963`*^9, 3.469494395057259*^9}, {
  3.487095021917446*^9, 3.487095029452335*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
execute this block AT LEAST ONCE before each session\
\>", "Title",
 CellChangeTimes->{{3.469499088264916*^9, 3.469499091271289*^9}, {
  3.499436701286121*^9, 3.499436703812307*^9}, {3.538150525279831*^9, 
  3.5381505268882236`*^9}}],

Cell[CellGroupData[{

Cell["Initialize this session", "Section",
 CellChangeTimes->{{3.421761494309936*^9, 3.4217615031890078`*^9}}],

Cell[TextData[{
 "Red and gray cells like this one are text cells available for extended \
comments to the users of this notebook. \nYou can add your own comments \
sections by using Format:Style:Text (or Alt-7  shortcut)\n\n\n\nThe following \
pre-loads a set of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " commands. This resets ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " so that any existing variables are cleared, and it also defines some \
useful functions, variables, and constants (summarized in the output table \
that is written when the initialization cell is executed).\n\nAnything \
defined in this table may be re-defined in this \"execute at least once\" \
section. You only have to execute this section once, but it is harmless to \
execute it more than once (the result will be that all variables will be \
cleared as if you were starting a new session)\n\nIMPORTANT: After executing \
the \"<< ../ModelDrivers/med/demo/init091210.m\" command, the output will \
show a large table listing several default constants, variables, and \
functions.  See, for example, the entry for the useful function called \
\"showme\". The table gives a brief summary of this function, and you can get \
the precise definition of this command by using the command\n\n\t?showme \n\n\
\nAnother important entry in the following table is ",
 StyleBox["rundir",
  FontWeight->"Bold"],
 ". If ",
 StyleBox["rundir",
  FontWeight->"Bold"],
 " is not currently matching the directory in which the demo program was \
executed, then redefine ",
 StyleBox["rundir",
  FontWeight->"Bold"],
 " to the directory that you were in when you you ran the demo program. See \
below for information on re-defining defaults."
}], "Text",
 CellChangeTimes->{{3.4054712542440443`*^9, 3.4054713751182404`*^9}, {
  3.4054721361916656`*^9, 3.4054722848785*^9}, {3.487095947313435*^9, 
  3.4870960404300117`*^9}, {3.487096076223599*^9, 3.487096225788035*^9}}],

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "initKayenta.m"}]}], "Input",
 CellChangeTimes->{{3.427220916259082*^9, 3.427220918312327*^9}, {
  3.469494378644496*^9, 3.469494382142758*^9}, {3.5002321566537113`*^9, 
  3.500232177815464*^9}, {3.500232562869422*^9, 3.5002325665911207`*^9}, {
  3.5002326118816757`*^9, 3.5002326162315617`*^9}, {3.500232650761747*^9, 
  3.500232658779972*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Re-define anything to suit your tastes", "Section",
 CellChangeTimes->{{3.405712537563953*^9, 3.405712564079433*^9}, {
  3.4057222827132187`*^9, 3.405722286688745*^9}}],

Cell["\<\
Some of the key default settings (established in initKayenta.m) are shown \
above.
Below, individual ones are checked to recall their value and, if their value \
(as set in the above initialization command) is not what you want, then the \
value is merely re-defined here by you.\
\>", "Text",
 CellChangeTimes->{{3.40547100885728*^9, 3.405471238134646*^9}, {
  3.405471415246998*^9, 3.405471692910063*^9}, {3.421761012398093*^9, 
  3.4217611687905693`*^9}, {3.421761546804925*^9, 3.421761607948585*^9}, {
  3.469494393476363*^9, 3.469494393604515*^9}, {3.487096276742239*^9, 
  3.487096558562099*^9}, {3.53814111526191*^9, 3.538141127819974*^9}}],

Cell["demo output directory name", "Text",
 CellChangeTimes->{{3.42176134059332*^9, 3.4217613554301023`*^9}}],

Cell[BoxData["rundir"], "Input",
 CellChangeTimes->{{3.4054722957971697`*^9, 3.405472296400432*^9}}],

Cell[TextData[{
 "If there is anything in the above huge table that you ",
 StyleBox["might",
  FontSlant->"Italic"],
 " want to change, you can simply ask again for its value.\nThen this line \
will be available as a reminder that you might want to change it.  Try \
changing numCol to a smaller number, and then see what happens when you later \
execute the \"setRun\" function. The resulting table of plots will have the \
number of columns that you specify with numCol"
}], "Text",
 CellChangeTimes->{{3.4057125961445227`*^9, 3.405712712295076*^9}}],

Cell[BoxData["numCol"], "Input",
 CellChangeTimes->{{3.405712578347693*^9, 3.405712579880719*^9}}],

Cell[BoxData["demodir"], "Input",
 CellChangeTimes->{{3.487096622898924*^9, 3.487096624028241*^9}}],

Cell["\<\
If you want basic plots of the output, you can set MakeGraphs=True (which \
slows down execution of this notebook, so use it only when you need it).
The exported graphics will be placed in the output directory for the run \
(e.g., 091210/A).
This is useful when you are trying to help someone install the Kayenta model \
into their own host code.
You can provide them with the entire output directory, which will show them \
exactly how the model was run and will give them graphs of what their code \
should give once they've installed the model correctly.\
\>", "Text",
 CellChangeTimes->{{3.405722296314044*^9, 3.405722316464219*^9}, {
   3.405722373360224*^9, 3.405722474703085*^9}, 3.4694943936666317`*^9, {
   3.487096652993719*^9, 3.487096714360968*^9}}],

Cell[BoxData["MakeGraphs"], "Input",
 CellChangeTimes->{{3.405722319061616*^9, 3.4057223207392483`*^9}, {
  3.405722441674883*^9, 3.405722447107006*^9}, {3.405722479289513*^9, 
  3.405722480256508*^9}, {3.405722668938195*^9, 3.405722669591833*^9}}],

Cell[CellGroupData[{

Cell["\<\
Define easier-to-type \"aliases\" for variables or anything else you want\
\>", "Subsubsection",
 CellChangeTimes->{{3.412173833970531*^9, 3.412173849766296*^9}, {
  3.42601757916306*^9, 3.426017585794669*^9}}],

Cell["\<\
BRANNONTABLES: This mathematica file contains an illustration of how to use \
tables in demo.inp to create any forcing function (besides the usual strain \
vs. time).   The case studies illustrate how to create a time-temperature \
table. By naming the column header (in demo.inp) with an official migtionary \
term, storage allocation was performed automatically. The driver subroutine \
d091210 was modified to access the prescribed temperature history and to \
interpolate the temperature table at each time step, saving the result into \
into the FV array.

According to the Run.log file, the plot keyword for temperature is \"tmpr\".  \
If you don't like the official plot keyword, you can always enter an alias \
command like the following:\
\>", "Text",
 CellChangeTimes->{{3.4121735739673157`*^9, 3.412173822822976*^9}, {
   3.41217385625457*^9, 3.41217387410233*^9}, {3.412174416418686*^9, 
   3.412174420842451*^9}, {3.412174621177034*^9, 3.412174628131109*^9}, {
   3.4121946249614277`*^9, 3.412194902539637*^9}, {3.4121949457490892`*^9, 
   3.412194979131153*^9}, {3.412196067093409*^9, 3.4121962181310577`*^9}, 
   3.419872431514811*^9, 3.46949439376334*^9, {3.487096754251967*^9, 
   3.4870967920727053`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"BRANNONTABLES", ",", 
   RowBox[{"temp", ":=", "tmpr"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412173876394164*^9, 3.412173885232217*^9}, {
  3.4121960417607117`*^9, 3.412196042613411*^9}, {3.419872465706353*^9, 
  3.4198724770640717`*^9}}],

Cell["\<\
With this alias defined, you can access temperature with either tmpr or temp.\
\
\>", "Text",
 CellChangeTimes->{{3.412196223044382*^9, 3.4121962453138323`*^9}, {
  3.4870968126883917`*^9, 3.4870968185843477`*^9}}],

Cell["\<\


The variable \"mkReport\" is set to \"True\" if you want to output graphics \
for a report or for any other purpose.
Leaving it false speeds up execution.\
\>", "Text",
 CellChangeTimes->{{3.487096827264965*^9, 3.487096977399167*^9}}],

Cell[BoxData[
 RowBox[{"mkReport", "=", "False"}]], "Input",
 CellChangeTimes->{{3.426017590198358*^9, 3.426017595500284*^9}, {
  3.4870968459336767`*^9, 3.487096846867188*^9}}],

Cell["\<\
The following function queries if mkReport is true.
If mkReport = = True, then the graphic is exported to an external file.
Otherwise, a reminder that mkReport is False is written to the screen.\
\>", "Text",
 CellChangeTimes->{{3.487096916423586*^9, 3.487096925431583*^9}, {
  3.4870969822632437`*^9, 3.487097033590825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reportGraphic", "[", 
   RowBox[{"name_", ",", "grafik_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"mkReport", ",", 
    RowBox[{"Export", "[", 
     RowBox[{"name", ",", "grafik"}], "]"}], ",", 
    "\"\<mkReport is false\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.426017598276876*^9, 3.426017666726763*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["meridian push",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.5380628649252443`*^9, 3.538062866236827*^9}}],

Cell["\<\
This is the post-processing block for the input set called 091210a. To read \
in and display the output, single click the outer blue bracket (on the far \
right side of this window) and type SHIFT-return or KEYPAD-enter.   You can \
run each command one at a time by clicking on the command and hitting \
SHIFT-return (or KEYPAD-enter).\
\>", "Text",
 CellChangeTimes->{{3.405712741134989*^9, 3.405712778118788*^9}, 
   3.4694943938203077`*^9}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[TextData[{
 "The function \"setRun\" is a special purpose function that is NOT a \
standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command. \nThe ",
 StyleBox["setRun",
  FontWeight->"Bold"],
 " function is defined in the intializations for this notebook (i.e., in the \
\"../ModelDrivers/med/demo/init091210.m\" file invoked in the \
execute-at-least-once section). \n\nThe argument to the ",
 StyleBox["setRun",
  FontWeight->"Bold"],
 " function is the ",
 StyleBox["runID",
  FontWeight->"Bold"],
 " letter used in the demo.inp file.\nThe ",
 StyleBox["setRun",
  FontWeight->"Bold"],
 " function reads the output from the demo driver and imports it into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for postprocessing.\n\nThe first bits of output from setRun show \
background information about the run (where it was run, what compile options \
were used etc.)\nThe next results are plots of all variables requested in the \
plot input set of the demo.inp file.   Search the demo.inp file for the \
string\n\n\t--- >>basic Kayenta plot options\n\nThe variables in that input \
set are all available to manipulate in ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "after ",
 StyleBox["setRun",
  FontWeight->"Bold"],
 " has been executed.\nThe ones listed in that input set without a negative \
sign are plotted automatically as part of ",
 StyleBox["setRun",
  FontWeight->"Bold"],
 " output.\nYou can plot any output variable by using the \"showme\" command. \
After the setRun command, try \n\tshowme[eps11]\n\tshowme[",
 "eps11",
 ",sig11]\n\nIn addition to the output variables requested in the Kayenta \
plot options input block, this notebook constructs some additional ones from \
the standard raw output variables (e.g., the pressure \"pres\" is computed \
directly from the individual stress components, and it can compared with the \
Kayenta internal variable I1/3 to check for consistency)."
}], "Text",
 CellChangeTimes->{{3.405721786320178*^9, 3.405721924606145*^9}, {
   3.405721960043784*^9, 3.405721984307097*^9}, {3.405722080860409*^9, 
   3.405722225209051*^9}, 3.469494393882371*^9, {3.487097081030841*^9, 
   3.4870970841907597`*^9}, {3.48709711583044*^9, 3.4870973771886187`*^9}, {
   3.487097676299036*^9, 3.48709778613824*^9}, {3.538143525882422*^9, 
   3.5381435260322733`*^9}}],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-meridian-push\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.53806286915136*^9, 3.538062886111823*^9}, {
  3.538149446867919*^9, 3.538149457994419*^9}, {3.538149517022524*^9, 
  3.5381495180672007`*^9}, {3.5381496032353373`*^9, 3.53814960432195*^9}, {
  3.538150482346809*^9, 3.538150483840311*^9}}],

Cell[CellGroupData[{

Cell["\<\
Other information of a general \"overview\" nature available after having \
called setRun...\
\>", "Subsubsection",
 CellChangeTimes->{{3.412173276583268*^9, 3.4121733052266006`*^9}}],

Cell[TextData[{
 "At any time, you can type ",
 StyleBox["props",
  FontWeight->"Bold"],
 " to get a list of material properties.\nProperties in braces { }, if any, \
have been internally computed.\nThe other properties are the values used \
within the demo driver.  \n\nThe values may be different from what you \
entered in your demo.inp file because the constituive model might have set \
defaults for unspecified parameters or it might have adjusted values for \
internal consistency or sometimes because properties are completely \
re-defined by the model."
}], "Text",
 CellChangeTimes->{{3.405715377174794*^9, 3.405715400976487*^9}, {
  3.4057171235351133`*^9, 3.405717178992675*^9}, {3.4057172384964848`*^9, 
  3.405717319943283*^9}, {3.405722730535417*^9, 3.4057229858163033`*^9}, {
  3.4870978221860027`*^9, 3.487097848124366*^9}}],

Cell[BoxData["props"], "Input",
 CellChangeTimes->{{3.405717045340568*^9, 3.405717045667149*^9}, {
  3.427758136100793*^9, 3.427758136857869*^9}, {3.427758246860304*^9, 
  3.427758247576519*^9}}],

Cell[BoxData["demodir"], "Input",
 CellChangeTimes->{{3.538140774747999*^9, 3.538140775600871*^9}, {
  3.538143052243103*^9, 3.538143057240684*^9}, {3.538143331180193*^9, 
  3.5381433403620653`*^9}}],

Cell["\<\
Material properties are available as variables. The original ones (i.e., the \
user-defined values in the demo.inp file) are given by the keyword appended \
by \"U\".
For example, B0U is the user-specified value for B0.  The modified material \
properties are appended with M, such as B0M.\
\>", "Text"],

Cell[BoxData[{"B0M", "\[IndentingNewLine]", "B0U"}], "Input",
 CellChangeTimes->{{3.405722996123748*^9, 3.405722997284285*^9}, {
  3.487098044813629*^9, 3.48709804734732*^9}}],

Cell[BoxData[{"PEAKI1IU", "\[IndentingNewLine]", "PEAKI1IM"}], "Input",
 CellChangeTimes->{{3.487098122707489*^9, 3.487098139835698*^9}}],

Cell[TextData[{
 "At any time, you can type ",
 StyleBox["plotable",
  FontWeight->"Bold"],
 " to get a list of keywords used for plottable, time varying, variables.\n\
The bottom part of the list shows variables that were automatically computed \
by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " during the setRun process."
}], "Text",
 CellChangeTimes->{{3.4057230274504433`*^9, 3.405723106770269*^9}}],

Cell[BoxData["plotable"], "Input",
 CellChangeTimes->{{3.405718383477603*^9, 3.405718387521476*^9}, {
   3.405719890174159*^9, 3.4057198967390413`*^9}, {3.405720216537266*^9, 
   3.405720219694046*^9}, {3.4057217317710953`*^9, 3.40572173331069*^9}, 
   3.405721764657617*^9}],

Cell[TextData[{
 "You can plot any of these by name by using the \"showme\" function (which \
was defined in the setRun initialization process).\nUsing this function with \
only argument will give you the variable vs. plot dump number.\n\t\t",
 StyleBox["Here in this notebook, we will say cycle number, but we really \
mean plot dump number (controled by \"emit divisions\" in the demo.inp)",
  FontSlant->"Italic"],
 "\n\t\t",
 StyleBox["Plot dump number  (controlled by \"emit divisions\" is not the \
same as cycle number (controlled by \"divisions\").\n\t\tThe number of cycles \
is never less than the number of dumps. \n\t\tUsually the number of cycles is \
much larger than the number of dumps.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.405723114603223*^9, 3.405723178441628*^9}, {
  3.4870982092169933`*^9, 3.48709838799025*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "SHEAR", "]"}]], "Input",
 CellChangeTimes->{{3.40571869400045*^9, 3.405718701040415*^9}, {
  3.405722712585948*^9, 3.405722713486835*^9}}],

Cell[TextData[{
 "Two arguments gives you one variable plotted versus another.\nBelow, for \
example, is a plot of stress vs. strain.\nNote that we can do algebra with \
these variables (a negative is introduced below to plot ",
 StyleBox["compressive",
  FontSlant->"Italic"],
 " stress vs ",
 StyleBox["compressive",
  FontSlant->"Italic"],
 " strain)."
}], "Text",
 CellChangeTimes->{{3.405723154520802*^9, 3.405723302961047*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", 
   RowBox[{"-", "sig11"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.40571545549774*^9, 3.405715462113864*^9}, {
   3.405715525017796*^9, 3.405715584316687*^9}, 3.5381435261244*^9}],

Cell["\<\
The meridianALL functions (also defined in the initialization) shows the \
stress path in blue relative to the yield surface in green and the limit \
surface in dashed cyan. 
For problems that have yield surface evolution, a family of evolving yield \
surfaces will be visible.

Depending on the problem, an meridian plot will be boring if most of the \
stress motion is in the octahedral plane.

The argument \"scaler\" is not a misspelling of scalar. It is the scale \
factor for the axes. In this case, we used the value of \"scale-r\" which was \
a computed property (whose value showed in the list when we typed \"props\") \
intended to be an overall measure of the scale in the Lode-radial direction.\
\>", "Text",
 CellChangeTimes->{{3.4057233111970787`*^9, 3.405723389920525*^9}, {
  3.405723579554853*^9, 3.405723603415049*^9}, {3.405723912483178*^9, 
  3.4057240109961767`*^9}}],

Cell[BoxData["scaler"], "Input",
 CellChangeTimes->{{3.435812565742909*^9, 3.435812569458808*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], 
  "]"}], "\[IndentingNewLine]", "scaler"}], "Input",
 CellChangeTimes->{{3.405714763719276*^9, 3.40571477203969*^9}, {
  3.405714810921156*^9, 3.4057148154944687`*^9}, {3.405723926359714*^9, 
  3.405723928503913*^9}}],

Cell[BoxData[
 RowBox[{"stressSpace", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4198754968511744`*^9, 3.419875499986068*^9}}],

Cell["\<\
Below, I am reminding myself of the material properties that define the limit \
surface.\
\>", "Text",
 CellChangeTimes->{{3.405723525251273*^9, 3.4057235471755667`*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], "}"}]}], "Input"],

Cell["\<\
The elasticInfo function summarizes elastic input values and illustrate how \
the tangent bulk and shear modulus vary with time as a result of nonlinear \
elasticity and/or elastic-plastic coupling.\
\>", "Text",
 CellChangeTimes->{{3.405723404223914*^9, 3.40572345831986*^9}}],

Cell[BoxData[
 RowBox[{"elasticInfo", "[", "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Verification of temperature history prescribed using the new BRANNONTABLES \
capability\
\>", "Subsubsection",
 CellChangeTimes->{{3.4121732134412403`*^9, 3.412173228555031*^9}, {
   3.4121744444603987`*^9, 3.412174471033935*^9}, 3.419872427739595*^9}],

Cell["\<\
The official plot keyword for temperature is \"tmpr\", but (in the \
execute-at-least-once section) we defined \"temp\" to mean the same thing.\
\>", "Text",
 CellChangeTimes->{{3.412173311817711*^9, 3.412173548232709*^9}, {
   3.412173912020423*^9, 3.4121740391331987`*^9}, {3.412174691880734*^9, 
   3.412174747669549*^9}, 3.412189623755271*^9, {3.4121959002443*^9, 
   3.412195964796143*^9}, {3.412196274364511*^9, 3.4121962751859407`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"BRANNONTABLES", ",", 
   RowBox[{"showme", "[", 
    RowBox[{"time", ",", "temp"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4121734956882668`*^9, 3.41217350054671*^9}, {
  3.412174043439118*^9, 3.41217405206306*^9}, {3.419872489634431*^9, 
  3.419872498464202*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell["\<\
The \"Closer Look\" section is basically a playground where analyses or plots \
of particular interest to a particular run can be worked on.\
\>", "Text",
 CellChangeTimes->{{3.405723649811983*^9, 3.405723689550185*^9}}],

Cell["\<\
Here is a sequence of plots showing the octahedral path through time.
The size change in the octahdral limit surface is caused by pressure change, \
not hardening.
If there were hardening, you would see the family of earlier yield surfaces.\
\>", "Text",
 CellChangeTimes->{{3.405723749600322*^9, 3.405723830997059*^9}, {
  3.412194576516996*^9, 3.412194581758214*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.405723730661563*^9, 3.4057237377628937`*^9}, {
   3.427758281821542*^9, 3.427758286514307*^9}, 3.427758377733149*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RKM", ",", "J3TYPEM"}], "}"}]], "Input",
 CellChangeTimes->{{3.427758387317052*^9, 3.427758388303933*^9}, {
  3.427758578913063*^9, 3.427758586126878*^9}}],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "eps11"}], ",", 
    RowBox[{"-", "sig11"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.538143526328619*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["crazy path",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538138221055326*^9, 3.53813822201595*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayneta-crazy-path\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.462288117712826*^9, 3.4622881252225447`*^9}, {
  3.462295352306896*^9, 3.462295352515676*^9}, {3.538138225714386*^9, 
  3.5381382387706547`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.462294600115218*^9, 3.462294656214176*^9}, 
   3.462295357509166*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.462294319326929*^9, 3.4622943389424047`*^9}, {
   3.46229444285279*^9, 3.462294474254509*^9}, 3.462295362251163*^9}],

Cell["\<\
At this point, all field variables are available for plotting. If you can't \
remember a plot variable keyword, just look at the \".out\" file. You can \
also define derived variables. For example, below we define the the \
volumetric strain to equal the trace of the strain:\
\>", "Text"],

Cell[BoxData["plotable"], "Input",
 CellChangeTimes->{{3.4111571621692867`*^9, 3.4111571654863663`*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"10", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4057238880833178`*^9, 3.405723899238615*^9}, {
  3.405724024618676*^9, 3.405724040066435*^9}, {3.430000625793789*^9, 
  3.43000062667103*^9}}],

Cell[BoxData[
 RowBox[{"stressSpace", "[", "]"}]], "Input",
 CellChangeTimes->{{3.419875633472638*^9, 3.4198756410652733`*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<stressSpaceMERID.gif\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.434064468222826*^9, 3.4340644925814*^9}, {
  3.434064555519524*^9, 3.434064575093349*^9}, {3.4340646578895273`*^9, 
  3.434064665236734*^9}, {3.4340648534548397`*^9, 3.434064856451529*^9}}],

Cell[CellGroupData[{

Cell["\<\
Verification of temperature history prescribed using the new BRANNONTABLES \
capability\
\>", "Subsubsection",
 CellChangeTimes->{{3.4121732134412403`*^9, 3.412173228555031*^9}, {
   3.4121744444603987`*^9, 3.412174471033935*^9}, 3.4121896237550488`*^9, 
   3.419872428603051*^9}],

Cell["\<\
The official plot keyword for temperature is \"tmpr\", but (in the \
execute-at-least-once section) we also defined \"temp\" to mean the same \
thing.\
\>", "Text",
 CellChangeTimes->{{3.412173311817711*^9, 3.412173548232709*^9}, {
   3.412173912020423*^9, 3.4121740391331987`*^9}, {3.412174691880734*^9, 
   3.412174747669549*^9}, 3.412189623755271*^9, {3.4121959002443*^9, 
   3.412195964796143*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"BRANNONTABLES", ",", 
   RowBox[{"showme", "[", 
    RowBox[{"time", ",", "temp"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4121734956882668`*^9, 3.41217350054671*^9}, {
   3.412174043439118*^9, 3.41217405206306*^9}, 3.412189623755677*^9, {
   3.419872521495511*^9, 3.4198725397445917`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[
 RowBox[{"octoLOHI", "[", "scaler", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xright", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"I1", "/", "P0M"}], "]"}]}], ";", 
  RowBox[{"CrushCurve", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"P3M", " ", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"P1M", "+", 
            RowBox[{"P2M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}], ")"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "xright"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "P3U"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "green", "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.405724105223065*^9}],

Cell[BoxData[""], "Input"],

Cell["\<\
Above, we computed the pressure vs. porosity curve that is implied by the \
user parameters (you have to know the physics of the model to know the \
formula).
Below, we show the actual pressure vs. porosity path computed within the \
constitutive model. 
It is not a cause for concern that the blue and green lines don't coincide. \
They are supposed to coincide only for pure hydrostatic loading.\
\>", "Text",
 CellChangeTimes->{{3.405724122033293*^9, 3.4057242793865*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CrushCalc", "=", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"I1", "/", "P0M"}], ",", 
     RowBox[{"P3M", "+", "EQPV"}]}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{"CrushCurve", ",", "CrushCalc"}], "]"}]}]], "Input"],

Cell["\<\
The following shows that this loading path involves changes in direction in \
the octahedral plane.
Also, note that the green yield surface is translating in stress space via \
kinematic hardening.\
\>", "Text",
 CellChangeTimes->{{3.4057243004744377`*^9, 3.4057243582340918`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "40"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.405724287609976*^9, 3.405724292007509*^9}, {
  3.426288429931155*^9, 3.426288430575914*^9}, {3.426289540899338*^9, 
  3.426289541067019*^9}}],

Cell["Export a movie", "Text",
 CellChangeTimes->{{3.434065607747601*^9, 3.434065614075573*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"npic", "=", "100"}], ";", 
   RowBox[{"incstep", "=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<octo.avi\>\"", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
      "]"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.434065366926613*^9, 3.434065380000187*^9}, {
  3.434065421452655*^9, 3.434065540936002*^9}, {3.434065572051877*^9, 
  3.434065588604432*^9}, {3.434065626869174*^9, 3.434065636616667*^9}, {
  3.434065724121181*^9, 3.4340657272873907`*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"demodir", ",", 
     RowBox[{"\"\<KinematicHardening\>\"", "<>", "\"\<.gif\>\""}]}], "]"}], 
   ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.4259388507116957`*^9, 3.4259389426131563`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"LodeXsig", ",", "LodeYsig"}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["multileg biaxial plane strain",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.5381382960900927`*^9, 3.538138314962813*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-multileg-biaxial-plane-strain\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.5381382817242527`*^9, 3.538138305348977*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405724400845516*^9, 3.405724409705206*^9}, {
  3.419876024115718*^9, 3.419876025169764*^9}, {3.419876356048936*^9, 
  3.419876356823812*^9}}],

Cell[BoxData[
 RowBox[{"stressSpace", "[", "]"}]], "Input",
 CellChangeTimes->{{3.419875633472638*^9, 3.4198756410652733`*^9}}],

Cell[BoxData[
 RowBox[{"meridianALLold", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}]], "Input",
 CellChangeTimes->{3.405724418836302*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.405724434822562*^9, 3.40572444050282*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RKM", ",", "J3TYPEM"}], "}"}]], "Input",
 CellChangeTimes->{{3.427758387317052*^9, 3.427758388303933*^9}, {
  3.427758578913063*^9, 3.427758586126878*^9}}],

Cell[CellGroupData[{

Cell["\<\
Verification of temperature history prescribed using the new BRANNONTABLES \
capability\
\>", "Subsubsection",
 CellChangeTimes->{{3.4121732134412403`*^9, 3.412173228555031*^9}, {
   3.4121744444603987`*^9, 3.412174471033935*^9}, 3.4121896237550488`*^9, 
   3.419872429259013*^9}],

Cell["\<\
This run used the same time-temperature history as problem \"A\", but with \
different column scaling to match up the temperature history with the time \
range of the strain history.  Other differences: whereas problem \"A\" used \
the >> syntax to define a long table within the demo.inp file, this one used \
the insert syntax to import the table from an external file.  In addition to \
changing the time scaling from from the one in \"A\", some of the data rows \
were deleted. This is reflected by the \"cropped\" straight line in the \
following figure, which verifies the interpolation scheme.\
\>", "Text",
 CellChangeTimes->{{3.4121964495767107`*^9, 3.412196681462823*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"BRANNONTABLES", ",", 
   RowBox[{"showmeAll", "[", 
    RowBox[{"time", ",", "temp"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412194219025351*^9, 3.412194222210351*^9}, {
  3.412194325004663*^9, 3.412194352050057*^9}, {3.419872550360208*^9, 
  3.419872553167714*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell["Strength ratio:", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RKfnt", "[", 
     RowBox[{"RKM", ",", 
      RowBox[{"I1", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "A2M", ",", "A3M", ",", "A4M"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814291222831*^9, 3.43581434064721*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["compression followed by pure shear I",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.4111680428820047`*^9, 3.411168050901607*^9}, {
  3.41116936638028*^9, 3.4111693676838417`*^9}, {3.5381383113390636`*^9, 
  3.538138312018607*^9}}],

Cell["works with tempTTT.dat, but not tempTTT2.dat", "Text",
 CellChangeTimes->{{3.421679768598105*^9, 3.421679773492107*^9}, {
  3.421679829261766*^9, 3.4216798379555273`*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-compression-pure-shear\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.4111680683556633`*^9, 3.411168069275083*^9}, {
  3.538138318149088*^9, 3.5381383315012608`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "YIELD", "]"}]], "Input",
 CellChangeTimes->{{3.424791218832135*^9, 3.424791224289617*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"10", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405724400845516*^9, 3.405724409705206*^9}, {
  3.424785615573906*^9, 3.424785616210997*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"7.88193188926866`*^91", "+", 
    RowBox[{
     SqrtBox["2"], " ", "z"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.`", ",", "2.225627515418537`"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.424782805639299*^9, 3.424782864728773*^9}, 
   3.4247828981780167`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"5.*^16", "+", 
    RowBox[{"2", "z"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.424782902144348*^9, 3.4247830059408627`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", "prinlineTXC", "]"}]], "Input",
 CellChangeTimes->{{3.424782778456092*^9, 3.424782784876151*^9}}],

Cell[BoxData[
 RowBox[{"meridianALLold", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}]], "Input",
 CellChangeTimes->{3.405724418836302*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.405724434822562*^9, 3.40572444050282*^9}}],

Cell[BoxData["props"], "Input",
 CellChangeTimes->{{3.4111681269024487`*^9, 3.411168127270989*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell["Strength ratio:", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RKfnt", "[", 
     RowBox[{"RKM", ",", 
      RowBox[{"I1", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "A2M", ",", "A3M", ",", "A4M"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["(cc) compression followed by pure shear II",
 FontColor->RGBColor[
  0.9289387350270848, 0.3054703593499657, 0.9652399481193256]]], "Title",
 CellChangeTimes->{{3.4111680428820047`*^9, 3.411168050901607*^9}, {
  3.4111693599245253`*^9, 3.4111693647320023`*^9}}],

Cell["Works with tempTTT.dat, but not tempTTT2.dat", "Text",
 CellChangeTimes->{{3.4216798025619507`*^9, 3.421679824099757*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<cc\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4111680683556633`*^9, 3.411168069275083*^9}, {
  3.411169375002912*^9, 3.411169375833455*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405724400845516*^9, 3.405724409705206*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.405724434822562*^9, 3.40572444050282*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["orthotropic, rate dep, hardening (Erik\
\[CloseCurlyQuote]s triumph)",
 FontColor->RGBColor[0, 0, 1]]], "Title",
 CellChangeTimes->{{3.5381383664989862`*^9, 3.538138395758993*^9}, {
  3.53817872974459*^9, 3.538178730373817*^9}}],

Cell["\<\
Uniaxial strain path with orthotropic joints. This problem caused problems in \
older versions of Kayenta because the path happens to just \"skim\" the yield \
surface and it involves really small joint spacing (therefore lots of joint \
closure). Previously, we had problems with this calculation because slight \
integration errors at large time steps produced massive errors in results \
because the joint compliance calculation was letting the joint closure \
WRONGLY exceed VMAX. The repair was to use an estimate for stress at the end \
of the step. Erik Strack gets credit for guessing that this was the source of \
the problem.\
\>", "Text",
 CellChangeTimes->{3.48709489373945*^9}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-rate-dep-hardening\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.538138379751052*^9, 3.538138398295761*^9}, {
  3.538178739530304*^9, 3.538178746883116*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405724506164983*^9, 3.405724513303348*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4057245237177963`*^9, 3.405724528645886*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["stress-strain paths", "Section"],

Cell["\<\
We know that the plot of sig11 should initially equal the 11 strain times the \
constrained uniaxial elastic stiffness. This constrained stiffness is given \
by uniStiff = K+4G/3, where K and G are the bulk and shear moduli of the \
initial porous material. These are automatically computed in the \
initialization phase, as you can see if you use the \"props\" command\
\>", "Text",
 CellChangeTimes->{{3.405724798071918*^9, 3.4057248418555737`*^9}}],

Cell[BoxData[{"uniStiffU", "\[IndentingNewLine]", "uniStiffM"}], "Input",
 CellChangeTimes->{{3.405724734007935*^9, 3.405724760305142*^9}}],

Cell["\<\
Now we can plot the 11 stress normalized by the uniaxial constrained \
stiffness. If the code is working correctly, we then expect the slope of this \
normalized curve to initially equal 1.0. To verify this, we will plot the \
normalized curve and superimpose it with a plot of y=x.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".05"}], ",", ".05"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash", ",", "medLine"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4057248624522943`*^9, 3.405724862946855*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"makeme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", 
      FractionBox["sig11", "uniStiffM"]}]}], "]"}], ",", "straight"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.40572487043641*^9, 3.538143526424358*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stress ratio plots", "Section"],

Cell[BoxData["props"], "Input",
 CellChangeTimes->{{3.40572514181669*^9, 3.4057251488462877`*^9}}],

Cell[BoxData[{
 RowBox[{"PoisFacU", "=", 
  RowBox[{"PoisU", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisU"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"PoisFacM", "=", 
  RowBox[{"PoisM", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisM"}], ")"}]}]}]}], "Input"],

Cell["\<\
For uniaxial strain in the linear elastic regime, sig22 = PoisFac*sig11
Let's check...\
\>", "Text"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", ".05"}], ",", ".03"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell["\<\
The following plot shows that the stress ratio is correct during the elastic \
loading. Of course, it must change upon yielding.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"straight", ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"sig11", "/", "uniStiffM"}], ",", 
     RowBox[{"sig22", "/", 
      RowBox[{"(", 
       RowBox[{"PoisFacM", " ", "uniStiffM"}], ")"}]}]}], "]"}]}], 
  "]"}]], "Input"],

Cell["\<\
Here's the axial and lateral stresses, each plotted against the axial strain:\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{
      RowBox[{"-", "sig11"}], "/", "uniStiffU"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{
      RowBox[{"-", "sig22"}], "/", "uniStiffU"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.405725219970872*^9, 3.4057252287282887`*^9}, {
  3.5381435265416527`*^9, 3.5381435266087418`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DTRA-ACTD Multi-leg biaxial plane STRESS",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.405726652914505*^9, 3.405726653074217*^9}, {
  3.420051565517915*^9, 3.4200515673333893`*^9}, {3.5381384533656282`*^9, 
  3.538138453894322*^9}}],

Cell[TextData[StyleBox["Runs, but gets wrong result. This would be a good one \
to figure out what's wrong with Mohr-Coulomb option.",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.421680294848246*^9, 3.421680318072279*^9}}],

Cell["This is a special verification calculation.", "Text",
 CellChangeTimes->{{3.405725251880287*^9, 3.405725262076065*^9}}],

Cell[CellGroupData[{

Cell["Define quantities that apply only for this problem", "Section"],

Cell["\<\
Here I am manually double-checking the user-input values by letting \
mathematica compute them\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"cohesion", "=", "15.7"}], "\[IndentingNewLine]", 
 RowBox[{"frictionAngle", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"29", "Degree"}], ",", "10"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DilationAngle", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"14", " ", "Degree"}], ",", "10"}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{"scalef", "=", 
  RowBox[{"N", "[", 
   RowBox[{"2", " ", 
    RowBox[{
     RowBox[{"Sqrt", "[", "3", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"Sin", "[", "frictionAngle", "]"}]}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"scaleg", "=", 
  RowBox[{"N", "[", 
   RowBox[{"2", " ", 
    RowBox[{
     RowBox[{"Sqrt", "[", "3", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"Sin", "[", "DilationAngle", "]"}]}], ")"}]}]}], 
   "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{"a1", "=", 
  RowBox[{"scalef", "*", "cohesion", "*", 
   RowBox[{"Cos", "[", "frictionAngle", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"a4", "=", 
  RowBox[{"scalef", "*", 
   RowBox[{
    RowBox[{"Sin", "[", "frictionAngle", "]"}], "/", 
    "3"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"rk", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"Sin", "[", "frictionAngle", "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"Sin", "[", "frictionAngle", "]"}]}], ")"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", "=", 
   RowBox[{"a3", "=", "0"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"a1pf", "=", 
  RowBox[{"scaleg", "*", "cohesion", "*", 
   RowBox[{"Cos", "[", "DilationAngle", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"a4pf", "=", 
  RowBox[{"scaleg", "*", 
   RowBox[{
    RowBox[{"Sin", "[", "DilationAngle", "]"}], "/", 
    "3"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"rkpf", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"Sin", "[", "DilationAngle", "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"Sin", "[", "DilationAngle", "]"}]}], ")"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2pf", "=", 
   RowBox[{"a3pf", "=", "0"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"tensileLimit", "=", 
  FractionBox[
   RowBox[{"2", " ", "cohesion", " ", 
    RowBox[{"Cos", "[", "frictionAngle", "]"}]}], 
   RowBox[{"1", "+", 
    RowBox[{"Sin", "[", "frictionAngle", "]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"compresLimit", "=", 
  FractionBox[
   RowBox[{"2", " ", "cohesion", " ", 
    RowBox[{"Cos", "[", "frictionAngle", "]"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Sin", "[", "frictionAngle", "]"}]}]]}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", 
  "\"\<kayenta-dtraactd-multileg-biaxial-plane-stress\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5381384383181963`*^9, 3.5381384472474422`*^9}, {
  3.538151414377411*^9, 3.538151432843865*^9}}],

Cell["\<\
The following is a plot of the stress path in the meridional plane. It is a \
plot of r vs z, where r and z are the cylindrical LODE coordinates. (r=Sqrt[2 \
J2] and z=I1/Sqrt[3]). 

This plot has both axes non-dimensionalized for readability.

The blue line is the TXC limit surface.  Don't be fooled into thinking that \
the stress has not reached yield. For this problem, most of the stress states \
are TXE, not TXC. The limit surface for TXE is lower than for TXC.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405725315314293*^9, 3.405725324218207*^9}}],

Cell["\<\
The following shows two surfaces because the problem is non-associative. The \
light gray one is the \"potential\" surface.\
\>", "Text",
 CellChangeTimes->{{3.405725358448443*^9, 3.405725399362873*^9}}],

Cell[BoxData[{
 RowBox[{"octo", "[", 
  RowBox[{"scaler", ",", 
   RowBox[{"Max", "[", "I1", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"octo", "[", 
  RowBox[{"scaler", ",", 
   RowBox[{"Min", "[", "I1", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.406920085911619*^9, 3.406920088166738*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<OctahedralFlowYieldSurfs.gif\>\""}], ",", 
     "%"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "10"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.405725412402337*^9, 3.405725415848568*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<DTRAoctoPlot.gif\>\""}], ",", "%"}], 
    "]"}]}], "]"}]], "Input"],

Cell[BoxData["CTPSM"], "Input",
 CellChangeTimes->{{3.4299846743164873`*^9, 3.4299846755634108`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"PRES", "/", "B0U"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<volumetric strain\>\"", ",", "\"\<normalized pressure\>\""}],
     "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.405725448417613*^9}],

Cell["\<\
Let's verify that the out-of-plane stress really is zero.
These are not as small as they should be!\
\>", "Text",
 CellChangeTimes->{{3.40572546968714*^9, 3.405725498482305*^9}, {
  3.405725639245119*^9, 3.405725647945112*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"scaler", ",", "scalez"}], "}"}]}], "Input",
 CellChangeTimes->{{3.405725543652444*^9, 3.405725603821292*^9}}],

Cell[BoxData[{
 RowBox[{"showme", "[", "QSSIGZZ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "sig33", "]"}]}], "Input",
 CellChangeTimes->{{3.40572550080779*^9, 3.405725535133192*^9}}],

Cell["\<\
Plastic intervals occured where the following plot is non-zero.  The value of \
SHEAR ranges from 0 when the trial stress rate is tangential to the yield \
surface to 1 when it is normal to the yield surface. Because all values of \
SHEAR are smaller than 1 in this plot, the trial stress rate is hitting the \
yield surface at a non-90-degree angle.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "SHEAR"}], "]"}]], "Input"],

Cell["\<\
The initial phase has a Lode angle -30, which corresponds to triaxial \
extension (TXE). Then it moves briefly to +30 (triaxial compression, TXC). \
Then it bounces around all over the place.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "LODE"}], "]"}]], "Input"],

Cell["\<\
The CRACK variable becomes nonzero if the stress has reached a failure point.
If CRACK==1, then the stress is at a tensile cut-off.
If CRACK==2, then the stress is at the shear limit surface.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", "CRACK", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "eps33", "]"}]], "Input",
 CellChangeTimes->{3.538143557133438*^9}],

Cell["\<\
VSTN is the exact volumetric strain consistent with the user-specified \
Seth-Hill strain parameter (kappa), whereas vstrain is the trace of the \
strain tensor. The two are nearly identical for small strain problems like \
this.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", "VSTN", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "vstrain", "]"}]], "Input"],

Cell["\<\
This is the value of the 33 strain rate that was required to keep sig33 equal \
to zero:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", "d33", "]"}]], "Input"],

Cell["Here is the showcase plot that everyone is interested in. ", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "sig11"}], ",", 
   RowBox[{"-", "sig22"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"code", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"sig11", "/", "compresLimit"}], ",", 
    RowBox[{"sig22", "/", "compresLimit"}]}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sig11prdef", "=", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", 
      RowBox[{"-", "33.513513513513516`"}], ",", 
      RowBox[{"-", "0.3989703989703983`"}], ",", 
      RowBox[{"-", "4.559721706178188`"}], ",", "0.`", ",", "0.`", ",", 
      RowBox[{"-", "38.89961389961388`"}], ",", 
      RowBox[{"-", "53.3066219468393`"}], ",", 
      RowBox[{"-", "53.3066219468393`"}], ",", 
      RowBox[{"-", "53.306621946839314`"}], ",", 
      RowBox[{"-", "38.60134692702172`"}], ",", 
      RowBox[{"-", "35.153961831489966`"}], ",", 
      RowBox[{"-", "18.119934784546302`"}], ",", 
      RowBox[{"-", "17.615099444859226`"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sig22prdef", "=", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", 
      RowBox[{"-", "33.513513513513516`"}], ",", 
      RowBox[{"-", "37.30373230373232`"}], ",", 
      RowBox[{"-", "53.30662194683919`"}], ",", 
      RowBox[{"-", "53.30662194683919`"}], ",", 
      RowBox[{"-", "53.30662194683919`"}], ",", 
      RowBox[{"-", "47.920521560738806`"}], ",", 
      RowBox[{"-", "45.92570506189219`"}], ",", 
      RowBox[{"-", "2.842170943040401`*^-14"}], ",", 
      RowBox[{"-", "5.684341886080802`*^-14"}], ",", 
      RowBox[{"-", "53.306621946839016`"}], ",", 
      RowBox[{"-", "53.306621946839016`"}], ",", "12.208866695251857`", ",", 
      "12.384031448241075`"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nlegz", "=", 
    RowBox[{"Length", "[", "sig11prdef", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"anal", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
         "sig11prdef", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "compresLimit"], ",", 
        FractionBox[
         RowBox[{
         "sig22prdef", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "compresLimit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "nlegz"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01`", "]"}], ",", "red"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.405725750414654*^9, 3.405725838429719*^9}, 
   3.4057259039913187`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sig11prdef", "=", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "33.5135`"}], ",", 
     RowBox[{"-", "0.39897`"}], ",", 
     RowBox[{"-", "4.55972`"}], ",", 
     RowBox[{"-", "4.55972`"}], ",", 
     RowBox[{"-", "43.4593`"}], ",", 
     RowBox[{"-", "53.3066`"}], ",", 
     RowBox[{"-", "53.3066`"}], ",", 
     RowBox[{"-", "39.6995`"}], ",", 
     RowBox[{"-", "35.1313`"}], ",", 
     RowBox[{"-", "18.0951`"}], ",", 
     RowBox[{"-", "17.5211`"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sig22prdef", "=", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "33.5135`"}], ",", 
     RowBox[{"-", "37.3037`"}], ",", 
     RowBox[{"-", "53.3066`"}], ",", 
     RowBox[{"-", "53.3066`"}], ",", 
     RowBox[{"-", "47.9205`"}], ",", 
     RowBox[{"-", "46.557`"}], ",", 
     RowBox[{"-", "3.9808`"}], ",", 
     RowBox[{"-", "53.3066`"}], ",", 
     RowBox[{"-", "53.3066`"}], ",", "12.2175`", ",", "12.4166`"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlegz", "=", 
   RowBox[{"Length", "[", "sig11prdef", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"anal", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
         "sig11prdef", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "compresLimit"], ",", 
        FractionBox[
         RowBox[{
         "sig22prdef", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "compresLimit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "nlegz"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "ExactStyle"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.405725790833074*^9, 3.405725794141055*^9}, {
  3.405725842763454*^9, 3.4057258851824503`*^9}, {3.405725928587346*^9, 
  3.405725962606736*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"anal", ",", "code"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
          "sig11prdef", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{
          "sig22prdef", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nlegz"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.02`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
          "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "sig22", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.01`", "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"2", " ", "72", " ", "4"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4200517835083*^9, 3.4200518006631117`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<SIG22vsSIG11exact.gif\>\""}], ",", "%"}], 
    "]"}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"sig11", "/", "compresLimit"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"sig22", "/", "compresLimit"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"sig33", "/", "compresLimit"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "LODE"}], "]"}]}], "Input",
 CellChangeTimes->{{3.405726034846621*^9, 3.405726038043692*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A2U", ",", "A4U", ",", "CRU", ",", "RKU"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A2PFU", ",", "A4PFU", ",", "CRPFU", ",", "RKPFU"}], 
  "}"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A2M", ",", "A4M", ",", "CRM", ",", "RKM"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A2PFM", ",", "A4PFM", ",", "CRPFM", ",", "RKPFM"}], 
  "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Hugoniot strain",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538151221794973*^9, 3.5381512223649607`*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-hugoniot-strain\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.53815121214065*^9, 3.538151217488665*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"20", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405726085730054*^9, 3.405726107905846*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4057261200192747`*^9, 3.405726123723473*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rootJ2back", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ALXX", "^", "2"}], "+", 
       RowBox[{"ALYY", "^", "2"}], "+", 
       RowBox[{"ALZZ", "^", "2"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ALXY", "^", "2"}], "+", 
          RowBox[{"ALYZ", "^", "2"}], "+", 
          RowBox[{"ALXZ", "^", "2"}]}], ")"}]}]}], ")"}], "/", "2"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "rootJ2back", "]"}]}], "Input",
 CellChangeTimes->{3.405726144470326*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"ALXX", "+", "ALYY", "+", "ALZZ"}], "]"}]], "Input",
 CellChangeTimes->{3.4057261483709583`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["stress-strain paths", "Section"],

Cell[BoxData[
 RowBox[{"showhis", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", "\"\<-eps11\>\""}], "]"}]], "Input",
 CellChangeTimes->{
  3.405726151579636*^9, {3.538143526708961*^9, 3.538143526775885*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\</home/rmbrann/strain_time.gif\>\"", ",", "%"}], "]"}]], "Input",\

 CellChangeTimes->{{3.4057263463361464`*^9, 3.40572634915941*^9}}],

Cell[BoxData[
 RowBox[{"showhis", "[", 
  RowBox[{
   RowBox[{"-", "sig11"}], ",", "\"\<-sig11\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.405726451809215*^9}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\</home/rmbrann/stress_time.gif\>\"", ",", "%"}], "]"}]], "Input",\

 CellChangeTimes->{{3.405726436712154*^9, 3.405726439855516*^9}}],

Cell[BoxData[
 RowBox[{"showhis", "[", 
  RowBox[{"YIELD", ",", "\"\<YIELD\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.4057264566622477`*^9}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\</home/rmbrann/YIELD_time.gif\>\"", ",", "%"}], "]"}]], "Input",\

 CellChangeTimes->{{3.405726443536024*^9, 3.405726445150889*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", 
   RowBox[{"-", "sig11"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<-eps11\>\"", ",", "\"\<-sig11\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.4057264611513157`*^9, {3.538143526878663*^9, 3.538143526943152*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\</home/rmbrann/stress_strain.gif\>\"", ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4057264647913837`*^9, 3.405726466742605*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"sigm", ",", "sigs"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", "PRES"}], "]"}]], "Input",
 CellChangeTimes->{3.405726472621894*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".05"}], ",", ".05"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash", ",", "medLine"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.405726609961998*^9, 3.4057266103538437`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"makeme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", 
      FractionBox["sig11", "uniStiffM"]}]}], "]"}], ",", "straight"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.405726599259763*^9, 3.538143527047433*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"eps11", ",", "sig22"}], "]"}]], "Input",
 CellChangeTimes->{3.538143527163583*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"I1Mpa", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"sig11", "+", "sig22", "+", "sig33"}], ")"}]}], "/", 
    RowBox[{"10", "^", "6"}]}]}], ";", 
  RowBox[{"I1Mpa", "[", 
   RowBox[{"[", "lastep", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", "I1Mpa"}], "]"}]], "Input",
 CellChangeTimes->{3.538143527261444*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stress ratio plots", "Section"],

Cell[BoxData[{
 RowBox[{"PoisFacU", "=", 
  RowBox[{"PoisU", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisU"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"PoisFacM", "=", 
  RowBox[{"PoisM", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisM"}], ")"}]}]}]}], "Input"],

Cell["\<\
For uniaxial strain in the linear elastic regime, sig22 = PoisFac*sig11
Let's check...\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".05"}], ",", ".03"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{3.4057265903782587`*^9}],

Cell["\<\
The following plot shows that the stress ratio is correct during the elastic \
loading. Of course, it must change upon yielding.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"straight", ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"sig11", "/", "uniStiffM"}], ",", 
     RowBox[{"sig22", "/", 
      RowBox[{"(", 
       RowBox[{"PoisFacM", " ", "uniStiffM"}], ")"}]}]}], "]"}]}], 
  "]"}]], "Input"],

Cell["\<\
Here's the axial and lateral stresses, each plotted against the axial strain:\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{
      RowBox[{"-", "sig11"}], "/", "uniStiffU"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{
      RowBox[{"-", "sig22"}], "/", "uniStiffU"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.405726636585046*^9, 3.405726641151359*^9}, {
  3.5381435273626223`*^9, 3.538143527426819*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Isotropic compression *",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.4632444680304747`*^9, 3.463244472917324*^9}, {
  3.538151253642144*^9, 3.5381512615576677`*^9}}],

Cell[TextData[{
 "The following line tells ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " which directory to use when looking for the data. This input set is for \
the isotropic (ii) simulation, so we set runid equal to \"I\". Then next line \
constructs the location that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will look for the data files."
}], "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-isotropic-compression\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.538151240872381*^9, 3.538151250385569*^9}}],

Cell[BoxData["demodir"], "Input",
 CellChangeTimes->{{3.4259355751122627`*^9, 3.425935575883387*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4215208591644793`*^9, 3.4215208751481647`*^9}, {
   3.421671479530601*^9, 3.4216714861761513`*^9}, {3.421677465577385*^9, 
   3.421677491127741*^9}, 3.5381411433515387`*^9}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", "QSSIGXX"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", "sig11"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4212986464292803`*^9, 3.42129867007978*^9}, {
  3.421521084375846*^9, 3.421521120579275*^9}, {3.4215213876282387`*^9, 
  3.421521409817584*^9}, {3.421526211331169*^9, 3.421526216791993*^9}, {
  3.421527627929579*^9, 3.421527632118389*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Look at results in detail", "Section"],

Cell[CellGroupData[{

Cell["More details", "Subsection",
 CellChangeTimes->{{3.421301387869121*^9, 3.421301392161104*^9}}],

Cell["The meridian plots are boring", "Text",
 CellChangeTimes->{{3.4057266935232887`*^9, 3.405726700489711*^9}}],

Cell[BoxData["NEWXSV"], "Input",
 CellChangeTimes->{{3.4216776437908916`*^9, 3.421677645372017*^9}}],

Cell[BoxData[{"meridpath", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405726666141821*^9, 3.4057267104189672`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", "vstrain"}]}], "]"}]], "Input",
 CellChangeTimes->{3.400438979075107*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"-", "EQPV"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"sigm", "/", "scaler"}], "]"}]], "Input",
 CellChangeTimes->{{3.4262938438111067`*^9, 3.42629385830182*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xright", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"I1", "/", "P0M"}], "]"}]}], ";", 
  RowBox[{"CrushCurve", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"P3M", " ", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"P1M", "+", 
            RowBox[{"P2M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}], ")"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "xright"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "P3U"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.04", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".7", ",", ".9", ",", ".1"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.405727196209754*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CrushCalc", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
          "I1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "P0M"], ",", 
         RowBox[{"P3M", "+", 
          RowBox[{
          "EQPV", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.01`", "]"}], "}"}]}]}], "]"}]}], ";", 
  RowBox[{"crushp", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"CrushCurve", ",", "CrushCalc"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.405727204412306*^9, 3.405727205121471*^9}, {
  3.420051809994252*^9, 3.420051810763009*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<crushCurve.gif\>\""}], ",", "%"}], "]"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.46403265257934*^9, 3.464032664033148*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"PRES", ",", "porosity"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<crushp.PDF\>\"", ",", "crushp"}], "]"}]], "Input",
 CellChangeTimes->{{3.405727233601192*^9, 3.405727235240459*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "EQPV"}], "/", "P3U"}], "]"}]], "Input",
 CellChangeTimes->{{3.4200521121666613`*^9, 3.420052129859811*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"E", "^", 
   RowBox[{"(", "EQPV", ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.405727271194995*^9, 3.405727302198112*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "porosity", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "EQPV"}], ",", 
   RowBox[{"PRES", "*", 
    RowBox[{"3", "/", "scaleI1"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", "QSSIGZZ"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", "sig33"}]}], "]"}]], "Input"],

Cell["\<\
The ordinate is scaled so that it plots pressure divided by the elastic limit \
pressure.
The abscissa is volumetric strain divided by volumetric strain at the elastic \
limit.
Pore collapse commences when this curve passes through the point (1,1)\
\>", "Text"],

Cell[BoxData[
 RowBox[{"crushPvsE", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"-", 
          RowBox[{
          "vstrain", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         RowBox[{"-", 
          FractionBox["P0U", 
           RowBox[{"3", " ", "B0U"}]]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
          "PRES", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          FractionBox["P0U", "3"]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<strain/crushStrain\>\"", ",", "\"\<pressure/crushPressure\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"8", " ", "72"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<stress_strain.gif\>\""}], ",", 
     "crushPvsE"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"bkmodU", "=", 
  RowBox[{"B0U", "+", "B1U"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"PRES", ",", 
   RowBox[{
    RowBox[{"-", "vstrain"}], "-", 
    RowBox[{"PRES", "/", "bkmodU"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "rho", "]"}]], "Input"],

Cell["The following is supposed to be numerical noise", "Text",
 CellChangeTimes->{{3.405727342440942*^9, 3.40572735363696*^9}}],

Cell[BoxData[
 RowBox[{"showcy", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"PRES", "+", 
     RowBox[{"I1", "/", "3"}]}], ")"}], "/", "bkmodU"}], "]"}]], "Input",
 CellChangeTimes->{{3.405727360322402*^9, 3.4057273699756413`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"EQPV", "-", "computedEVP"}], "]"}]], "Input"],

Cell["\<\
If run linear elastic, the following plot should give zero (within precision \
error)\
\>", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"EVOL", "-", "EQPV"}], ")"}], "-", 
   RowBox[{"I1", "/", 
    RowBox[{"(", 
     RowBox[{"3", "B0M"}], ")"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"B0U", ",", "B1U", ",", "B2U", ",", "B3U", ",", "B4U"}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"EVOL", "-", "EQPV"}], ")"}], "-", 
   RowBox[{"I1", "/", 
    RowBox[{"(", 
     RowBox[{"3", "B0M"}], ")"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["(i)*",
  FontColor->RGBColor[1., 0.1334401464866102, 0.12603952086671244`]],
 StyleBox[" Isotropic compression",
  FontColor->RGBColor[
   0.9457999542229343, 0.3001449607080186, 0.9652857251850157]]
}], "Title"],

Cell[TextData[{
 "The following line tells ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " which directory to use when looking for the data. This input set is for \
the isotropic (ii) simulation, so we set runid equal to \"I\". Then next line \
constructs the location that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will look for the data files."
}], "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<i\>\"", "]"}]], "Input"],

Cell[BoxData[{"meridpath", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405727433659453*^9, 3.405727468550252*^9}}],

Cell[BoxData[
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "2.0*^8", ",", "zbarMax", ",", "0", ",", "1*^8"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.405727477439831*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "vstrain"}], "]"}]], "Input",
 CellChangeTimes->{{3.424799593516717*^9, 3.424799599297192*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "KAPPA"}], "]"}]], "Input",
 CellChangeTimes->{{3.424799668275667*^9, 3.424799669098415*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"I1", "/", "CTI1M"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4247996782357817`*^9, {3.4357794374525623`*^9, 3.435779444160571*^9}, 
   3.43577947465126*^9}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<crushEvsTIME.PDF\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.405727491055954*^9, 3.405727493047014*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"-", "EQPV"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"I1", "/", "P0M"}], "]"}]], "Input",
 CellChangeTimes->{{3.424797470924705*^9, 3.424797483623597*^9}}],

Cell[BoxData[{
 RowBox[{"xright", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "[", 
    RowBox[{"I1", "/", "P0M"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CrushCurve", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"P3M", " ", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"P1M", "+", 
            RowBox[{"P2M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}], ")"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "xright"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "P3U"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.04", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".7", ",", ".9", ",", ".1"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.405727504184108*^9, 3.405727504879212*^9}, {
  3.424797495682065*^9, 3.424797518207103*^9}, {3.424797560546384*^9, 
  3.4247975626873007`*^9}}],

Cell[BoxData[{
 RowBox[{"CrushCalc", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"I1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "P0M"], ",", 
        RowBox[{"P3M", "+", 
         RowBox[{
         "EQPV", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.01", "]"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"crushp", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"CrushCurve", ",", "CrushCalc"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4057275136159573`*^9, 3.4057275139528913`*^9}, {
   3.420051820583674*^9, 3.4200518216026773`*^9}, {3.42479981274014*^9, 
   3.4247998147349463`*^9}, 3.427757431840371*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<crushCurve.gif\>\""}], ",", "%"}], "]"}]}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"PRES", ",", "porosity"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "I1", "]"}]], "Input",
 CellChangeTimes->{{3.424799950862523*^9, 3.424799954326467*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "YIELD", "]"}]], "Input",
 CellChangeTimes->{{3.424799934875764*^9, 3.424799940295074*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<crushp.PDF\>\"", ",", "crushp"}], "]"}]], "Input",
 CellChangeTimes->{{3.405727528202301*^9, 3.4057275295666933`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "EQPV", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "EQPV"}], "/", "P3U"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"-", 
   RowBox[{"E", "^", 
    RowBox[{"(", "EQPV", ")"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "porosity", "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Look at results in detail", "Section"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "EQPV"}], ",", 
   RowBox[{"PRES", "*", 
    RowBox[{"3", "/", "scaleI1"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", "QSSIGZZ"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", "sig33"}]}], "]"}]], "Input"],

Cell["\<\
The ordinate is scaled so that it plots pressure divided by the elastic limit \
pressure.
The abscissa is volumetric strain divided by volumetric strain at the elastic \
limit.
Pore collapse commences when this curve passes through the point (1,1)\
\>", "Text"],

Cell[BoxData[
 RowBox[{"crushPvsE", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"-", 
          RowBox[{
          "vstrain", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         RowBox[{"-", 
          FractionBox["P0U", 
           RowBox[{"3", " ", "B0U"}]]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
          "PRES", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          FractionBox["P0U", "3"]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<strain/crushStrain\>\"", ",", "\"\<pressure/crushPressure\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"8", " ", "72"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<stress_strain.gif\>\""}], ",", 
     "crushPvsE"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"bkmodU", "=", 
  RowBox[{"B0U", "+", "B1U"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"PRES", ",", 
   RowBox[{
    RowBox[{"-", "vstrain"}], "-", 
    RowBox[{"PRES", "/", "bkmodU"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "rho", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"PRES", "+", 
     RowBox[{"I1", "/", "3"}]}], ")"}], "/", "B0M"}], "]"}]], "Input",
 CellChangeTimes->{{3.4057275870485687`*^9, 3.405727591501978*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"EQPV", "-", "computedEVP"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"EVOL", "-", "EQPV"}], ")"}], "-", 
   RowBox[{"I1", "/", 
    RowBox[{"(", 
     RowBox[{"3", "B0M"}], ")"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"B0U", ",", "B1U", ",", "B2U", ",", "B3U", ",", "B4U"}], 
  "}"}]], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A2U", ",", "A2M"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"A2U", ",", " ", "A2M"}], "}"}], 
  RowBox[{"Sqrt", "[", "3", "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A2PFU", ",", "A2PFM"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"A2PFU", ",", "A2PFM"}], "}"}], 
  RowBox[{"Sqrt", "[", "3", "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "3", "]"}], ",", "10"}], "]"}]], "Input"],

Cell[BoxData[{"J3TYPEM", "\[IndentingNewLine]", "RKM"}], "Input"],

Cell[BoxData["myStyle"], "Input"],

Cell[BoxData["rundir"], "Input",
 CellChangeTimes->{{3.405727716714003*^9, 3.4057277260682096`*^9}}],

Cell[BoxData[
 RowBox[{"rundir", "<>", "\"\</Inserts/sandstrain.txt\>\""}]], "Input",
 CellChangeTimes->{
  3.405727795542325*^9, {3.500647327014804*^9, 3.500647332141984*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eglinEV", "=", 
   RowBox[{"-", 
    RowBox[{"ReadList", "[", 
     RowBox[{
      RowBox[{"rundir", "<>", "\"\</Inserts/sandstrain.txt\>\""}], ",", 
      "Number"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4057277101058893`*^9, 3.405727735111375*^9}, 
   3.4057277670663567`*^9, {3.4057278256690397`*^9, 3.405727851675995*^9}, {
   3.405727981512122*^9, 3.4057279822796803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eglinP", "=", 
   RowBox[{"-", 
    RowBox[{"ReadList", "[", 
     RowBox[{
      RowBox[{"rundir", "<>", "\"\</Inserts/sandstress.txt\>\""}], ",", 
      "Number"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.405728004693544*^9, 3.4057280456521177`*^9}}],

Cell[BoxData[
 RowBox[{"dataPlot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "eglinEV", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
        "eglinP", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "eglinEV", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"Thickness", "[", "0.02`", "]"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<volumetric strain\>\"", ",", "\"\<pressure (GPa)\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.405728095742979*^9, 3.4057281079535217`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dataPlot", ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "vstrain"}], ",", "PRES", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<volumetric strain\>\"", ",", "\"\<pressure (GPa)\>\""}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"16", " ", "42"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "YIELD", ",", "10", ",", "lastep"}], "]"}]], "Input",
 CellChangeTimes->{{3.4277571552596407`*^9, 3.4277572060889072`*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<sandfitTransient.gif\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.405728120132168*^9, 3.405728136980432*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Mohr test **",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538151286558631*^9, 3.538151289606707*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-mohr-test\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538151276244478*^9, 3.5381512826406307`*^9}}],

Cell[BoxData["meridpath"], "Input",
 CellChangeTimes->{{3.405728189583956*^9, 3.40572819701875*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.405728170707363*^9, 3.405728179491275*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.405728235470358*^9, 3.4057282392845697`*^9}}],

Cell[BoxData[{
 RowBox[{"OCTO1", "[", "lastep", "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<octahedralPath.gif\>\""}], ",", "%"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.405728245677635*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[
 RowBox[{"showcy", "[", "PRES", "]"}]], "Input"],

Cell["\<\
During the initial elastic loading, the demo program is expected to predict \
that sig11=2G eps11. The following plot verifies that the demo program is \
getting this behavior correctly. In the plot below, the dashed straight line \
shows the expected initial elastic response (stress equals strain times twice \
the shear modulus).\
\>", "Text",
 CellChangeTimes->{3.538143527586381*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"SHEAR", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3`", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData["RKM"], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "YIELD"}], "]"}]], "Input"],

Cell[TextData[{
 "As derived in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook MohrTest.nb, the exact solution for the stress for 1<t<2 is"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sigExact", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8.673617379884035`*^-19"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.8940903367135724`*^8", "-", 
            RowBox[{"3241.9861166811734`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"12.332929881283906`", " ", "t"}]]}], "+", 
            RowBox[{"170423.60756007454`", " ", 
             SqrtBox[
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"12.332929881283906`", " ", "t"}]]]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1.`", "\[InvisibleSpace]", "+", 
            RowBox[{"0.000017116322563084973`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"12.332929881283906`", " ", "t"}]]}]}], ")"}]}], "+", 
         RowBox[{"8.673617379884035`*^-19", " ", "t"}]}], ")"}], " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "1.`"}], ",", "1", ",", "0"}], 
        "]"}]}], "-", 
      RowBox[{"9.526279441628826`*^7", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"0.2009763595280343`", "\[LessEqual]", "t", "<", "1.`"}], 
         ",", "1", ",", "0"}], "]"}]}], "-", 
      RowBox[{"4.74`*^8", " ", "t", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", "0.2009763595280343`"}], ",", "1", ",", "0"}], 
        "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8.673617379884035`*^-19"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"7.686737937581697`*^7", "-", 
            RowBox[{"1315.6868599755087`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"12.332929881283906`", " ", "t"}]]}], "+", 
            RowBox[{"1.4424827320068271`*^6", " ", 
             SqrtBox[
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"12.332929881283906`", " ", "t"}]]]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "-", 
            RowBox[{"0.000017116322563084973`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"12.332929881283906`", " ", "t"}]]}]}], ")"}]}], "+", 
         RowBox[{"8.673617379884035`*^-19", " ", "t"}]}], ")"}], " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "1.`"}], ",", "1", ",", "0"}], 
        "]"}]}], "-", 
      RowBox[{"9.526279441628826`*^7", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"0.2009763595280343`", "\[LessEqual]", "t", "<", "1.`"}], 
         ",", "1", ",", "0"}], "]"}]}], "-", 
      RowBox[{"4.74`*^8", " ", "t", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", "0.2009763595280343`"}], ",", "1", ",", "0"}], 
        "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8.673617379884035`*^-19"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.1254165429554027`*^8", "-", 
            RowBox[{"1926.299256705665`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"12.332929881283906`", " ", "t"}]]}], "-", 
            RowBox[{"1.2720591244467525`*^6", " ", 
             SqrtBox[
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"12.332929881283906`", " ", "t"}]]]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "-", 
            RowBox[{"0.000017116322563084973`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"12.332929881283906`", " ", "t"}]]}]}], ")"}]}], "+", 
         RowBox[{"8.673617379884035`*^-19", " ", "t"}]}], ")"}], " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "1.`"}], ",", "1", ",", "0"}], 
        "]"}]}], "+", 
      RowBox[{"1.905255888325765`*^8", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"0.2009763595280343`", "\[LessEqual]", "t", "<", "1.`"}], 
         ",", "1", ",", "0"}], "]"}]}], "+", 
      RowBox[{"9.48`*^8", " ", "t", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", "0.2009763595280343`"}], ",", "1", ",", "0"}], 
        "]"}]}]}]}], "}"}]}], ";"}]], "Input"],

Cell["The exact solution for the Lode angle is derived as follows", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rExact", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"sigExact", ".", "sigExact"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Shat", "=", 
   RowBox[{"sigExact", "/", "rExact"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sin3t", "=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], 
        RowBox[{"Sqrt", "[", "6", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Shat", "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          RowBox[{"Shat", "[", 
           RowBox[{"[", "2", "]"}], "]"}], 
          RowBox[{"Shat", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"LODEexact", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "3"}], ")"}], 
    RowBox[{"ArcSin", "[", "sin3t", "]"}], " ", 
    RowBox[{"180", "/", "Pi"}]}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xact1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
     "sigExact", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.02`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0.4`", ",", "0.4`"}], "]"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"calc1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         
         RowBox[{
         "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008`", "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"xact2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
     "sigExact", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.02`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2`", ",", "1", ",", "0.2`"}], "]"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"calc2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         
         RowBox[{
         "sig22", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008`", "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"xact3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
     "sigExact", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.02`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.7`", ",", "0.7`", ",", "1"}], "]"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"calc3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         
         RowBox[{
         "sig33", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008`", "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"verifPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "xact1", ",", "calc1", ",", "xact2", ",", "calc2", ",", "xact3", ",", 
    "calc3", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<time\>\"", ",", "\"\<stress\>\""}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"8", " ", "72"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.406924855114623*^9, 3.4069249846130257`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<StressHistoryVerification.gif\>\""}], ",", 
     "verifPlot"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EQPSexact", "=", 
   RowBox[{"1.4142135623730951`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.007348469228349534`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.2009763595280343`"}], "+", "t"}], ")"}], " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"0.2009763595280343`", "\[LessEqual]", "t", "<", "1.`"}], 
         ",", "1.`", ",", "0.`"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "1.`"}], ",", "1.`", ",", "0.`"}], 
        "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.014978659039209396`", "\[InvisibleSpace]", "-", 
         RowBox[{"0.009107058404477335`", " ", "t"}], "+", 
         RowBox[{"0.0014768685936174728`", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"0.20465475271556385`", "\[InvisibleSpace]", "+", 
            RowBox[{"3.502936761547981`*^-6", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"12.332929881283906`", " ", "t"}]]}]}], "]"}]}]}], 
        ")"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.405728308269412*^9}],

Cell[BoxData[
 RowBox[{"xact", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"EQPSexact", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "ExactStyle"}]}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xact", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"EQPSexact", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "ExactStyle"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"calc", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         
         RowBox[{
         "EQPS", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"xact", ",", "calc", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"8", " ", "72"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.42005183187922*^9, 3.420051843530961*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<MohrTestMagPlStrain.gif\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.4057283173317842`*^9, 3.405728319504764*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xact", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"LODEexact", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "ExactStyle"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"calc", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         
         RowBox[{
         "LODE", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Thickness", "[", "0.01", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"xact", ",", "calc", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"8", " ", "72"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.406924718018818*^9, 3.406924757760194*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<MohrTestLODE.gif\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.405728327345271*^9, 3.405728329392679*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Quick check", "Section"],

Cell[BoxData[
 RowBox[{"Show", "[", "verifPlot", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Mohr test II",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538151303655027*^9, 3.538151307662924*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-mohr-test-ii\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5381513102109137`*^9, 3.538151318307226*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4057283473457317`*^9, 3.405728354842009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4057283678909817`*^9, 3.40572837177913*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"J3TYPEM", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", "RK0", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1min", "=", 
   RowBox[{"Min", "[", "I1", "]"}]}], ";", 
  RowBox[{"I1barmax", "=", 
   RowBox[{"-", "I1min"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1max", "=", 
   RowBox[{"Max", "[", "I1", "]"}]}], ";", 
  RowBox[{"I1barmin", "=", 
   RowBox[{"-", "I1max"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Ff", "[", 
    RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"I1bar", ",", "I1barmin", ",", "I1barmax"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RKfnt", "[", 
     RowBox[{"RKM", ",", 
      RowBox[{"I1", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "A2M", ",", "A3M", ",", "A4M"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showcy", "[", "PRES", "]"}], ";", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Min", "[", "PRES", "]"}], ",", 
    RowBox[{"Max", "[", "PRES", "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showcy", "[", 
    RowBox[{"sigs", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sqrt", "[", "2", "]"}], 
       RowBox[{"(", 
        RowBox[{"A1M", "-", "A3M"}], ")"}]}], ")"}]}], "]"}], ",", 
   RowBox[{"showcy", "[", "sigd22", "]"}]}], "]"}]], "Input"],

Cell["This is a plot of y=x for later use.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.015`"}], ",", "0.005`"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash", ",", "medLine"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4057283903559427`*^9, 3.405728412214745*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stressZEROyslope", "=", 
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{
      RowBox[{"-", "sig33"}], "/", 
      RowBox[{"(", 
       RowBox[{"4.", " ", "G0M"}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.405728397019268*^9, 3.538143527657275*^9}],

Cell["\<\
During the initial elastic loading, the demo program is expected to predict \
that sig11=2G eps11. The following plot verifies that the demo program is \
getting this behavior correctly. In the plot below, the dashed straight line \
shows the expected initial elastic response (stress equals strain times twice \
the shear modulus).\
\>", "Text",
 CellChangeTimes->{3.538143527787878*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"stressZEROyslope", ",", "straight"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"eps11", "+", "eps22", "+", "eps33"}], "]"}]], "Input",
 CellChangeTimes->{
  3.4057284242186337`*^9, {3.538143527844831*^9, 3.538143557225245*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "EQDOT", "]"}]], "Input",
 CellChangeTimes->{3.405728425191216*^9}],

Cell[BoxData[
 RowBox[{"showhis", "[", "EQPS", "]"}]], "Input",
 CellChangeTimes->{3.405728429823052*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"ROOTJ2", "/", 
   RowBox[{"(", 
    RowBox[{"A1M", "-", "A3M"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{3.405728432143857*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"LODE", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3`", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<mLODE.PDF\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.405728438392205*^9, 3.405728440007476*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"SHEAR", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.3`", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.015`", "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<mSHEAR.PDF\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.405728446144013*^9, 3.405728447543388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RKM", ",", "RK0"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "YIELD"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps22"}], ",", 
     RowBox[{"-", "sig11"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps22"}], ",", 
     RowBox[{"-", "sig22"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps22"}], ",", "sig33"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.538143542906046*^9, 3.538143543040015*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", "sig11"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps33", ",", 
     RowBox[{"-", "sig11"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5381435279444523`*^9, 3.538143557326519*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", "sig22"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps33", ",", 
     RowBox[{"-", "sig22"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.538143528006534*^9, 3.5381435574260683`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", "sig33"}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps33", ",", "sig33"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.538143528069202*^9, 3.5381435575465384`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", "sig11"}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", "sig22"}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", "sig33"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5381435281389093`*^9, 3.538143528257378*^9}}],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<mSIGvsE11.PDF\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.405728464127948*^9, 3.405728465647477*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "LODE"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<mLODE.PDF\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.405728471120397*^9, 3.405728472527278*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Nasty",
 FontColor->RGBColor[1, 0, 0]]], "Title",
 CellChangeTimes->{{3.538178853957238*^9, 3.5381788546742697`*^9}}],

Cell["\<\
This problem involves \"supernova\" type deformations.
The loading is triaxial with a 95% reduction in specimen length.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-nasty\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538151323694886*^9, 3.53815132792317*^9}}],

Cell["\<\
This problem involves massive strains. 
Below are the stretches (deformed length divided by initial length).
The length is reduced by a factor of about 0.05, which is a 95% reduction.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"E", "^", "eps11"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"E", "^", "eps22"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"E", "^", "eps33"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4057285494508142`*^9, 3.4057285510645323`*^9}, {
  3.538143528343486*^9, 3.538143557643169*^9}}],

Cell[BoxData[{
 RowBox[{"I1barmin", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"-", "I1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"I1barmax", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"-", "I1"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"limitPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Ff", "[", 
     RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"I1bar", ",", "I1barmin", ",", 
      RowBox[{"I1barmax", "/", "50"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "blue", "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "ROOTJ2", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"sigm", "/", "scaler"}], ",", 
   RowBox[{"sigs", "/", "scaler"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4057285871214857`*^9}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.405728590031959*^9, 3.405728606626206*^9}}],

Cell[BoxData[
 RowBox[{"stressSpace", "[", "]"}]], "Input",
 CellChangeTimes->{{3.420052544373501*^9, 3.420052552023929*^9}}],

Cell["\<\
TTTproblem: meridianALL plot showing motion of yield surface, but \
meridianALLbasic is not.
Answers very noisy compared to baseline\
\>", "Text",
 CellChangeTimes->{{3.4200524554558697`*^9, 3.420052507318489*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1:eJw9lnlYjekbx7OF6pznLSFZI4axZN/5hmQ3lpkmZIshDCH7JEJU9omRaRjL
IKNiKoamSJu0aN+3c06d6nRapJ8lW7/nfc91n/OP63O5ztP7nue+v5+vlbPr
kp9aGxgYpLYyMBD/vSuoRu34PRxjL1vdmt3G1Db5+sxHTV/CYeZwbugZzt1t
SqwNPR/iO7dcqDlvidzlZ9H2Edakb7Ea39bU9r85Jq0Hn3iExU45PU9wNs67
uX2K0b9Y6PhofybnFesnlX13+l9stTviZtnO1PbvxswFzsJjjLg8zm41548e
m/mJj3E8trH3dc5zxeO6PIG89YaxCs6/XxY/T+Dq6xzWw9DUVjNgRIegHhHo
OH3wMwfOE8IT9zz9MwJnqrI9znD2mbZGnd73P+wb6m8ex7ng1ful5bf+Q1KC
7Np7zoOczsa8HRiJNg1uUwe1N7XdLx0YiQDHGqNlnF/y0yxtonDj4W+9TnDu
1tZBPjQ0Cv7x+efCOLucr3PHmKeob7dnbynnx728tIsfP0XEiZDK9h1MbfnD
LV8/6RkUwdsabTg7Sg/4DPGhK+86cP6+/FZAXJ9o1Pc26O3O+fNd8QeJxuX2
KWuvcf6L/3p5N6PhcmXS4VjO88eJbxQN39ZVJ9Sc//cle59mwHP4HDnjZdjR
1PaPuD4Pdro8R0HBaK8BnO1O/lz16e5zjHLv9etMzrWLxSd8jiWrah+t48wv
j79QDB6obnw5zFm8nUvbYvDXoTDXK5ylx3sQgzVTOnZ5wlk6rjEG9lNMm7M4
j5I+sXj2Z1yfes5FzeIFxmJtQPCF9kamtkejk/gExWLFnPoVfTjzy+RXEIvw
5oUHx3PO4rfvOCEOMa/Gt3zH+RfzkFnKA3H4PCy2agPnftKBcUhJejz5oBHN
YxyWrvJv48fZTbqAeNyP/mNaoBHNZzw+bYz+FMk59u1AfsPxcAx5NjaD82Zp
XhPgc77n+wrOZtIDJqCb0cBpHzhHSPObAM/fmy2MjU1txacLT0yA/Sz3Iz05
G0nz/AJfRm7ztOEceqXhTsK8F9iYu6bbNM7Lpfl+gag7Txcs4dxaeuEXCGyV
bLXOmOY9EZuzb/u7cV4iDUwiNHYLHx41pvlPxMPkqwf8ON8QXzc7ES0+P2pv
GNM+vMSHSgujUM5vxOMcX2LRtE0F0ca0Hy8x8E3YijTO08XxL3oJ79C5fiXG
tC9JsN2y6YiWszS+q5LgETV6cLMx7U8SFB4RZw1NTG2VB8QLSULU9Hf/dDKh
fUpGXOYrvz6cR0gDnoyTWd3GDTWh/UpG863LVyZw9rw4g49MMjadNXg504T2
LQXy7Y0Rizln9BUvOAV/e7fsWmlC+5eCy1UhH1w4W/FpPl+Xgvefd8/aZUL7
mIoecU+dD3HeIa7H9lRcWaSe52tC+5mKoT0ntr3I+bk4fk2pMNzR6vSfJrSv
rzDm2O6qu5yl693zCjuT4szDTWh/X+FiqnmXp5yln6/5Fez2Hqp9YUL7nIab
CrPLGZylx3NPg8mAkh5FJrTfaVjYrXRfBWcD6ZOO8AqjkDoT2vd0jB2/NOod
58CEeXyj03E0+487LSa0/+kInpe2tYPM1HYR30azo+lYN+Q/wVRGeZCOKPvJ
57tx/rBUPDAdhi2dXlvJKB/SMWdL52Hfcr5mKS5EBnop3s4bKaO8yABq3OZO
5DxbuuAMPB9l9+10GeVHBp60taidw/n1HfEBM+Do4XdusYzyJAO7k1dbLOPs
v03coAz8bd372BoZ5UsG7q3ZlL2RMx8uvlKZMGnM6ugqo7zJRP7oZus9nMU0
yVyQiRwn5wEHZZQ/mQhz85cf4yxOi9PZTCw6NKjUV0Z5lImvfucvnuese91M
2McvHeMvo3zKxCnXmqirnKXjzLLg3Jxmc0tGeZWFPkP2nbzHWYqjpVn457ND
xj8yyq8s7BIKWz3mLMXJxSzAwbXnUxnlWRbUDz2s4zhLcZDHv9+0rWuSjPIt
C5qgW+/SOB+SAicbQ1d5xuTIKO+yMVFY/0sR52+kBcrG7YR7VkoZ5V82JjUE
PazknCauU0A2ln8fP65WRnmYDff99oGNnPeK61CSjSYPr/bvZZSP2Vi7LueH
z5x7i+PcKweH/vPyayWnvMzBqiPKaEPOL8TxW5MDWeWYUmM55WcOxnqkaQXO
rlJA5iC7pUHTWU55moN1Iep8S85dpYXPQbfm+se95ZSvueilWeJrzVl6POtc
qJSLFwySU97mQjlpaOthnDdIn1y8HWZ1d6Sc8jcXB1dsnT6OM19mnrC5iFs5
/9UkOeVxLoKOvZ9vy1l82X2aXPzbcuepnZzyOQ8PLS/3m8N5lXRgHtzbff1l
gZzyOg/eR1niYs6GUkDl4YLd5/YOcsrvPLSoPk9azlm8DfOQPKT0mbZ+lZzy
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
/H/vPXvi
           "]]}}, {{}, {}, 
         {RGBColor[0, 1, 0], Thickness[0.005], LineBox[CompressedData["
1:eJw9lnlYjekbx2MQ1TnPGyEZEtl+lkb29ZtE9n3ITgwNQ8g+RAhlbbLvW2Qo
pmgwSdMmkvZ9O0un0+m0SGPJ1u9533Pd5/xzrs91ruu53vc89/39fO3cPWf+
0tjExCS5kYmJ+H2glar/hvMPMfScXdD4Hyydkq6Njaj79hCt5pzoc4xze4ci
+2Y+jzDDKxsazmsiNwVaN4mAe+oauyFNLJ3+mWDRuNfBCMxcmNXhIGfznBvr
R5r9jWluEdvTOS9YMbxk2tG/sc5lr5dNU0unP2vTp7gLj+F4brDLEs6fvVfz
Ex/jUGyt7TXOE8Xj2jwBa7xykILz+XPi5wnW+7uH/9jM0knXrV/zez8+hZlz
r+dzOA99mLgl6spTnNBmeh/j7Dd6qSa18z/Y3uesVRznvDcfZ6mD/kFSguzq
R849Fx6Ped8jEk1qvEb1NLV02i4dGImLbhVm8zi/5KfZODzDzUenOx7k3K7J
HHmfsGc4H597IpyzR0DVTgyMwtumW7YWc37c0Vc/43EU/jkYWmba3NKJP9z8
FcOfQxmyrtaBs5v0gM/xImzRnTmcZ6uDLsR1ikaNrYntTs5f74h/SDTOm75e
dpXzTf7v5dyIxupLw/fEcp48WHyjaBxprD2o4fzft8xtum7/4vDeY77NWlg6
XYzr9GCjx7/Izxvg242zy+HftF/u/IuBOzv+MZZz5QzxCf/FrMWVEcs588vj
LxSDMNX1b3s4i7dzZl0MgnaHe17iLD3egxgsG9mizRPO0nG1MRg/0rI+g3N/
6ROL6Ctxnao5F9SLFxiL5RdCTpqaWTrti37FJygWiyZUL+jEmV8mv4JYRNRP
3TWEcwa/fbehcYh7M6RhGuffrUJdlTvi8K1vrHYl5y7SgXFIfvV4xC4zmsc4
zF589odAzl7SBcTjr+iLo4PNaD7j8XVV9JdIzrHve/Abjsf80OeD0jivluY1
AYcDOnws5dxSesAE2Jj1GP2J81NpfhOw73y9tbm5pZP4dA8TEzDedefeDpzN
pHl+gQbHdT4OnMMu1dxOmPQCHtlL243mPF+a7xd4fjtqykzOjaUXfoE7jZLs
lpvTvCdiTeats16cZ0oDk4gKl6mP9pnT/CciIunyjkDO18XXzUyEif9c/XVz
2oeXqC+zNgvj/E48zu0lZo7+NS/anPbjJXq+C1+QwtlZHP+Cl/ALmxhYZE77
8gqj1/y6V89ZGt/Fr7D72YBe9ea0P6+g9H56vJmFpZNyh3ghrxDl/OGvVha0
T0lISH8T2IlzP2nAk3A0o93gPha0X0n4EnTu0lDOPqfG8JFJwprjJi/HWtC+
vQZbX/t0Bue0zuIFv8bdQw2bFlnQ/r3GeW3oJw/OdnyaA6pe49PXza6bLGgf
k9EhLsp9N+cN4nqsT8aV6ZpJ/ha0n8no22FYk1Oc/xXHry4ZphsaHb1iQfv6
BoP2b9be4Sxd75Y38HoVZ/XQgvb3DU4nW7WJ4iz9ffVvMHbr7soXFrTPKQhS
tDyXxll6vJ0pkHUr+rHAgvY7BdPaFW8r5WwifVLxqNQstMqC9j0Vg4fMevaB
c3DCJL7RqdifefF2gwXtfyruT0pZ21xm6TSdb2PLfalY0fsfwVJGeZCKqHEj
Atpx/jRLPDAVpg2t3trJKB9SMXFN677/43zVRlyINHRSvJ/kKKO8SINThdfE
YZzHSxechtj+Lv9zllF+pOFpE+vKCZzf3hYfMA3zvQNPzJBRnqRhS9IS63mc
z64TNygNd+1t9y+VUb6kIWTpr5mrOPPh4iuVDlltRgtPGeVNOvIG1Ntv4Sym
SfqUdGQvdO+2S0b5k46HXmfl+zmL07LweDpm7O5Z7C+jPEqHycmAUwGcDa+b
Dtf4WQPPyiif0nHUs+LZZc7ScS0zsLw+xSFIRnmVAbve2w7f5SzF0awMhH2d
k/aXjPIrA1uE/EaPOUtxcioDo+d4doiSUZ5loOyRt30cZykOcjIQXreu7SsZ
5VsGKu4FfUjhvFsKnEz0XewTkyWjvMvECGHF7wWcu0sLlInghLt2ShnlH/+9
5t6jMs4p4jpdyMSC2fGDK2WUh5nw3j4uuJbzVnEdijLxn7ev6UcZ5WMm3Jdn
/fyVs604zh2zsOcf38BGcsrLLCzZq4xuxvmFOH5LsyAvG1hsLqf8zMIQ7xS9
wNlTCsgsZDXU6FrLKU+zsCJUk2vDua208FloX1/92FZO+ZoNW91Mf3vO0uPZ
Z0OtnDGlp5zyNhuq4X0a9+W8Uvpk40NfuzuOcsrfbOxesNZ5MGe+zDxhs5Gw
aPKb4XLK42yE7P842Ymz+LLbdNl43HA7ykVO+ZyDCJtzXSZwXiwdmAPvpt9/
nyKnvM6B3z6WOINzMymgcnDK5avpHDnldw4aqb8On89ZvA2r0Bwkdxq9YrGc
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
eis=
           "]]}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{
         FormBox["\"time\"", TraditionalForm], 
         FormBox["\"bkmodA/B0M\"", TraditionalForm]},
       AxesOrigin->{0, 4.2540000000000004`},
       PlotRange->{{0., 1.}, {4.253206806350411, 4.2658597496461805`}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {192., -118.66252583997979`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1:eJxd1nvMz1UcwPEnMzO11swklZCkqZm1ZjKz0l260MxkZqZmKqSSJGUytWqS
XHK/35IelyQk9/v9ktySJMk9SZLW95z3dt5znn+evaZ+z+/3+57zeX9qdOja
4rkyJSUl568qKQm/r/w50+Tf6We3N+/QvsmV7pb8T5/Oi18d3DP793eSe1ea
9fChXu9m//17yb2O1a5ffuaH2f//cXKjg09+NKzLJ9nrfZq86NFrytQdMDR7
/eHJ985b22PJ2BHZ3xuVvKBa/+NPLxiT/f1xyaNWVi/t3ml89n4mJO+/GP7g
xOz9TUq+sd6BWuX6Ts7e75TkZzuGV5yavf9pySM+Cz/Ts88zI3nv5gstD0/+
PPt8M5OrlG117V1zvsg+76zk1g3DC36Zff7S5McbvH9f+yOl2fcxO7l4seIV
Z2ffz5zkD148emn62TnZ9zU3+c4BlfdsvjA3+/7mJW8Y/+D8c5fnZd/nV8kv
FN9WlbLzs+9XX717YrfGFb7Ovm89I3zc6xZk379+LLxc5W+y56Hj133TwuT4
dY7V4dvbWnNR8p74vPQdbQcuP19ncfIb8QX1uuLVqtb7NvmG+Dx1p0Eneze5
Z0n2fHXx5tp0bPRd9rz1M4cnj1xZfWn2/PWk4tvbPVFzHvSfl3f2PFZ7WXY+
9APxAOgT8bzowfGALs/Oj45vr1RznvTd8WdF8r54vnS/peuLE6TrxvOmdxRP
v3XDlclvxvOnb40vqDmP+pX4AFZl51OvOF+neMK6czyvq5MrxjeoF8bzq8O7
m7dWV4jneU3ynNGnp65uptvE863LxA+sOe9rk1vEA6M5/3pC+Lg7NfdhXfIf
4eVaa+6Hvj8c/32a+7I+OR7fdpr7ow/1Cg9Ec582JNePB1xzv3TfIU2LI6O5
bxuTt9UMD1hz/3SN4jQPOqm5j5uSXw7Xo5vmfupl4fid09zXzcnx8fbQ3F8d
v76Lmvu8JTm+vd6a+635vTW773ra6mbFjdbcf/1UcRsr9tPMA/13y/CCmvmg
x1UNF2JbNi/0I/EBa+aHPjM1vEHNPNHDu4QbpJkvujhcxZXans0bHabJ9uaa
+aPDaWk7UDOPNB9XM590fLmKO7J5peM4aqmZXzqOkyGaeabjONitmW/67Thw
dmbzTt8eL5Bm/ukt4TqN1MxD/Xq4Dgc081HfEo5ztV3ZvNRrwvFrr5mfumsc
kJp5qq+PF14zX79Pjm+vlmbe6ufjj2b+6uIyFxNWM491+LA9j2nm8+7kdvEF
NfNal4sDSjO/dXgalWZp5rluFd+gZr7/kPxfuG71NfNeTwnHubtm/usn4gfW
9ED/FR7HeU0f9iSPCR+3gaYX+qH4BWr6oU+FPCzU9EQPDeP9kqYve5PjeG6s
6Y2O47WPpj86jr+lmh7pOF7K7Mv6pOP1barplY7Xo7+mXzoev9Wanuld4fGW
35/1Tb8V36Gmd/q2eAA1/dObNoYfTQ/1a3GgHsj6qG+OB1rTS70qjPtBmn7q
l+I41fRUx3FV6cesrzqOg1aa3up43YZp+qs5zpoe63hcqh7M+qzj42ir6bWO
H3e0pt+al9P8/im775q+a+6/pveaeaDpv2Y+aPYBzbzQ7Aea+aHZFzTzRLM/
aOaLZp84lM0bzX6hmT+afUMzjzT7h2Y+afYRzbzS7Cea+aXZVzTzTLO/aOab
ZuD8nM07zX6jmX+afUczDzX7j2Y+avYhzbzU7Eea+anZlzSPQ7M/aebr4WT2
Kc281exXmvmr2bc081izf2nms2Yf08xrzX6mmd+a9UAzzzX7m2a+/5LMPqeZ
95r9TjP/Nfuepgea/U/TB80+qOmFZj/U9EOzL2p6otkfNX05ksw+qemNZr/U
9Eezb2p6pNk/NX3S7KOaXmn2U02/NPuqpmea/fXXrG+afVbTO81+q+mfZt/V
9FCz/2r6qNmHNb3U7Meafmr2ZU1PNfvz0ayvmn1a01vNfq3pr2bf1vRYs39r
+qzZxzW91uznmn5r9nXN79+ynmt6rum5pueanmt6rum5pueanmt6rum5puea
nmt6rum5pufHsp5req7puabnmp5req7puabnmp5req7puabnmp5req7puSZw
v2c91/Rc03NNzzU91/Rc03NNzzU91/Rc03NNzzU91/Rc0/PjWc81Pdf0XNNz
Tc81Pdf0XNNzTc81Pdf0XNNzTc8140XTc03PT2Q91/Rc03NNzzU91/Rc03NN
zzU91/Rc03NNzzU91/Rc03NNz09mPdf0XNNzTc81Pdf0XNNzTc81Pdf0XNNz
Tc81Pdf0XNPzU1nPNT3X9FzTc03PNT3X9FzTc03PNT3X9FzTc03PNeNU03NN
z09nPdf0XNNzTc81Pdf0XNNzTc81Pdf0XNNzTc81Pde8nM5//w/6L0aa
           
           "]]}}, {{}, {}, 
         {RGBColor[0, 1, 0], Thickness[0.005], LineBox[CompressedData["
1:eJxd1nvMz1UcwPEnMzO11swklZCkqZm1ZjKz0l260MxkZqZmKqSSJGUytWqS
XHK/35IelyQk9/v9ktySJMk9SZLW95z3dt5znn+evaZ+z+/3+57zeX9qdOja
4rkyJSUl568qKQm/r/w50+Tf6We3N+/QvsmV7pb8T5/Oi18d3DP793eSe1ea
9fChXu9m//17yb2O1a5ffuaH2f//cXKjg09+NKzLJ9nrfZq86NFrytQdMDR7
/eHJ985b22PJ2BHZ3xuVvKBa/+NPLxiT/f1xyaNWVi/t3ml89n4mJO+/GP7g
xOz9TUq+sd6BWuX6Ts7e75TkZzuGV5yavf9pySM+Cz/Ts88zI3nv5gstD0/+
PPt8M5OrlG117V1zvsg+76zk1g3DC36Zff7S5McbvH9f+yOl2fcxO7l4seIV
Z2ffz5zkD148emn62TnZ9zU3+c4BlfdsvjA3+/7mJW8Y/+D8c5fnZd/nV8kv
FN9WlbLzs+9XX717YrfGFb7Ovm89I3zc6xZk379+LLxc5W+y56Hj133TwuT4
dY7V4dvbWnNR8p74vPQdbQcuP19ncfIb8QX1uuLVqtb7NvmG+Dx1p0Eneze5
Z0n2fHXx5tp0bPRd9rz1M4cnj1xZfWn2/PWk4tvbPVFzHvSfl3f2PFZ7WXY+
9APxAOgT8bzowfGALs/Oj45vr1RznvTd8WdF8r54vnS/peuLE6TrxvOmdxRP
v3XDlclvxvOnb40vqDmP+pX4AFZl51OvOF+neMK6czyvq5MrxjeoF8bzq8O7
m7dWV4jneU3ynNGnp65uptvE863LxA+sOe9rk1vEA6M5/3pC+Lg7NfdhXfIf
4eVaa+6Hvj8c/32a+7I+OR7fdpr7ow/1Cg9Ec582JNePB1xzv3TfIU2LI6O5
bxuTt9UMD1hz/3SN4jQPOqm5j5uSXw7Xo5vmfupl4fid09zXzcnx8fbQ3F8d
v76Lmvu8JTm+vd6a+635vTW773ra6mbFjdbcf/1UcRsr9tPMA/13y/CCmvmg
x1UNF2JbNi/0I/EBa+aHPjM1vEHNPNHDu4QbpJkvujhcxZXans0bHabJ9uaa
+aPDaWk7UDOPNB9XM590fLmKO7J5peM4aqmZXzqOkyGaeabjONitmW/67Thw
dmbzTt8eL5Bm/ukt4TqN1MxD/Xq4Dgc081HfEo5ztV3ZvNRrwvFrr5mfumsc
kJp5qq+PF14zX79Pjm+vlmbe6ufjj2b+6uIyFxNWM491+LA9j2nm8+7kdvEF
NfNal4sDSjO/dXgalWZp5rluFd+gZr7/kPxfuG71NfNeTwnHubtm/usn4gfW
9ED/FR7HeU0f9iSPCR+3gaYX+qH4BWr6oU+FPCzU9EQPDeP9kqYve5PjeG6s
6Y2O47WPpj86jr+lmh7pOF7K7Mv6pOP1barplY7Xo7+mXzoev9Wanuld4fGW
35/1Tb8V36Gmd/q2eAA1/dObNoYfTQ/1a3GgHsj6qG+OB1rTS70qjPtBmn7q
l+I41fRUx3FV6cesrzqOg1aa3up43YZp+qs5zpoe63hcqh7M+qzj42ir6bWO
H3e0pt+al9P8/im775q+a+6/pveaeaDpv2Y+aPYBzbzQ7Aea+aHZFzTzRLM/
aOaLZp84lM0bzX6hmT+afUMzjzT7h2Y+afYRzbzS7Cea+aXZVzTzTLO/aOab
ZuD8nM07zX6jmX+afUczDzX7j2Y+avYhzbzU7Eea+anZlzSPQ7M/aebr4WT2
Kc281exXmvmr2bc081izf2nms2Yf08xrzX6mmd+a9UAzzzX7m2a+/5LMPqeZ
95r9TjP/Nfuepgea/U/TB80+qOmFZj/U9EOzL2p6otkfNX05ksw+qemNZr/U
9Eezb2p6pNk/NX3S7KOaXmn2U02/NPuqpmea/fXXrG+afVbTO81+q+mfZt/V
9FCz/2r6qNmHNb3U7Meafmr2ZU1PNfvz0ayvmn1a01vNfq3pr2bf1vRYs39r
+qzZxzW91uznmn5r9nXN79+ynmt6rum5pueanmt6rum5pueanmt6rum5puea
nmt6rum5pufHsp5req7puabnmp5req7puabnmp5req7puabnmp5req7puSZw
v2c91/Rc03NNzzU91/Rc03NNzzU91/Rc03NNzzU91/Rc0/PjWc81Pdf0XNNz
Tc81Pdf0XNNzTc81Pdf0XNNzTc8140XTc03PT2Q91/Rc03NNzzU91/Rc03NN
zzU91/Rc03NNzzU91/Rc03NNz09mPdf0XNNzTc81Pdf0XNNzTc81Pdf0XNNz
Tc81Pdf0XNPzU1nPNT3X9FzTc03PNT3X9FzTc03PNT3X9FzTc03PNeNU03NN
z09nPdf0XNNzTc81Pdf0XNNzTc81Pdf0XNNzTc81Pde8nM5//w/6L0aa
           "]]}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{
         FormBox["\"time\"", TraditionalForm], 
         FormBox["\"shmodA/G0M\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       PlotRange->{{0., 1.}, {1., 1.}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {576., -118.66252583997979`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1:eJw9lnlYjekbx02yZmasDWLGvgxJCI3lmwzZQiJbluxMZYvGmrEbjIlfaUhR
Q2oa24TstEtF+76c0zmt51QkLed5+D3v23Wf9x/X57p4Pe957vv7+fZds3XB
eoMWLVokftWihfSnbfuKGc6XwrCh4qTKp8bQ6s21aQ9qeRhCHEs7FAg2Mcsf
0Pq3+0hPWxQw5r2h1S9P3S50N3yADrM6dDgh+MnMDgbDTjyAv3v7i+mCjTID
t01q/xDTdKan+3wwtFq+bkLhvLMPcYq9MdkkOOR9iu2ajuHw1vmfDhXcdHCL
eGM4Nhrkt60SPEt6nfEj1Pd88Gp4raHVpb+k5xHinQ+VbxJcPsi8bWivxxgd
3NY/QLBlWNzu5/6PMTTnt445gk9NWa1+1+8Jtl/wXvztR0Or7KR6++LrT+D+
avEVa8FDHc9F1A15CsXTYe93Ct4jv/Apeu/ovz9Q8Gvxtp5mz5Bqed02WXAP
Q4dvTO89Q0zQcg8ueJOndj8snmP4qLcDh9QZWoV/f6zSLvy5OF/IMjvB4nDL
1k14gZ/v2JvuEbxEPuALTF9k/q+/4IXF1y9H9XkJ97Dg8ijBLFj6QV7C12kj
KxP8t/j1MgNfIsxxi9rok6HVnHHSF73EYcsVz00Ff+Rpv5YPeoUL3dacmSvY
N6rPnR2bXsFzZuFKV8E/n3Yu1QW/gnfHHlZnBWvspBO+gulJc4t/BIvLEx8U
Ac9BdxfECZZu56JrBGzbPb6iEiwf704EtLauJi3qDa3k172PwFmzzhk9BY+W
n0hktO6QP0ZwbqN0gZGY8MBy2FzBR17GiwmKxFrvr95tECwuU1xBJOYFrX1z
UHCquP0lllG4MSVmuLfgfV1v2Sj2RmHz+qEfQwX3l18YhUEjbw+KrKd5jEJ9
3uWkLME75QuIxpZTnd5r62k+o+Fh0fEPgwZDq8i6IeKGoxH5+VGIseAt8rzG
INrAfM6PgjvLB4yB3/5H+ycJfizPbwxezjUfN1+wdLqwuBhkJH/+fY3g9vI8
xyIiPt/FTfC9K9VBMbNjEejWueKY4GXyfMfiz/aKdhcFG8gfHIvtdq0igxpo
3uOguaYeEC54gTwwcXArWPVjXAPNfxx8BnhnZQoOkD43LQ6L3U6alTbQPrxG
Qtt9lp8Ef5Bet+Q16hUunwwbaT9eY5ZyslMXwdbS+Oe+hvLnUUf7NtK+xONJ
uxmrzATL47syHhvnBtRPbKT9iYdD3fczZglW7JUuJB7dehUtWtxI+/QGo4va
DFon2Fwe8De4PcU7fFsj7dcb/G51+usDgn/zmipG5g0i80oGnGqkfUvALjtt
Wy/Byf2kC07A8bXLbl9tpP1LQMe5O/qFCu4rptlTm4CunSzWPGykfUyEZ2iA
a4Tg7dJ6bEvEiT5PbBIbaT8TUed8UJsp+JU0frWJaEoYuUXZSPuaBPdWf/yn
ESxf7+4knLTLSf3USPubhGsXaqNbNBlayT9fYxJsy3V/tG+ifX6LMwtqR3QV
LB9v/1uk3X14tXcT7fdbvFl1u3aQ4Bby8w6xLd26j2yifX+H0qyZPSwF34yZ
LTb6He6zBbopTbT/79B9zOywWYLni23sfOQdfH0XzrRvojx4h7f2ni+WC26w
l174DgMnFnZa10T5IP7+oslWzoKv9pQWIhnzcj8sdGuivEjGgPPh0/YLniFf
cDLG3k/tdbSJ8iMZ9YP6pZ8WXBMkHTAZm0oDXS80UZ4k4/inJeWXBPu4ShuU
jOLta2cFNFG+JOPA0kjPYMFiuMRKpSDqnMPjO02UNynImOeU9FCwlCYptinw
Wekf+byJ8icF/esX/h0tWJoWx3MpWFEwaUNCE+VRCtbM8+uSKrj5c1NgPmt3
aHYT5VMKJt0NHFYkWH5d51R0DpjhXdJEeZWKgV+sSzWC5TiyT8VXJWH9a5so
v1Jx08FvdqNgOU68UtHD7svKL02UZ6lYmJ65opXO0EqOg8xULC0ePMNIR/mW
isH7qnt3EuwhB04aInxHFBrrKO/ScG99G89eggfLC5QGl/DFI/rpKP/ScOje
lKeDBb+V1ulyGhzHBlqY6igP0+Dp5Oc/SrC7tA75aThn3KlunI7yMQ3qHb0n
TBL8gzTO36fjwu7I7dY6yst0+PRt+ZeN4Fhp/Fano25n3p05OsrPdPSabxpm
J3irHJDpGPze8l8HHeVpOj6bPPdcLvg7eeHTEW70+ZfVOsrXDCQEZI5dL1g+
3oAMjFXM+rBZR3mbgeOqPYGugjfITwb8t/ex2qmj/M2AX+ThFHfBYplFwmbg
cM7VZft1lMcZeOazJPWQYOljfy3PwLzPwROP6SifMxE35OHlU4JXyi/MxMDu
h2rO6iivM5FzS2lxXnBrOaAyUaop+MVbR/mdifVfP/K9JFi6ja63MjEhffhz
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
v0uxT7l9ZS9Ofb0UJjdNVvXm5PMyjJwfuOx7Tj4vQ3I32+U/cPJ5GdTP0hz6
cPJ5GRrXOy7oy8nnZThU82pGP04+L0PrfYPRn5PPy3C21VmLAZx8XobOf34Y
NpCTz8vwV88l/QZx8nkZzp+43GUwJ5+X4fTHAsMhnHxehqNO/T5J3OzzMtTc
maocysnnZSjvfSL1R04+L8NCl5svhnHyeRlG+wfdGM7J5+Xwq4o7b8rJ5+XY
1yduzwhOPi/HsgWxq804+bwc44/G2Izk5PNyGD+IHmHOyefl2BAf0HEUJ5+X
Yxq7Vi9xs8/L4dXRI3s0J5+XY2mbnx6M4eTzcgSbfOdjwcnn5XDunOI2lpPP
y2HW7qzdOE4+L8eHLzYjxnPyeTkefDIwsuTk83JUvr2slLjZ5+W4FePw4idO
Pq9AsX+19wROPq9Ajz0nXSdy8nkFIsZ8sZrEyecVqP/ap/tkTj6vwNXX31RK
3OzzCsw4duwZOPm8AjVW7JwVJ59XwKhw/oopnHxegbBLsWbWnHxegcTxvbjE
zT6vQFnGtvipnHxegZa7oi/+zMnnFfi+S8/10zj5vAIhF+aYTufk8wqM7+pR
J3GzzysR/b+7z2w4+bwSC7qpjs3g5PNKFHkZz53JyeeVcDGeaTyLk88F71ma
LXGzzwXnbfadzcnngrF31RxOPq+Ec8Dv/Ww5+Vxwq8tqiZt9XomCWacC53Ly
eSXs/nR3msfJ55WITF//w3xOPq+EhcnCfImbfV6JoNXWl+04+bwSPW+MXLqA
k88r8TmRdbLn5HMNtnepfCtxs881WDTh4cmFnHyuwYS1R6Ys4uRzDc67mNZJ
3OxzDdy9Gv914ORzDZL8A50Wc/K5Bv/Fbu25hJPPNTBK6ZEkcbPPNViTF/nb
Uk4+1+BRiYvFMk4+1+BIal2xxM0+1yA33//ick4+1+B6/ODpjpx8roHrw9sf
JW72uQbRr5beXMHJ5xq09Hxht5KTz7VIOGDTYhUnn2vhveXtLYmbfa5FiqXF
ktWcfK6F76BnrZ04+VyLrLp+dyRu9rkWxtEnl67h5HMtFvyvymAtJ59r8dX0
UUESN/tci0ndfOav4+RzLTQxuR8lbva5FkO9p/it5+Rz8f/ZHLPewMnnWhxv
jCuRuNnnWlj80+H0Rk4+10LlON9sEyefV6H1++1JEjf7vAr3A+7v2MzJ51XI
GJvZaQsnn1ehIb7hzha9z6vQY1XP+b/ofV6FCbUTqn/R+7wKjidW/OGs93kV
Dpp4mLrofV6FLucPxrrofV6FMYOubnDV+7wKsb7+LbbqfV6F5V38L23V+7wK
Naf8xmzT+7wKR1v4JW3T+7wK3d2vbNqu93kVQrW+Bjv0Pq/Gvel7L+7Q+7wa
05/tMd+p93k1bI0Xx+zU+7wa9lvHLHfT+7way+I61bjpfV4Np77VR3fpfV6N
jXsTeuzW+7warqnBt3brfV6N0m/WT3bX+7wa2o3Wqe56n1djQyBf86ve59Vw
YTn1v+p9Xg31OO8Te/Q+r8aqnXbf7dX7vBpZtzoE7dX7vAZRCdfN9wn+PzMN
Bfw=
           "]]}}, {{}, {}, 
         {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
f5eh+Z4tq40Z9fUyXBlnvbo3I5+Xo7v6w8o+jHxejhPmSvu+jHxejjvdA5b0
Y+TzcsSmmCzsz8jn5fh3peUcE0Y+L8epf9taDWDk83L4lp8yH8jI5+U4HvJ2
hCkjn5cjb49/v0GMfF6OxSGzOw9m5PNy7E701x/CyOflsJoS8U3kJp+XQ+Px
d8lQRj4vh0qJlGGMfF6OwXZ33w1n5PNy6O3KuD+Ckc+V8P/68cJIRj5XQt/F
58AoRj5XonXH4X+YMfK5Ej87eM8ZzcjnSrRI/ThqDCOfK7H3elGnsYx8rsTX
4Ql1Ijf5XIk2R85ljWPkcyUetB4XMp6Rz5XI/vPF5QmMfK7E/LjueyYy8rkS
7W1XLzZn5HMlnA+dMpvEyOdK+DjcMJjMyOdKVLr7lYrc5HMlHLodf/crI59X
oEfiKp8pjHxegZYups5TGfm8Aj77C60sGPm8Ag+bne72X0Y+r4Dl1tEVIjf5
vAKz+ya+BSOfV2DRxTVnLBn5vAL9j9autmLk8wpUCEdHTWPk8wqM7Nueidzk
8wo8D78RP52RzyuwsMeYyzMY+bwCSIhdO5ORz/n5bTaMnMXI5xVw1WvXIHKT
zyvRckZY2GxGPq9EwoWDJ35j5PNKFOTOXjCHkc8rkT/VpIs1I59X4ueEdp9F
bvJ5JRra/3J9LiOfV2LT/X4O8xj5vBLPrKxN5jPyeSWeB3iWiNzk80rILivu
LGDk80oknl35x++MfF6Ji97q/gsZ+bwS9TtuForc5PNKxCzY4WfDyOeVcPD4
Y9kiRj6vxG8/XTsvZuTzKgw7GpgkcpPPq/DIqNMJW0Y+r8Ib46tYwsjnVTBq
NqdB5CafV8F664Andox8XoWL+4Y6LmXk8yqoIlb2XMbI51V43iUsSeQmn1eh
dx8bN3tGPq9CyM8u45cz8nkVav8wVIjc5PMqzPpj4uUVjHxehRYpl2avZOTz
KiSdHdUgcpPPq/Bjyw//VYx8XgXj8Na2qxn5vBomY+Y1+x8jn1cjvzjxschN
Pq+G/xxPewdGPq9Ghvtf+msY+bwadzOin4jc5PNqPF8yY9laRj6vRnpMy2Z/
MPJ5NY7LDB6I3OTzaryfvGShIyOfV8Pqsbxe5CafV+Of2nd+6xj5vBrjzxVY
rWfk82q8nDBHIXKTz6sR8frHyQ2MfF6N2bF6I50Y+VyF1q0XfhK5yecqtK2p
3r6Rkc9VmLoot+MmRj5XwSa+Z+Amnc9VmNX4wGazzucq5A44XbNZ53MVZGuj
zjjrfK7C/rqFI7bofK5CcMy4uC06n6tgGL5l3Vadz1X4vlGv2Tadz1UIGF11
bZvO5yocDxs7cbvO5ypMvJf+abvO5yokW6Q57dD5XAX3SWbNdup8rsbY98or
O3U+V6PhR4vRLjqfq7Ez9nCMi87nahzvuWLlLp3P1fDq5Ptll87namw7NvX4
bp3P1djfY7rRHp3P1bi54unjPTqfq1GX6Ga5V+dzNX4mvUndq/O5Grk5qxxd
dT5XY1XLjXWuOp+rccq8wGOfzudqHLUP7bpf53M1ju0x8N+v83kNAuZHjjvA
+f8dMQlf
           "]]}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{
         FormBox["\"time\"", TraditionalForm], 
         FormBox["\"USM/USM_initial\"", TraditionalForm]},
       AxesOrigin->{0, 2.6180000000000003`},
       PlotRange->{{0., 1.}, {2.6174791197093326`, 2.6237701300356964`}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {192., -355.98757751993935`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
+d/tHPuJ+dyEsMtT1n1iPq9G5XLNeZ7/D01/PZA=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{
         FormBox["\"time\"", TraditionalForm], 
         FormBox["\"poisA\"", TraditionalForm]},
       AxesOrigin->{0, 0.41585000000000005`},
       PlotRange->{{0., 1.}, {0.4158396033937664, 0.4160748831067433}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {576., -355.98757751993935`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}}, {}},
  ContentSelectable->True,
  ImageSize->576,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.420050924444264*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"octo", "[", 
   RowBox[{"scaler", ",", 
    RowBox[{"Max", "[", "I1", "]"}]}], "]"}], ";", 
  RowBox[{"octo", "[", 
   RowBox[{"scaler", ",", 
    RowBox[{"Min", "[", "I1", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "50"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.405728619057004*^9, 3.40572862418545*^9}, {
  3.421678211041293*^9, 3.421678213509218*^9}, {3.425944683244751*^9, 
  3.425944712773299*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"LodeXsig", ",", "LodeYsig"}], "]"}]], "Input",
 CellChangeTimes->{{3.425943408080044*^9, 3.425943422006831*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "LODE", "]"}]], "Input",
 CellChangeTimes->{{3.425943432326473*^9, 3.425943437469998*^9}}],

Cell["\<\
TTTproblem: Why do these plots show octahedral motion, but stressSpace[] does \
not. 
Is it the scale of this problem which involves ridiculously massive pressures \
(600 times larger than shear stress)?\
\>", "Text",
 CellChangeTimes->{{3.420052666910824*^9, 3.420052717557075*^9}, {
  3.4200528361167097`*^9, 3.42005284603679*^9}}],

Cell[BoxData[
 RowBox[{"showmeAll", "[", 
  RowBox[{
   RowBox[{"sigm", "/", "B0M"}], ",", 
   RowBox[{"sigs", "/", "B0M"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4200527697781363`*^9, 3.4200527966149483`*^9}, {
  3.4200528267063704`*^9, 3.420052829222878*^9}, {3.420052860353527*^9, 
  3.4200528696466217`*^9}, {3.4200529231050663`*^9, 3.420052962742712*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"J3TYPEM", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"RKM", ",", "RK0"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"I1min", "=", 
  RowBox[{"Min", "[", "I1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"I1max", "=", 
  RowBox[{"Max", "[", "I1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Ff", "[", 
    RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"I1bar", ",", "I1barmin", ",", "I1barmax"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RKfnt", "[", 
     RowBox[{"RKM", ",", 
      RowBox[{"I1", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "A2M", ",", "A3M", ",", "A4M"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"showme", "[", "LODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "sigs", "]"}]}], "Input",
 CellChangeTimes->{{3.405728636616859*^9, 3.405728637470846*^9}}],

Cell[BoxData[
 RowBox[{"showcy", "[", "eps11", "]"}]], "Input",
 CellChangeTimes->{3.538143528444989*^9}],

Cell[BoxData[
 RowBox[{"showcy", "[", "eps22", "]"}]], "Input",
 CellChangeTimes->{{3.425945094394081*^9, 3.425945098890379*^9}, 
   3.5381435432375813`*^9}],

Cell[BoxData[
 RowBox[{"showcy", "[", "eps33", "]"}]], "Input",
 CellChangeTimes->{{3.425945104772129*^9, 3.425945108946508*^9}, 
   3.5381435577437353`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["stress-strain paths", "Section",
 CellChangeTimes->{3.4259450786567287`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showcy", "[", "vstrain", "]"}]], "Input",
 CellChangeTimes->{3.425945078657599*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.2, 0, 0.6], Thickness[0.01], LineBox[CompressedData["
1:eJxV2Xlcjfn7P/C7MMp6LDWWcGQZNeLYsoUXxZDtiBZSTpv2Oue0nTott5nR
Z4xlUrash6EwRWSLwZ0tu4YsU5aTNYYksjZ8z695+eN3/unxfFzn6uq61+v9
rrt/tFuQuSAIdWaC8P9+/vepGSP8/x/0+XCwss7ht+P/0QI2X6Y9q3PYRMtQ
2TczWOefS7eH4reM23UOu+kOOK4r2V6UXEjb8PsHaTnMK+f2HjrxCG2Lfg35
x+me2LE5f2r5omK6N4o+tc0vSj5J90Hp1b4W2dGnaXsEhkcE6fxL6L54lf7u
jKf7ObofLH3b2A6deIFWYP1bZZr1yEv0AORcM3tQ53CFHggvr9m/h2WU0oMQ
+SXWtXzRX/Rg1EZOrZ/001V6CLTzNHuLkq/RjrAcH+xpF19GD0Wb2o5Ns6Ov
08Pgfaxov0XoDXo4Ahr+/pv0CER06GZV5X2LHokDD4+d9HT/m3ZCk37tokqm
ldOjeDwr6NFYevHptZyxt+kx6HAofoH1yDs0sPX3Rv3TB9/9zyJ4/u4xPhY+
R1ud3tvOyPhY3F41aHNYBi2Mw+YWHxNsW1YyPg67uvpPKl9EC86IXdFHnvnN
fcadebxowQWHHrS7ZiY8YNwFqbPLdxQl08J4OF8xiJoPX+PjUbz99Fy7+IeM
T8D/ui4ZVFlLixOwQvGmcXb0I8Z/wOycwxXK57T4A26l3TtoEfqY8YnwmN14
hfSIFify+D9hfBLsKgc6Ke7R4iRUe3xoW+VdxbgrIhVdX266RYuuGJTz8LSn
+1PGJ+N95z/Wt75Ki5NxbLkmpmTaM8an4Kemw1zTLtDiFExK+SwfOvEfxqdC
9vrUu+pTtDiV5/M549Ow7u6Mbb7HaHEaz+8LxqfjjsMor8sHaXE6z3c140rs
2R8ujN5DQ4mq2mrT/f6S31ciP2T/ofydtKTE8JdHS/a2q2H+DOC9pqCVG40Z
+BL488awDFqcgfubniw6c5mWZvB6ecV8N2y32qVKnUzDDb8q20wpX0SLbph0
tMcIx7O05AblmZu2md/UMn8mBpqNbFXtQmMmry9anIk95fOebSumpZm83l4z
fxbWdk045jOaxiykNFx/tDgLqhWjVlodoaVZ6Gam/Enz4Wu+O8ydCqMuDX3D
fHc8ireeYxdPi+44uydx/MJ9tOSOnc9vKypracEDy76DzagBdcz3wJQVbs2y
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
HTS0+PvX58M3HaKVWqTV2jg6nqVVWlz0aDT80k1areW8RItaxNrtsv/0ls7Q
onjpCofMb9qyfy061XvZ2FnTBVqcCFjUQepFS1qEXChq7zmELtVCNuiZrNqF
NmpxYG2nlgtn0TUmN1lpbhNICzFoHKZvUhhDy0y+Xvdx0k+03GSoa4yZtCIG
bls9XidsoWFy67+qWu2llTF4H2/2aFsxrYrBhIonT5z+otUxnNdoMQbP8zP/
DquhM2KwwurkdTOhHfs3WRx1YU1ruiAGIxrmOVqKwf3pG0+e6UeXxmDRwcvH
fUbTRpNtJ+1/M5WuicGN9P6HFvvQQixSqufts42kZbHcf6HlsehZ3CxHuYRW
xOJCn5FbnqyjYXLW/tWpf9DKWHR8v26t1RFaZXKAdUbeeVodC+n8hCXO5bQY
i1b9HX4rf0pnmLw292fNh6/9x6JlE9skC8v27D8W+xvmSVqKxdyyH7WOfejS
WM6XtNHkXIfAwB/omlhMb94++JMHLcThrdYlIHM+LYvDuzvHvOziaXkcNo5/
OUtaSCtMLgh19VxJIw4uHdZOqN5KK+OQmSxOWriPVpn85ONom1O0Og7Dp38/
svAaLcbBeMB7qOsDOiOO+1m0weRF39jpzK3YfxznWVqKQ5lXcPec7nRpHOdb
2hgH2z5nO5aBronDud/eW4UraSEe5z9qm5uraFk8vp03u1V2NC2Ph/X5a40U
abTCFB8y7cOZZTTiMT97cL3PRloZj+ZmQe/f5NOqeLSIuPdi8VFaHY85padr
bC/Roskj8bjoNp1hcsN+HW2IR26zzXeffPrafzznaWv2H49pdyaXWnWmS+Mx
feKZ03n2tDEe6/PyzjqPoGvi4dz+zqnySbSQgHFpnoc1s2lZAp49/t8Bi1Ba
noCMaYf2btLRigQsLxq43fEXGgm426XjH5dW08oE7rfQqgQsrDm5/tMBWp2A
a7N2bso8Q4sJuHq850q7G3RGAsrsN/0qPaINCUjKvJLuWUcXJHCe/5b9J+Cs
nyJtYXu6NAHRDfM9bUxA+wHLEwoH0TUJnPdpQYcAoTa60o2W6bj/Sct1CLzx
eE5rLa3QYc+ISz45C2jo4Lnl39mjltNKHbxa6qaXGWiVDjkaX7fwAlqtw7bb
t34wl2hRhykuli7ZV+gMHWr/GA7FPdqgwxvrfUNKqukCHdamPhzg+/lr/zpU
3T8/uK5lB/av434UbdRh2f643j0c6BodMuQ1nQ870UIibv98o+uMKbQsEXde
KttXedNyk+dcsEwLpxWJ+P74nhbWehqJsLfva57/K61MxF/L5352XkurEtHt
7Tizih202mS/o281RbSYiDNnX9RanKMzEhHVsJ9MGxIRsW7NQ8cquiAR7Rud
M156R0uJOBL24XZg047sPxF+V+3+/mRNGxNhMWLO9czedE0iCjb/+pedIy0k
wd3yyCVpPC1LgkfskJOe7rQ8Cf9WBB2vDqQVSdjqvOrIwlgaJu+S7bH5mVYm
4VXbd4WFWbQqCWuSvitw/Z1Wm/xo87bKvbSYhMeTftmuO0FnJAGHpqxufZU2
mOLdUrJyKumCJAz+OWDVqFe0ZPLLO4vLhE7sP4nrK9qYhB+Pjf7ZXE7XJKFP
72gxuz8t6HFl6aZkxRhapoddfUB4yTRarkeCyjXK15dW6GFzNimsLpKGHl0H
1c1bkkIr9QhfXeHfYymt0iPM3MPr8Hpared6jRb1UF2O8Kw6QmfoUeQ0YELa
Bdpgim/1G2ddQRfoscti4vj8Z7SkR37MiREuH7/2r4d7Ra1jhWVn9q9H/bge
g7Qd6Ro913u0kIzNVpd7GobRsmT+/4GWJ6PmYb8ulz1phcnTd7QNCqaRjNH7
frOqj6eVyXjYWWqTlU6rkvEofURT+1W0OhkD/5E3K95GiyZ7rPviuZ/OMLnY
qq76FG1IRlqv+ncLy+iCZIgZ8S9sHtJSMr57n/O08DVdmsz9WBv2n4zYkqb3
K9vSNcmw6T/srs6WFlIQv6H+YuuBtCwFJ8weXMkZS8tTEBra7uKoGbQiBWFl
S4vLVDRScGhY7KlwNa1MgY9hq2Qu0qoU+DbvdiD7N1qdgrzoJkWKTbSYgiZ3
z+WW7KIzUrh+pQ0p+LDDmFN3iS4wub33+iV3aCkFhuTFa3q8oEtTUG3UrDtc
/7V/kyc/z5jRogv7T8GqQpulVZ1pIRUruq7+Me17WpbK9S8tT8WDF++S8l1p
RSoWufdJcJlDIxWKo14xFaG0MhUD+1wL0SbSqlSkLSkKt1xEq1PR683TYMMa
WkxFqv8uj6Hb6YxUrp9pQyq0/U67B5XQBamIyR4zuf4GLaWik5n6h6zHdGkq
98NpYypCSkvHFDfpyv5T0WqYmZOXFS2koeXv+gEve9KyNBxolueQPpiWm2x6
fXRxoRVpXI/TSMOOsaNsJwfQyjTszDv47X1tV+n/AKJ97l0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 501.}, {-7.6121906, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.425943057177639*^9, 3.425943348051601*^9, 
  3.425944153099411*^9, 3.425944287698524*^9, 3.425944423878819*^9, 
  3.425944513902981*^9, 3.425944555883174*^9, 3.425944775005837*^9, 
  3.425944812592883*^9, 3.4259449643965054`*^9, 3.425945078722389*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ORTHO Isotropic compression",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538178968731084*^9, 3.5381789692925653`*^9}}],

Cell[TextData[{
 "The following line tells ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " which directory to use when looking for the data. This input set is for \
the isotropic (ii) simulation, so we set runid equal to \"I\". Then next line \
constructs the location that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will look for the data files."
}], "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-ortho-isotropic-compression\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.538151335780795*^9, 3.538151347644058*^9}}],

Cell["\<\
TTTconcern: Why is there ANY nonzero value for J2, even though small.\
\>", "Text",
 CellChangeTimes->{{3.4200531786565723`*^9, 3.420053204545898*^9}}],

Cell["\<\
At this point, all field variables are available for plotting. If you can't \
remember a plot variable keyword, just look at the \".out\" file. You can \
also define derived variables. For example, below we define the the \
volumetric strain to equal the trace of the strain:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.4111583474675922`*^9, 3.41115835677642*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "2"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", 
  RowBox[{"I1", "/", "P0M"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xright", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"I1", "/", "P0M"}], "]"}]}], ";", 
  RowBox[{"CrushCurve", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"P3M", " ", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"P1M", "+", 
            RowBox[{"P2M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "P0M"}], "+", "P0M"}], ")"}], ")"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "xright"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "P3U"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "ExactStyle"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.429996727321094*^9, 3.429996731540773*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"-", "EQPV"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CrushCalc", "=", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"I1", "/", "P0M"}], ",", 
     RowBox[{"P3M", "+", "EQPV"}]}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{"CrushCurve", ",", "CrushCalc"}], "]"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Look at results in detail", "Section"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "EQPV"}], ",", 
   RowBox[{"PRES", "*", "3"}]}], "]"}]], "Input",
 FontSize->16],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", "PRES"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"bkmodU", "=", 
  RowBox[{"B0U", "+", "B1U"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "vstrain"}], "-", 
    RowBox[{"PRES", "/", "bkmodU"}]}], ",", "PRES"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "rho", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", 
  RowBox[{"PRES", "+", 
   RowBox[{"I1", "/", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4870958597954807`*^9, 3.48709586271313*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "vstrain"}], ",", 
    RowBox[{"PRES", "/", "B0U"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<volumetric strain\>\"", ",", "\"\<normalized pressure\>\""}], 
     "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "timestep", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CTI1U", ",", "CTPSU"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"B0U", ",", "B1U", ",", "B2U", ",", "B3U", ",", "B4U"}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"vstrain", ",", 
   RowBox[{"I1", "/", "CTI1U"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"I1", "/", "4.5*^10"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4111615131872168`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "HK"}], "]"}]], "Input",
 CellChangeTimes->{3.411161514578619*^9}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"eps11", "+", "eps22", "+", "eps33"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"vstrain", ",", "I1"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.4111615158506527`*^9, {3.411161651861204*^9, 3.411161667431918*^9}, {
   3.5381435285448112`*^9, 3.5381435578461933`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "EQPV", "]"}]], "Input",
 CellChangeTimes->{3.4111615175703506`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"vstrain", ",", "QSSIGZZ"}], "]"}]], "Input",
 CellChangeTimes->{3.4111615186586323`*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{"vstrain", ",", "sig11"}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"vstrain", ",", "sig22"}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"vstrain", ",", "sig33"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"sig11", "-", "sig22"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.4111615205631847`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"sig22", "-", "sig33"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.411161521875166*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"sig33", "-", "sig11"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.4111615231953278`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Drucker-Prager **",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{
  3.425928366273712*^9, {3.5381513539970427`*^9, 3.5381513571842546`*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[CellGroupData[{

Cell["Overview (minimal)", "Subsection"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-drucker-prager\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538151359384739*^9, 3.5381513649475613`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Overview continued", "Subsection"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"meridianALL", "[", 
   RowBox[{"5", ",", "scaler"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"reportGraphic", "[", 
  RowBox[{"\"\<pmerid.gif\>\"", ",", "%"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.40588025053237*^9, 3.4058802755798492`*^9}, {
  3.426287332513071*^9, 3.42628733369698*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "YIELD", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"xport", "[", 
  RowBox[{"\"\<DPmeridtest.gif\>\"", ",", "meridtest"}], "]"}]], "Input",
 CellChangeTimes->{{3.4058804265234327`*^9, 3.40588045394597*^9}}],

Cell[BoxData["CTPSM"], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "sigs"}], "]"}]], "Input",
 CellChangeTimes->{3.405880579824286*^9}],

Cell[BoxData["RKM"], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "sigm"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "BACKRN", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.405880991576631*^9, 3.405881031176063*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"CTI1U", ",", "CTI1M"}], "}"}], "/", 
  RowBox[{"Sqrt", "[", "3", "]"}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["comparison with Exact Analytical result", "Section"],

Cell[TextData[{
 "The EXACT Analytical solution for this problem is solved in the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook /home/rmbrann/docs/Verification/Axisymmetric.nb\nThe solution is \
discussed in FrameMaker file \nThese are the results..."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWLtime", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     FractionBox["3", "2"], ",", "2", ",", 
     FractionBox["5", "2"], ",", "3", ",", 
     FractionBox["10", "3"], ",", 
     FractionBox[
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "22"}], "+", 
         RowBox[{"7", " ", 
          SqrtBox["6"]}]}], ")"}]}], 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SqrtBox["6"]}], ")"}]}]], ",", "4", ",", "5"}], "}"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWLsigA", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["850", "3"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["50", "3"]}], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"4", " ", 
         SqrtBox["6"]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["50", "3"]}], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"4", " ", 
         SqrtBox["6"]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["50", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["6"]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "110"}], "+", 
      RowBox[{"160", " ", 
       SqrtBox[
        FractionBox["2", "3"]]}]}], ",", 
     RowBox[{
      RowBox[{"-", "110"}], "+", 
      RowBox[{"160", " ", 
       SqrtBox[
        FractionBox["2", "3"]]}]}], ",", "50", ",", "50", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "118"}], " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"292", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["3"]}]}]]}], "}"}]}], ";", 
  RowBox[{"pwlsigA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLsigA"}], "]"}]}], ";", 
  RowBox[{"PWLsigL", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["850", "3"]}], ",", 
     RowBox[{
      FractionBox["50", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "9"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["6"]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["50", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "9"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["6"]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["50", "3"]}], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SqrtBox["6"]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["10", "3"]}], " ", 
      RowBox[{"(", 
       RowBox[{"33", "+", 
        RowBox[{"8", " ", 
         SqrtBox["6"]}]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"10", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "49"}], " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"58", " ", 
          SqrtBox["3"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["3"]}]}]], ",", "50", ",", "50", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "58"}], " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"64", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["3"]}]}]]}], "}"}]}], ";", 
  RowBox[{"pwlsigL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLsigL"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PWLz", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["850", 
       SqrtBox["3"]]}], ",", 
     RowBox[{
      RowBox[{"-", "150"}], " ", 
      SqrtBox["3"]}], ",", 
     RowBox[{
      RowBox[{"-", "150"}], " ", 
      SqrtBox["3"]}], ",", 
     RowBox[{
      RowBox[{"-", "50"}], " ", 
      SqrtBox["3"]}], ",", 
     RowBox[{
      RowBox[{"-", "110"}], " ", 
      SqrtBox["3"]}], ",", 
     FractionBox[
      RowBox[{"1260", "-", 
       RowBox[{"330", " ", 
        SqrtBox["6"]}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["3"]}]}]], ",", 
     RowBox[{"50", " ", 
      SqrtBox["3"]}], ",", 
     RowBox[{"50", " ", 
      SqrtBox["3"]}], ",", 
     FractionBox[
      RowBox[{"420", "-", 
       RowBox[{"78", " ", 
        SqrtBox["6"]}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["3"]}]}]]}], "}"}]}], ";", 
  RowBox[{"pwlz", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLz"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PWLr", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "200", ",", "200", ",", 
     RowBox[{"-", "100"}], ",", 
     RowBox[{"-", "160"}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"160", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          SqrtBox["6"]}], ")"}]}], 
       RowBox[{
        RowBox[{"3", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"]}]}]]}], ",", "0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"228", " ", 
        SqrtBox["2"]}], "-", 
       RowBox[{"40", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{
       RowBox[{"3", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["3"]}]}]]}], "}"}]}], ";", 
  RowBox[{"pwlr", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLr"}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PWLepsA", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["17", "1800"]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "9"}], "-", 
       RowBox[{"16", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"32", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{"5", "-", 
       RowBox[{"8", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{"11", "+", 
       RowBox[{"16", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"645", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"14", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{"9000", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "89"}], "+", 
       RowBox[{"32", " ", 
        SqrtBox["6"]}]}], "9000"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"645", " ", 
        SqrtBox["2"]}], "-", 
       RowBox[{"1138", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{"9000", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"525", " ", 
        SqrtBox["2"]}], "-", 
       RowBox[{"682", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{"9000", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]}], ")"}]}]]}], "}"}]}], ";", 
  RowBox[{"pwlepsA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLepsA"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PWLepsL", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["17", "1800"]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "9"}], "+", 
       RowBox[{"8", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"16", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{"5", "+", 
       RowBox[{"4", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{"11", "-", 
       RowBox[{"8", " ", 
        SqrtBox["6"]}]}], "1800"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "75"}], " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"446", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{"9000", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"199", "+", 
       RowBox[{"8", " ", 
        SqrtBox["6"]}]}], "9000"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "75"}], " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"1598", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{"9000", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"274", " ", 
        SqrtBox["3"]}]}], 
      RowBox[{"1800", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]}], ")"}]}]]}], "}"}]}], ";", 
  RowBox[{"pwlepsL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLepsL"}], "]"}]}], ";"}]}], "Input"],

Cell["\<\
The following illustrates how to make interpolating functions for the model \
results that can be compared with the interpolation functions that were made \
above for the PWL exact results.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdlepsA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "eps11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlepsL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "eps22"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlsigA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sig11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlsigL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sig22"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlz", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sigm"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlr", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sigs"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.400439189217408*^9, 3.400439194734397*^9}, {
  3.4058811906246443`*^9, 3.40588120057122*^9}, {3.538143528607085*^9, 
  3.5381435434391813`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.405881195610187*^9, 3.405881197474658*^9}}],

Cell[BoxData[
 RowBox[{"tmax", "=", 
  RowBox[{"Max", "[", "time", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"mdlepsA", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pwlepsA", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mdlepsA", "[", "t", "]"}], "-", 
    RowBox[{"pwlepsA", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell["\<\
The following uses the pre-built function \"compare\" (defined in the \
once-only section) to generate viewgraph metric plots.
The error is the point-wise L2 norm.

Note: The model driver is failing to reproduce the prescribed strains exactly \
(about half a percent error).
I need to find the source of this problem. The driving strain should be exact.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"DPtimeepsA", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLepsA", ",", "time", ",", "eps11", ",", 
    "\"\<axial strain\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DPtimeepsL", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLepsL", ",", "time", ",", "eps33", ",", 
    "\"\<lateral strain\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DPtimesigA", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLsigA", ",", "time", ",", "sig11", ",", 
    "\"\<axial stress\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DPtimesigL", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLsigL", ",", "time", ",", "sig22", ",", 
    "\"\<lateral stress\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DPepsDsigD", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
    RowBox[{"PWLepsA", "-", "PWLepsL"}], ",", 
    RowBox[{"PWLsigA", "-", "PWLsigL"}], ",", 
    RowBox[{"eps11", "-", "eps22"}], ",", 
    RowBox[{"sig11", "-", "sig22"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DPepsVsigM", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
    RowBox[{"PWLepsA", "+", 
     RowBox[{"2", "PWLepsL"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"PWLsigA", "+", 
       RowBox[{"2", "PWLsigL"}]}], ")"}], "/", "3"}], ",", 
    RowBox[{"eps11", "+", 
     RowBox[{"2", "eps22"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sig11", "+", 
       RowBox[{"2", "sig22"}]}], ")"}], "/", "3"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"reportGraphic", "[", 
  RowBox[{"\"\<pvolstressVSstrain.gif\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.400439225664904*^9, 3.4004392337984533`*^9}, {
  3.426287414749724*^9, 3.4262874503219833`*^9}, {3.538143528661973*^9, 
  3.538143557945546*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"xxx", "=", "\"\<.gif\>\""}], ";", 
   RowBox[{"resolution", "=", "100"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<DPtimeepsA\>\"", "<>", "xxx"}], ",", "DPtimeepsA", ",", 
      RowBox[{"ImageResolution", "\[Rule]", "resolution"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<DPtimeepsL\>\"", "<>", "xxx"}], ",", "DPtimeepsL", ",", 
      RowBox[{"ImageResolution", "\[Rule]", "resolution"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<DPtimesigA\>\"", "<>", "xxx"}], ",", "DPtimesigA", ",", 
      RowBox[{"ImageResolution", "\[Rule]", "resolution"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<DPtimesigL\>\"", "<>", "xxx"}], ",", "DPtimesigL", ",", 
      RowBox[{"ImageResolution", "\[Rule]", "resolution"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<DPepsDsigD\>\"", "<>", "xxx"}], ",", "DPepsDsigD", ",", 
      RowBox[{"ImageResolution", "\[Rule]", "resolution"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<DPepsVsigM\>\"", "<>", "xxx"}], ",", "DPepsVsigM", ",", 
      RowBox[{"ImageResolution", "\[Rule]", "resolution"}]}], "]"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.425934693452958*^9, 3.425934697507059*^9}, {
  3.426287533400517*^9, 3.426287538349193*^9}}],

Cell[BoxData[{
 RowBox[{"cmpr", "[", 
  RowBox[{
  "PWLtime", ",", "PWLepsA", ",", "time", ",", "eps11", ",", 
   "\"\<axial strain\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cmpr", "[", 
  RowBox[{
  "PWLtime", ",", "PWLepsL", ",", "time", ",", "eps22", ",", 
   "\"\<lateral strain\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cmpr", "[", 
  RowBox[{
  "PWLtime", ",", "PWLsigA", ",", "time", ",", "sig11", ",", 
   "\"\<axial stress\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cmpr", "[", 
  RowBox[{
  "PWLtime", ",", "PWLsigL", ",", "time", ",", "sig22", ",", 
   "\"\<lateral stress\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.4058813557602797`*^9, 3.4058813628399067`*^9}, {
  3.5381435288588667`*^9, 3.538143543706635*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"maketab", "[", 
      RowBox[{"PWLtime", ",", "PWLepsA"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"maketab", "[", 
      RowBox[{"PWLtime", ",", "PWLepsL"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.05`", ",", "0.05`"}], "}"}], "]"}]}], "}"}]}]}], "]"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.4200518487816133`*^9, 3.420051860772335*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<DPstrains.jpg\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PWLtime", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"PWLtime", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"PWLtime", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"PWLtime", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"PWLtime", "[", 
      RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", "12"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PWLepsA", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"PWLepsA", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"PWLepsA", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"PWLepsA", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"PWLepsA", "[", 
      RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", "12"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PWLepsL", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"PWLepsL", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"PWLepsL", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"PWLepsL", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"PWLepsL", "[", 
      RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", "12"}], "]"}]}], "Input"],

Cell[BoxData[{"PWLtime", "\[IndentingNewLine]", "PWLepsA", "\
\[IndentingNewLine]", "PWLepsL", "\[IndentingNewLine]", "PWLsigA", "\
\[IndentingNewLine]", "PWLsigL"}], "Input"],

Cell[BoxData[
 RowBox[{"PWLsigL", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CTPSU", ",", "CTPSM", ",", "CTI1U", ",", "CTI1M"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "DCSP", "]"}]], "Input"],

Cell["\<\
TTTobservation: DCSP is different, but I think that's because I now normalize \
the normal and flow direction\
\>", "Text",
 CellChangeTimes->{{3.420053334026186*^9, 3.4200533565206003`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Constant spin in PI-plane",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.5381513706207867`*^9, 3.538151371544835*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-pispin\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538151374429096*^9, 3.538151393589244*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.406925210155736*^9, 3.406925231720829*^9}}],

Cell[BoxData[{
 RowBox[{"p1", "=", 
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", "eps11", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<e11\>\""}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p2", "=", 
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", "eps11", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<e22\>\""}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p3", "=", 
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", "eps11", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<e33\>\""}], "}"}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.406925743326041*^9, 3.406925921653296*^9}, {
  3.538143528945181*^9, 3.5381435290702333`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.406925246059619*^9, 3.406925250001552*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Closer Look", "Section"],

Cell[BoxData[
 RowBox[{"showcy", "[", "PRES", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showcy", "[", 
    RowBox[{"sigs", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sqrt", "[", "2", "]"}], 
       RowBox[{"(", 
        RowBox[{"A1M", "-", "A3M"}], ")"}]}], ")"}]}], "]"}], ",", 
   RowBox[{"showcy", "[", "sigd22", "]"}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Pi plane spin is defined so that Lode angle will increase linearly in time\
\>", "Section"],

Cell["This is a plot of y=x for later use.", "Text"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "0.015`"}], ",", "0.005`"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{"eps11", ",", 
    RowBox[{"sig11", "/", 
     RowBox[{"(", 
      RowBox[{"2.", " ", "G0M"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.538143529124529*^9}],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{"eps11", ",", 
    RowBox[{"QSSIGXX", "/", 
     RowBox[{"(", 
      RowBox[{"2.", " ", "G0M"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.538143529211684*^9}],

Cell["\<\
During the initial elastic loading, the demo program is expected to predict \
that sig11=2G eps11. The following plot verifies that the demo program is \
getting this behavior correctly. In the plot below, the dashed straight line \
shows the expected initial elastic response (stress equals strain times twice \
the shear modulus).\
\>", "Text",
 CellChangeTimes->{3.538143529366053*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"stressZEROyslope", ",", "straight", ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<eps11\>\"", ",", "\"\<sig11\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.406926047523744*^9, 3.406926070312868*^9}}],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
        
        FractionBox[
         RowBox[{
         "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         RowBox[{"2.`", " ", "G0M"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"blue", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.5381435294476643`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "LODE", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<time\>\"", ",", "\"\<LODE\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.406926199753605*^9, 3.4069262094874353`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"sigs", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "*", "A1M"}], ")"}]}], "-", "1"}], 
    "]"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<r/R -1\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4069261263788033`*^9, 3.4069261372245827`*^9}, {
  3.40692616832327*^9, 3.406926175097271*^9}, {3.4069262943854723`*^9, 
  3.406926360871624*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"eps11", "+", "eps22", "+", "eps33"}], "]"}]], "Input",
 CellChangeTimes->{
  3.406925675926282*^9, {3.538143529531204*^9, 3.538143558048196*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "EQDOT", "]"}]], "Input",
 CellChangeTimes->{3.4069256786613398`*^9}],

Cell[BoxData[
 RowBox[{"showhis", "[", "EQPS", "]"}]], "Input",
 CellChangeTimes->{3.406925679749387*^9}],

Cell[BoxData[
 RowBox[{"showhis", "[", "SHEAR", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"ROOTJ2", "/", "A1M"}], "]"}]], "Input",
 CellChangeTimes->{3.406925694549509*^9}],

Cell[BoxData["lastep"], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Sandler-Rubin-Pucik **",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{
  3.425940369712162*^9, {3.5381514465348597`*^9, 3.538151449682778*^9}}],

Cell["\<\
This is the \"contrived\" SRP test where the yield surface has a slope \
exactly 1 in stress space.
The analytical solution is worked out in \
\>", "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-sandler-rubin\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538151451494038*^9, 3.538151466462731*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "}"}]}], "}"}], "//",
   "MatrixForm"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A1U", ",", "A2PFU", ",", "A3U", ",", "A4PFU"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"A1M", ",", "A2PFM", ",", "A3M", ",", "A4PFM"}], "}"}]}], "}"}], 
  "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meridianALLbasic", "[", 
   RowBox[{"2", ",", "scaler"}], "]"}], ";", " ", 
  RowBox[{"meridianALL", "[", 
   RowBox[{"1", ",", "scaler"}], "]"}], ";", 
  RowBox[{"elasticInfo", "[", "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"meridianALL", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SRPmeridtest.jpg\>\"", ",", "meridtest", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", "meridtest", "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["comparison with Exact Analytical result", "Section"],

Cell[TextData[{
 "The Exact Analytical solution for this problem is solved in the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook called UniaxialAnalytical.nb.\nThese are the results..."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWLtime", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     FractionBox["3", "2"], ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWLsigA", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "200"}], " ", 
      SqrtBox["3"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"200", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"4", " ", 
           SqrtBox["2"]}]}], ")"}]}], 
       SqrtBox["3"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"200", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"4", " ", 
           SqrtBox["2"]}]}], ")"}]}], 
       SqrtBox["3"]]}], ",", 
     RowBox[{
      RowBox[{"-", "200"}], " ", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     FractionBox[
      RowBox[{"200", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}], 
      SqrtBox["3"]]}], "}"}]}], ";", 
  RowBox[{"pwlsigA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLsigA"}], "]"}]}], ";", 
  RowBox[{"PWLsigL", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "200"}], " ", 
      SqrtBox["3"]}], ",", 
     FractionBox[
      RowBox[{"200", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}], 
      SqrtBox["3"]], ",", 
     FractionBox[
      RowBox[{"200", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}], 
      SqrtBox["3"]], ",", 
     RowBox[{"100", " ", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     RowBox[{
      RowBox[{"-", "200"}], " ", 
      SqrtBox[
       FractionBox["2", "3"]]}]}], "}"}]}], ";", 
  RowBox[{"pwlsigL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLsigL"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PWLepsA", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"200", " ", 
        SqrtBox["3"]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"16", " ", 
         SqrtBox["2"]}]}], 
       RowBox[{"600", " ", 
        SqrtBox["3"]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"32", " ", 
         SqrtBox["2"]}]}], 
       RowBox[{"600", " ", 
        SqrtBox["3"]}]]}], ",", 
     RowBox[{
      FractionBox["1", "450"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", 
         SqrtBox["3"]}], "-", 
        RowBox[{"11", " ", 
         SqrtBox["6"]}]}], ")"}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"32", " ", 
         SqrtBox["2"]}]}], 
       RowBox[{"600", " ", 
        SqrtBox["3"]}]]}]}], "}"}]}], ";", 
  RowBox[{"pwlepsA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLepsA"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PWLepsL", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"200", " ", 
        SqrtBox["3"]}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"8", " ", 
        SqrtBox["2"]}]}], 
      RowBox[{"600", " ", 
       SqrtBox["3"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"16", " ", 
        SqrtBox["2"]}]}], 
      RowBox[{"600", " ", 
       SqrtBox["3"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"11", " ", 
        SqrtBox["2"]}]}], 
      RowBox[{"300", " ", 
       SqrtBox["3"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"16", " ", 
        SqrtBox["2"]}]}], 
      RowBox[{"600", " ", 
       SqrtBox["3"]}]]}], "}"}]}], ";", 
  RowBox[{"pwlepsL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLepsL"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.499436840035952*^9, 3.499436882867344*^9}],

Cell["\<\
The following illustrates how to make interpolating functions for the model \
results that can be compared with the interpolation functions that were made \
above for the PWL exact results.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdlepsA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "eps11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlepsL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "eps22"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlsigA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sig11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlsigL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sig22"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.538143529627384*^9, 3.538143543906151*^9}}],

Cell[BoxData[
 RowBox[{"tmax", "=", 
  RowBox[{"Max", "[", "time", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"mdlepsA", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pwlepsA", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mdlepsA", "[", "t", "]"}], "-", 
    RowBox[{"pwlepsA", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell["\<\
The following uses the pre-built function \"compare\" (defined in the \
once-only section) to generate viewgraph metric plots.
The error is the point-wise L2 norm.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"compare", "[", 
  RowBox[{
  "PWLtime", ",", "PWLepsA", ",", "time", ",", "eps11", ",", 
   "\"\<axial strain\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.538143529677916*^9}],

Cell[BoxData[{
 RowBox[{"SRPtimeepsA", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLepsA", ",", "time", ",", "eps11", ",", 
    "\"\<axial strain\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPtimeepsL", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLepsL", ",", "time", ",", "eps22", ",", 
    "\"\<lateral strain\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPtimesigA", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLsigA", ",", "time", ",", "sig11", ",", 
    "\"\<axial stress\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPtimesigL", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLsigL", ",", "time", ",", "sig22", ",", 
    "\"\<lateral stress\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SRPepsDsigD", "=", 
   RowBox[{"compare", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"PWLepsA", "-", "PWLepsL"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{"PWLsigA", "-", "PWLsigL"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{"eps11", "-", "eps22"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{"sig11", "-", "sig22"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SRPepsVsigM", "=", 
   RowBox[{"compare", "[", 
    RowBox[{
     RowBox[{"PWLepsA", "+", 
      RowBox[{"2", "PWLepsL"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"PWLsigA", "+", 
        RowBox[{"2", "PWLsigL"}]}], ")"}], "/", "3"}], ",", 
     RowBox[{"eps11", "+", 
      RowBox[{"2", "eps22"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sig11", "+", 
        RowBox[{"2", "sig22"}]}], ")"}], "/", "3"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4994369116778193`*^9, 3.49943691477817*^9}, {
  3.53814352972821*^9, 3.538143544138283*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimeepsA.jpg\>\"", ",", "SRPtimeepsA", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimeepsL.jpg\>\"", ",", "SRPtimeepsL", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimesigA.jpg\>\"", ",", "SRPtimesigA", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimesigL.jpg\>\"", ",", "SRPtimesigL", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPepsDsigD.jpg\>\"", ",", "SRPepsDsigD", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPepsVsigM.jpg\>\"", ",", "SRPepsVsigM", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}]}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"makeme", "[", 
  RowBox[{"PWLtime", ",", "PWLepsA"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"?", "Dashing"}]], "Input"],

Cell[BoxData["as"], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"maketab", "[", 
      RowBox[{"PWLtime", ",", "PWLepsA"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"maketab", "[", 
      RowBox[{"PWLtime", ",", "PWLepsL"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.05`", ",", "0.03`"}], "}"}], "]"}]}], "}"}]}]}], "]"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.420051866061461*^9, 3.420051877836203*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SRPstrains.jpg\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[{"PWLtime", "\[IndentingNewLine]", "PWLepsA", "\
\[IndentingNewLine]", "PWLepsL", "\[IndentingNewLine]", "PWLsigA", "\
\[IndentingNewLine]", "PWLsigL"}], "Input"],

Cell[BoxData[{
 RowBox[{"Simplify", "[", "PWLepsL", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "PWLepsL", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"workrate", "=", 
   RowBox[{
    RowBox[{"sig11", " ", "d11"}], "+", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"sig22", " ", "d22"}], ")"}]}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "workrate"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SRPworkrate.jpg\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "workrate", "]"}]], "Input"],

Cell[BoxData["lastep"], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "workrate", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "workrate", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "sig11", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "sig22", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "d11", "]"}]], "Input"],

Cell["\<\
Make a data pair array of time vs. workrate for the last two strain legs.\
\>", "Text"],

Cell[BoxData[{"lastep", "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "workrate", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "time", "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"i", ",", 
   RowBox[{"1250", "/", "2"}], ",", "lastep"}], "}"}]}], "Input",
 CellChangeTimes->{{3.406926624392983*^9, 3.406926630707171*^9}, {
  3.4069266672616863`*^9, 3.406926670739543*^9}, {3.406926701439157*^9, 
  3.406926709600046*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wrkrate", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"time", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"workrate", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.406926723209462*^9}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "wrkrate", "]"}]], "Input",
 CellChangeTimes->{{3.40692665126388*^9, 3.406926658546919*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "wrkrate", "]"}]], "Input"],

Cell["(*<<NumericalMath`ListIntegrate`*)", "Input",
 CellChangeTimes->{{3.4069267780640593`*^9, 3.406926780791048*^9}},
 CellTags->"S5.84.1"],

Cell["\<\
The last two strain legs constitute a closed strain cycle of the type \
discussed by Sandler, Rubin, and Pucik, who show that such cycles entail \
negative net work and therefore imply that energy can be extracted from the \
system. The following numerical integration verifies this claim numerically.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "=", "B0M"}], ";", 
  RowBox[{"G", "=", "G0M"}], ";", 
  RowBox[{"fac1", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "G"}], ")"}]}]}], ";", 
  RowBox[{"fac2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"3", "K"}], ")"}]}], "-", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "G"}], ")"}]}]}], ")"}], "/", "3"}]}], ";", 
  RowBox[{"epsEA", "=", 
   RowBox[{
    RowBox[{"fac1", " ", "sig11"}], "+", 
    RowBox[{"fac2", " ", "I1"}]}]}], ";", 
  RowBox[{"epsEL", "=", 
   RowBox[{
    RowBox[{"fac1", " ", "sig22"}], "+", 
    RowBox[{"fac2", " ", "I1"}]}]}], ";", 
  RowBox[{"epsPA", "=", 
   RowBox[{"eps11", "-", "epsEA"}]}], ";", 
  RowBox[{"epsPL", "=", 
   RowBox[{"eps22", "-", "epsEL"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.538143529862537*^9, 3.5381435442378674`*^9}}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", "eps11"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", "epsEA"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", "epsPA"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.406926793919676*^9, 3.40692679588356*^9}, 
   3.53814352996138*^9}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", "eps22"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", "epsEL"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", "epsPL"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.406926799687669*^9, 3.406926801835347*^9}, 
   3.538143544338937*^9}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"eps11", "-", "eps22"}], ")"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"epsEA", "-", "epsEL"}], ")"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"epsPA", "-", "epsPL"}], ")"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4069268055361233`*^9, 3.4069268076375303`*^9}, {
  3.538143530024788*^9, 3.538143544440097*^9}}],

Cell["\<\
epsEAi=Interpolation[maketab[time,epsEA]]
epsELi=Interpolation[maketab[time,epsEL]]
epsPAi=Interpolation[maketab[time,epsPA]]
epsPLi=Interpolation[maketab[time,epsPL]]\
\>", "Input",
 CellChangeTimes->{{3.406926810455854*^9, 3.406926813575498*^9}},
 CellTags->"S5.84.1"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{"time", ",", "epsPA"}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"epsPAi", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"epsEAdot", "=", 
  RowBox[{
   RowBox[{"epsEAi", "'"}], "[", "x", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"epsEAdot", "[", ".5", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"pltE", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"epsEAi", "'"}], "[", "x", "]"}], "^", "2"}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"epsELi", "'"}], "[", "x", "]"}], "^", "2"}], ")"}]}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"pltP", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"epsPAi", "'"}], "[", "x", "]"}], "^", "2"}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"epsPLi", "'"}], "[", "x", "]"}], "^", "2"}], ")"}]}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"pltE", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"epsEAi", "'"}], "[", "x", "]"}], " ", 
      RowBox[{
       RowBox[{"epsPAi", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"epsELi", "'"}], "[", "x", "]"}], " ", 
        RowBox[{
         RowBox[{"epsPLi", "'"}], "[", "x", "]"}]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4069268703523273`*^9, 3.4069268744857187`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pltE", ",", "pltP", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4069268575258303`*^9, 3.406926862178776*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<magstnrates.jpg\>\"", ",", "%"}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"?", "maketab"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jnk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"d11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
         "2"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{
         "d22", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "2"]}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"showme", "[", 
     RowBox[{"time", ",", "jnk"}], "]"}], ",", "pltE", ",", "pltP"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Sandler-Rubin-Pucik with linear hardening **",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{
  3.4259403661287403`*^9, {3.5381515615924387`*^9, 3.538151565021916*^9}}],

Cell["\<\
This input set is used for SRP tests that have more realistic material \
parameters. 
Kayenta inputs and analytical results are worked out in  \
/home/rmbrann/docs/Verification/SandlerRubinPucik/SandlerRubinAnalytical.nb\
\>", "Text",
 CellChangeTimes->{3.487094886485551*^9}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-sandler-rubin-w-hardening\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.538151473410179*^9, 3.538151482502859*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "}"}]}], "}"}], "//",
   "MatrixForm"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A1U", ",", "A2PFU", ",", "A3U", ",", "A4PFU"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"A1M", ",", "A2PFM", ",", "A3M", ",", "A4PFM"}], "}"}]}], "}"}], 
  "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meridianALLbasic", "[", 
   RowBox[{"2", ",", "scaler"}], "]"}], ";", " ", 
  RowBox[{"meridianALL", "[", 
   RowBox[{"1", ",", "scaler"}], "]"}], ";", 
  RowBox[{"elasticInfo", "[", "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"meridianALL", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A2M", ",", "A4M", ",", "CRM", ",", "RKM"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A2PFM", ",", "A4PFM", ",", "CRPFM", ",", "RKPFM"}], 
  "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SRPmeridtest.jpg\>\"", ",", "meridtest", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", "meridtest", "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["comparison with Exact Analytical result", "Section"],

Cell[TextData[{
 "The Exact Analytical solution for this problem is solved in the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook called UniaxialAnalytical.nb.\nThese are the results..."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PWLtime", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}]], "Input",
 Background->RGBColor[1, 1, 0]],

Cell["\<\
The old governing equations implemented kinematic hardening as an internal \
variable variable in a classical way.
The new governing equations implement kinematic hardening as a stress \
transform that alters the origin for elastic response (thus allowing \
kinematic hardening to translate the yield surface so much that the origin in \
stress space can eventually become outside the yield surface (which, believe \
it or not, has actually been seen in laboratory data).  

There is very little difference between the old and new formulations. Below, \
you should select which analytical solution you wish to compare against. \
Select \"old\" if running with the old GeoModel. Select \"new\" if running \
with Brannon's new Kayenta framework.\
\>", "Text",
 CellChangeTimes->{{3.4870949623889236`*^9, 3.4870949654924088`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"analyticalSolution", "=", "new"}], ";"}]], "Input",
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[
 RowBox[{"Switch", "[", 
  RowBox[{
  "analyticalSolution", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "old", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PWLsigA", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "115.47005383792515290"}], ",", 
       RowBox[{"-", "1788.0862739787473096"}], ",", 
       RowBox[{"-", "456.58193875019501187"}], ",", 
       RowBox[{"-", "1402.7723254312014346"}]}], "}"}]}], ";", 
    RowBox[{"PWLsigL", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "115.47005383792515290"}], ",", 
       RowBox[{"-", "115.47005383792515290"}], ",", "113.78201514944334125", 
       ",", 
       RowBox[{"-", "308.12702811169809041"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"PWLepsA", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "0.00009622504486"}], ",", 
       RowBox[{"-", "0.004277765595"}], ",", 
       RowBox[{"-", "0.002615471367"}], ",", 
       RowBox[{"-", "0.004277765595"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PWLepsL", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "0.00009622504486"}], ",", "0.001297621805", ",", 
       "0.001212311555", ",", "0.001297621805"}], "}"}]}], ";"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "new", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PWLsigA", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "115.47005383792515290"}], ",", 
       RowBox[{"-", "1788.0862739787473096"}], ",", 
       RowBox[{"-", "487.40705463399868187"}], ",", 
       RowBox[{"-", "1433.5974413150051046"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"PWLsigL", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "115.47005383792515290"}], ",", 
       RowBox[{"-", "115.47005383792515290"}], ",", "129.19457309134517625", 
       ",", 
       RowBox[{"-", "292.71447016979625541"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"PWLepsA", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "0.00009622504486"}], ",", 
       RowBox[{"-", "0.004277765595"}], ",", 
       RowBox[{"-", "0.002615471367"}], ",", 
       RowBox[{"-", "0.004277765595"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PWLepsL", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "0.00009622504486"}], ",", "0.001297621805", ",", 
       "0.001212311555", ",", "0.001297621805"}], "}"}]}], ";"}]}], 
  "]"}]], "Input",
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pwlsigA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLsigA"}], "]"}]}], ";", 
  RowBox[{"pwlsigL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLsigL"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pwlepsA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLepsA"}], "]"}]}], ";", 
  RowBox[{"pwlepsL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"PWLtime", ",", "PWLepsL"}], "]"}]}], ";"}]}], "Input",
 Background->RGBColor[1, 1, 0]],

Cell["\<\
The following illustrates how to make interpolating functions for the model \
results that can be compared with the interpolation functions that were made \
above for the PWL exact results.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdlepsA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "eps11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlepsL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "eps22"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlsigA", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sig11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdlsigL", "=", 
   RowBox[{"interp", "[", 
    RowBox[{"time", ",", "sig22"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5381435300937777`*^9, 3.5381435445339622`*^9}}],

Cell[BoxData[
 RowBox[{"tmax", "=", 
  RowBox[{"Max", "[", "time", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"mdlepsA", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pwlepsA", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mdlepsA", "[", "t", "]"}], "-", 
    RowBox[{"pwlepsA", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input"],

Cell["\<\
The following uses the pre-built function \"compare\" (defined in the \
once-only section) to generate viewgraph metric plots.
The error is the point-wise L2 norm.


NOTE: Using the default Kayenta hardening will produce errors starting at \
time=2 because the default hardening is nonlinear whereas the exact solution \
is for linear hardening.

Getting an exact match requires running the special version of Kayenta that \
has special code to allow linear hardening.\
\>", "Text",
 CellChangeTimes->{{3.406927069566923*^9, 3.406927175460043*^9}, 
   3.4870948914256897`*^9, 3.487094927108426*^9}],

Cell[BoxData[{
 RowBox[{"SRPtimeepsA", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLepsA", ",", "time", ",", "eps11", ",", 
    "\"\<axial strain\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPtimeepsL", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLepsL", ",", "time", ",", "eps22", ",", 
    "\"\<lateral strain\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPtimesigA", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLsigA", ",", "time", ",", "sig11", ",", 
    "\"\<axial stress\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPtimesigL", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
   "PWLtime", ",", "PWLsigL", ",", "time", ",", "sig22", ",", 
    "\"\<lateral stress\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPepsDsigD", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"PWLepsA", "-", "PWLepsL"}], ")"}]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"PWLsigA", "-", "PWLsigL"}], ")"}]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"eps11", "-", "eps22"}], ")"}]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"sig11", "-", "sig22"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SRPepsVsigM", "=", 
  RowBox[{"compare", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"PWLepsA", "+", 
       RowBox[{"2", "PWLepsL"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"PWLsigA", "+", 
        RowBox[{"2", "PWLsigL"}]}], ")"}]}], "/", "3"}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"eps11", "+", 
       RowBox[{"2", "eps22"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"sig11", "+", 
        RowBox[{"2", "sig22"}]}], ")"}]}], "/", "3"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.406926981515016*^9, 3.406926989103425*^9}, {
  3.538143530181123*^9, 3.538143544669175*^9}}],

Cell["\<\
COMMENT: The last two plots show, respectively,
\tstress difference vs strain difference
and 
\tpressure vs. volumetric strain .
\t
For plastic incompressibility, the volumetric response is the elastic \
volumetric response (thus the straight line).


The stress/strain difference plot is VERY interesting. 

Leg 1 contributes nothing to the stress/strain diff plot. The first response \
is the elastic triaxial loading of Leg 2. The middle part, which looks like \
an unloading, is actually the plastic loading of Leg 3. The final part is the \
elastic reloading of the SRP cycle. \
\>", "Text"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimeepsA.jpg\>\"", ",", "SRPtimeepsA", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimeepsL.jpg\>\"", ",", "SRPtimeepsL", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimesigA.jpg\>\"", ",", "SRPtimesigA", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPtimesigL.jpg\>\"", ",", "SRPtimesigL", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPepsDsigD.jpg\>\"", ",", "SRPepsDsigD", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<SRPepsVsigM.jpg\>\"", ",", "SRPepsVsigM", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}]}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"maketab", "[", 
      RowBox[{"PWLtime", ",", "PWLepsA"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"maketab", "[", 
      RowBox[{"PWLtime", ",", "PWLepsL"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.05`", ",", "0.03`"}], "}"}], "]"}]}], "}"}]}]}], "]"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.4200518827012043`*^9, 3.420051883515399*^9}, {
  3.4200519486778584`*^9, 3.420051954091818*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SRPstrains.jpg\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[{"PWLtime", "\[IndentingNewLine]", "PWLepsA", "\
\[IndentingNewLine]", "PWLepsL", "\[IndentingNewLine]", "PWLsigA", "\
\[IndentingNewLine]", "PWLsigL"}], "Input"],

Cell[BoxData[{
 RowBox[{"Simplify", "[", "PWLepsL", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "PWLepsL", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"workrate", "=", 
   RowBox[{
    RowBox[{"sig11", " ", "d11"}], "+", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"sig22", " ", "d22"}], ")"}]}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", "workrate"}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SRPworkrate.jpg\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "100"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", "workrate", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"cyc", "=", "201"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{"workrate", ",", "201", ",", 
    RowBox[{"lastep", "-", "1"}]}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"showcy", "[", 
    RowBox[{"TWORKRATE", ",", "cyc", ",", "lastep"}], "]"}], ";"}], 
  "*)"}]], "Input",
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[
 RowBox[{"showme", "[", "d11", "]"}]], "Input"],

Cell["\<\
Make a data pair array of time vs. workrate for the last two strain legs.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wrkrate", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"time", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"workrate", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "cyc", ",", "lastep"}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "wrkrate", "]"}]], "Input"],

Cell["(*<<NumericalMath`ListIntegrate`*)", "Input",
 CellChangeTimes->{{3.420053517000956*^9, 3.420053521967589*^9}},
 CellTags->"S5.84.1"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "1", 
   RowBox[{"Length", "[", "wrkrate", "]"}]], 
  RowBox[{
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{"wrkrate", ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "N", 
    "]"}], 
   RowBox[{"\[DifferentialD]", "N"}]}]}]], "Input",
 Background->RGBColor[0, 1, 0]],

Cell["\<\
The last two strain legs constitute a closed strain cycle of the type \
discussed by Sandler, Rubin, and Pucik, who show that such cycles entail \
negative net work and therefore imply that energy can be extracted from the \
system. The following numerical integration verifies this claim numerically.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"showme", "[", "INDEX", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", "B0M"}], ";", 
  RowBox[{"G", "=", "G0M"}], ";", 
  RowBox[{"fac1", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "G"}], ")"}]}]}], ";", 
  RowBox[{"fac2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"3", "K"}], ")"}]}], "-", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "G"}], ")"}]}]}], ")"}], "/", "3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsEA", "=", 
   RowBox[{
    RowBox[{"fac1", " ", "sig11"}], "+", 
    RowBox[{"fac2", " ", "I1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsEL", "=", 
   RowBox[{
    RowBox[{"fac1", " ", "sig22"}], "+", 
    RowBox[{"fac2", " ", "I1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsPA", "=", 
   RowBox[{"eps11", "-", "epsEA"}]}], ";", 
  RowBox[{"epsPL", "=", 
   RowBox[{"eps22", "-", "epsEL"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.538143530362258*^9, 3.53814354471455*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", "eps11"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", "epsEA"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", "epsPA"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.538143530412196*^9},
 Background->RGBColor[0, 1, 0]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", "eps22"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", "epsEL"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", "epsPL"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.538143544762248*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"eps11", "-", "eps22"}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"epsEA", "-", "epsEL"}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"time", ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"epsPA", "-", "epsPL"}], ")"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5381435304645777`*^9, 3.538143544814314*^9}}],

Cell["\<\
epsEAi=Interpolation[maketab[time,epsEA]];
epsELi=Interpolation[maketab[time,epsEL]];
epsPAi=Interpolation[maketab[time,epsPA]];
epsPLi=Interpolation[maketab[time,epsPL]];\
\>", "Input",
 CellTags->"S5.84.1"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{"time", ",", "epsPA"}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"epsPAi", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"epsEAdot", "=", 
  RowBox[{
   RowBox[{"epsEAi", "'"}], "[", "x", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"epsEAdot", "[", ".5", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"pltE", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"epsEAi", "'"}], "[", "x", "]"}], "^", "2"}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"epsELi", "'"}], "[", "x", "]"}], "^", "2"}], ")"}]}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"pltP", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"epsPAi", "'"}], "[", "x", "]"}], "^", "2"}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"epsPLi", "'"}], "[", "x", "]"}], "^", "2"}], ")"}]}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"pltE", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"epsEAi", "'"}], "[", "x", "]"}], " ", 
      RowBox[{
       RowBox[{"epsPAi", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"epsELi", "'"}], "[", "x", "]"}], " ", 
        RowBox[{
         RowBox[{"epsPLi", "'"}], "[", "x", "]"}]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pltE", ",", "pltP"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<magstnrates.jpg\>\"", ",", "%"}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"?", "maketab"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jnk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"d11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
         "2"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{
         "d22", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "2"]}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"showme", "[", 
     RowBox[{"time", ",", "jnk"}], "]"}], ",", "pltE", ",", "pltP"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"showcy", "[", 
   RowBox[{"workrate", "-", "TWORKRATE"}], "]"}], "*)"}]], "Input",
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Pure shear strain nonhardening with rate dependence",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.4994371934001913`*^9, 3.499437193766726*^9}, {
  3.538151491912354*^9, 3.538151492764167*^9}}],

Cell[BoxData["demodir"], "Input"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-pure-shear-w-rate-dep\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.538151494535206*^9, 3.538151508376174*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.40692725597954*^9, 3.40692726622472*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.40692727026035*^9, 3.406927273994451*^9}, {
   3.429986055375086*^9, 3.429986056179504*^9}, 3.429986170645604*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple deviatoric \"shear\" strain ... more plots", "Section"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A3U", ",", "RNU", ",", "B0U", ",", "G0U"}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"yldINshear", "=", 
  RowBox[{"(", 
   RowBox[{"A1U", "-", "A3U"}], ")"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"sig11yld", "=", "yldINshear"}], "\[IndentingNewLine]", 
 RowBox[{"eps11yld", "=", 
  RowBox[{"sig11yld", "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", "G0U"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{3.538143530540945*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"3", "/", "4"}], "]"}], 
    RowBox[{"Abs", "[", "sig11", "]"}]}], "-", "ROOTJ2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", "ROOTJ2", "]"}], "/", "yldINshear"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", "sig11", "]"}], "/", "sig11yld"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "sig11", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<time\>\"", ",", "\"\<stress11\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4069276199826*^9, 3.406927655325507*^9}, {
  3.406927692023858*^9, 3.406927708628034*^9}}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"ROOTJ2", " ", "/", "yldINshear"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"sig11", "/", "sig11yld"}], "]"}]}], "Input",
 CellChangeTimes->{{3.406927305186489*^9, 3.406927306231237*^9}}],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash"}], "}"}], "}"}]}]}], "]"}]}]], "Input"],

Cell["\<\
The following plot shows sig11/(2G) versus eps11, where G is the shear \
modulus. The strain path is purely deviatoric. Therefore, since yslope and \
hardmod were given in \"demo.inp\" to be zero, the demo program should \
predict a result that looks like classical nonhardening plasticity.\
\>", "Text",
 CellChangeTimes->{3.5381435306798*^9}],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"eps11", "/", "eps11yld"}], ",", 
    RowBox[{"sig11", "/", "sig11yld"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.4069273177466717`*^9, {3.5381435307633553`*^9, 3.5381435308089314`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "sig11", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "sig22", "]"}]], "Input"],

Cell["\<\
During the initial elastic loading, the demo program is expected to predict \
that sig11=2G eps11. The following plot verifies that the demo program is \
getting this behavior correctly. In the plot below, the dashed straight line \
shows the expected initial elastic response (stress equals strain times twice \
the shear modulus).\
\>", "Text",
 CellChangeTimes->{3.538143530941935*^9}],

Cell[BoxData[
 RowBox[{"?", "med*"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
          "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "eps11yld"], ",", 
         FractionBox[
          RowBox[{
          "QSSIGXX", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "sig11yld"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash", ",", "medLine"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.406927334959593*^9, {3.53814353101443*^9, 3.5381435310776873`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"stressZEROyslope", ",", "straight", ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*FractionBox[\(strain\), \(epsY\)]\)\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(stress\), \(\"\<sigY\>\"\)]\)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.40692734001031*^9, 3.406927340481331*^9}, {
  3.406927473729251*^9, 3.406927538319501*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<sRATE.gif\>\""}], ",", "%"}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"makeme", "[", 
    RowBox[{
     RowBox[{"eps11", "/", "eps11yld"}], ",", 
     RowBox[{"QSSIGXX", "/", "sig11yld"}]}], "]"}], ",", "straight"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.406927370874628*^9, 3.4069273713660717`*^9}, {
  3.538143531167159*^9, 3.538143531233576*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"QSSIGXX", ",", "sig11"}], "]"}]], "Input",
 CellChangeTimes->{3.406927375704835*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Pure shear strain with linear hardening **",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.499437181696866*^9, 3.49943718208665*^9}, {
  3.538151514568371*^9, 3.538151519636664*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-pure-shear-w-lin-hardening\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.5381515218242064`*^9, 3.538151534616632*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.411157589110281*^9, 3.41115760614979*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.430000707633647*^9, 3.4300007116552467`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple deviatoric \"shear\" strain ... more plots", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"ROOTJ2", " ", "/", "A1M"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"sig11", "/", "A1M"}], "]"}], ";"}]}], "Input"],

Cell["The following is the analytical solution", "Text"],

Cell[BoxData["A1M"], "Input"],

Cell[BoxData[
 RowBox[{"IntegerPart", "[", "A1M", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sstar", "=", 
   RowBox[{"Rationalize", "[", "0.2`", "]"}]}], ";", 
  RowBox[{"a1", "=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"A1M", "-", "RNM"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tref", "=", 
   RowBox[{"Rationalize", "[", 
    FractionBox["sstar", 
     RowBox[{"d11", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"elasticTangentMod", "=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"2", " ", "G0M"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hc", "=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"Abs", "[", "HCM", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plasticTangentMod", "=", 
   RowBox[{"2", " ", "G0M", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"1", "+", 
        FractionBox["hc", 
         RowBox[{"2", " ", "G0M"}]]}]]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plasticTangentMod", "=", "hc"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strainRate", "=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"d11", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strainRef", "=", 
   RowBox[{"strainRate", " ", "tref"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strain0A", "=", 
   RowBox[{"strainRate", " ", "t"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stress0A", "=", 
   RowBox[{"elasticTangentMod", " ", "strain0A"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stressA", "=", "a1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tA", "=", 
   RowBox[{"t", "/.", "\[InvisibleSpace]", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"stress0A", "\[Equal]", "stressA"}], ",", "t"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"strainA", "=", 
   RowBox[{"strain0A", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", "tA"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqps0A", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsA", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strainA1", "=", 
   RowBox[{"strainRate", " ", "t"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stressA1", "=", 
   RowBox[{"stressA", "+", 
    RowBox[{"plasticTangentMod", " ", 
     RowBox[{"(", 
      RowBox[{"strainA1", "-", "strainA"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stress1", "=", 
   RowBox[{"stressA1", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", "tref"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsA1", "=", 
   RowBox[{"eqpsA", "+", 
    RowBox[{"strainRate", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", "tA"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqps1", "=", 
   RowBox[{"eqpsA1", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", "tref"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strain1B", "=", 
   RowBox[{"strainRef", "-", 
    RowBox[{"strainRate", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", "tref"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stress1B", "=", 
   RowBox[{"stress1", "+", 
    RowBox[{"elasticTangentMod", " ", 
     RowBox[{"(", 
      RowBox[{"strain1B", "-", "strainRef"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stressB", "=", 
   RowBox[{"stress1", "-", 
    RowBox[{"2", " ", "a1"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tB", "=", 
   RowBox[{"t", "/.", "\[InvisibleSpace]", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"stress1B", "\[Equal]", "stressB"}], ",", "t"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"strainB", "=", 
   RowBox[{"strain1B", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", "tB"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqps1B", "=", "eqps1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsB", "=", "eqps1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strainB3", "=", 
   RowBox[{"strainRef", "-", 
    RowBox[{"strainRate", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", "tref"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stressB3", "=", 
   RowBox[{"stressB", "+", 
    RowBox[{"plasticTangentMod", " ", 
     RowBox[{"(", 
      RowBox[{"strainB3", "-", "strainB"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stress3", "=", 
   RowBox[{"stressB3", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"3", " ", "tref"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strain3", "=", 
   RowBox[{"-", "strainRef"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsB3", "=", 
   RowBox[{"eqpsB", "+", 
    RowBox[{"strainRate", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", "tB"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqps3", "=", 
   RowBox[{"eqpsB3", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"3", " ", "tref"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strain3C", "=", 
   RowBox[{"strainRate", " ", 
    RowBox[{"(", 
     RowBox[{"t", "-", 
      RowBox[{"4", " ", "tref"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stress3C", "=", 
   RowBox[{"stress3", "+", 
    RowBox[{"elasticTangentMod", " ", 
     RowBox[{"(", 
      RowBox[{"strain3C", "-", "strain3"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stressC", "=", 
   RowBox[{"stress3", "+", 
    RowBox[{"2", " ", "a1"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tC", "=", 
   RowBox[{"t", "/.", "\[InvisibleSpace]", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"stress3C", "\[Equal]", "stressC"}], ",", "t"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"strainC", "=", 
   RowBox[{"strain3C", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", "tC"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqps3C", "=", "eqps3"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsC", "=", "eqps3"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strainC4", "=", 
   RowBox[{"strainRate", " ", 
    RowBox[{"(", 
     RowBox[{"t", "-", 
      RowBox[{"4", " ", "tref"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stressC4", "=", 
   RowBox[{"stressC", "+", 
    RowBox[{"plasticTangentMod", " ", 
     RowBox[{"(", 
      RowBox[{"strainC4", "-", "strainC"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stress4", "=", 
   RowBox[{"stressC4", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"4", " ", "tref"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsC4", "=", 
   RowBox[{"eqpsC", "+", 
    RowBox[{"strainRate", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", "tC"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqps4", "=", 
   RowBox[{"eqpsC4", "/.", "\[InvisibleSpace]", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"4", " ", "tref"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stressHistory", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"\[Piecewise]", GridBox[{
       {"stress0A", 
        RowBox[{"0", "\[LessEqual]", "t", "<", "tA"}]},
       {"stressA1", 
        RowBox[{"tA", "\[LessEqual]", "t", "<", "tref"}]},
       {"stress1B", 
        RowBox[{"tref", "\[LessEqual]", "t", "<", "tB"}]},
       {"stressB3", 
        RowBox[{"tB", "\[LessEqual]", "t", "<", 
         RowBox[{"3", " ", "tref"}]}]},
       {"stress3C", 
        RowBox[{
         RowBox[{"3", " ", "tref"}], "\[LessEqual]", "t", "<", "tC"}]},
       {"stressC4", 
        RowBox[{"tC", "\[LessEqual]", "t", "\[LessEqual]", 
         RowBox[{"4", " ", "tref"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig11EXACT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"stressHistory", "/.", "\[InvisibleSpace]", 
      RowBox[{"t", "\[Rule]", 
       RowBox[{
       "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsHistory", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"\[Piecewise]", GridBox[{
         {"eqps0A", 
          RowBox[{"0", "\[LessEqual]", "t", "<", "tA"}]},
         {"eqpsA1", 
          RowBox[{"tA", "\[LessEqual]", "t", "<", "tref"}]},
         {"eqps1B", 
          RowBox[{"tref", "\[LessEqual]", "t", "<", "tB"}]},
         {"eqpsB3", 
          RowBox[{"tB", "\[LessEqual]", "t", "<", 
           RowBox[{"3", " ", "tref"}]}]},
         {"eqps3C", 
          RowBox[{
           RowBox[{"3", " ", "tref"}], "\[LessEqual]", "t", "<", "tC"}]},
         {"eqpsC4", 
          RowBox[{"tC", "\[LessEqual]", "t", "\[LessEqual]", 
           RowBox[{"4", " ", "tref"}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}]}], ")"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"eqpsEXACT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"eqpsHistory", "/.", "\[InvisibleSpace]", 
      RowBox[{"t", "\[Rule]", 
       RowBox[{
       "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"stressHistory", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", " ", "tref"}]}], "}"}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"eqpsHistory", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", " ", "tref"}]}], "}"}]}], "]"}]}], "Input"],

Cell["\<\
Note: The legacy GeoModel does not support true linear hardening. It \
progressively decreases hardening to a saturation point (controlled by user \
input RN and, internally, via GFUN). The new framework will support linear \
hardening if the hardening modulus is input as a negative number.\
\>", "Text",
 CellChangeTimes->{{3.4111580600396852`*^9, 3.4111580636311817`*^9}}],

Cell[BoxData[
 RowBox[{"compare", "[", 
  RowBox[{"time", ",", "eqpsEXACT", ",", "time", ",", "EQPS"}], 
  "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"compare", "[", 
  RowBox[{
   RowBox[{"eps11", "/", "strainA"}], ",", 
   RowBox[{"sig11EXACT", "/", "A1M"}], ",", 
   RowBox[{"eps11", "/", "strainA"}], ",", 
   RowBox[{
    RowBox[{"(", "sig11", ")"}], "/", "A1M"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"reportGraphic", "[", 
  RowBox[{"\"\<sLinearHardening.gif\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.426287842998193*^9, 3.426287844182482*^9}, {
  3.538143531334257*^9, 3.5381435314004087`*^9}}],

Cell[BoxData[
 RowBox[{"compare", "[", 
  RowBox[{"time", ",", 
   RowBox[{"sig11EXACT", "/", "A1M"}], ",", "time", ",", 
   RowBox[{
    RowBox[{"(", "sig11", ")"}], "/", "A1M"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"ToFileName", "[", 
     RowBox[{"demodir", ",", "\"\<LinearHardeningSig11vsTime.gif\>\""}], 
     "]"}], ",", "%"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.425940614766852*^9, 3.425940694489818*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sig11", "-", "sig11EXACT"}], ")"}], "/", "A1M"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "err", "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", "err", "]"}], ",", 
   RowBox[{"Max", "[", "err", "]"}]}], "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"showmeAll", "[", 
  RowBox[{"time", ",", " ", "GFUN"}], "]"}]], "Input",
 CellChangeTimes->{{3.421291247408939*^9, 3.4212912612428093`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Isochoric triaxial strain",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538151558648774*^9, 3.5381515595415373`*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-isochoric-triax-strain\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.538151540929509*^9, 3.538151552512727*^9}}],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4111576143502007`*^9, 3.4111576226371326`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple deviatoric \"shear\" strain ... more plots", "Section"],

Cell["This is a plot of y=x for later use.", "Text"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A3U", ",", "RNU"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"yldINshear", "=", 
  RowBox[{"(", 
   RowBox[{"A1M", "-", "A3M"}], ")"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"sig11yld", "=", 
  RowBox[{"yldINshear", "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"3", "/", "4"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eps11yld", "=", 
  RowBox[{"sig11yld", "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", "G0U"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{3.5381435314973993`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"3", "/", "4"}], "]"}], 
    RowBox[{"Abs", "[", "sig11", "]"}]}], "-", "ROOTJ2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", "ROOTJ2", "]"}], "/", "yldINshear"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", "sig11", "]"}], "/", "sig11yld"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"ROOTJ2", " ", "/", "yldINshear"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"sig11", "/", "sig11yld"}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"red", ",", "chainDash"}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4200519588021708`*^9, 3.420051959170561*^9}}],

Cell["\<\
The following plot shows sig11/(2G) versus eps11, where G is the shear \
modulus. The strain path is purely deviatoric. Therefore, since yslope and \
hardmod were given in \"demo.inp\" to be zero, the demo program should \
predict a result that looks like classical nonhardening plasticity.\
\>", "Text",
 CellChangeTimes->{3.538143531636304*^9}],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"eps11", "/", "eps11yld"}], ",", 
    RowBox[{"sig11", "/", "sig11yld"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.538143531710326*^9, 3.538143531744308*^9}}],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
         "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "eps11yld"], ",", 
        FractionBox[
         RowBox[{
         "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "sig11yld"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.01`", "]"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.538143531835362*^9, 3.538143531897911*^9}}],

Cell["\<\
During the initial elastic loading, the demo program is expected to predict \
that sig11=2G eps11. The following plot verifies that the demo program is \
getting this behavior correctly. In the plot below, the dashed straight line \
shows the expected initial elastic response (stress equals strain times twice \
the shear modulus).\
\>", "Text",
 CellChangeTimes->{3.538143532029451*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
          "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "eps11yld"], ",", 
         FractionBox[
          RowBox[{
          "QSSIGXX", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "sig11yld"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", "red", ",", 
        "chainDash"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.420051964565707*^9, 3.420051964987843*^9}, {
  3.538143532096059*^9, 3.538143532153492*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"straight", ",", "stressZEROyslope", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.42005196964863*^9, 3.4200519701080427`*^9}, {
  3.425940754979012*^9, 3.4259407587684727`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["(u) ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Uniaxial strain (geocrack)",
  FontColor->RGBColor[1., 0.2817883573662928, 0.9654840924696727]]
}], "Title",
 CellChangeTimes->{{3.411171347045868*^9, 3.41117135233295*^9}}],

Cell["TTTcomment: This works fine when cap is suppressed.", "Text",
 CellChangeTimes->{{3.420054334806913*^9, 3.420054346010572*^9}}],

Cell["\<\
Uniaxial strain is a good test for the any yield model because it is neither \
purely isotropic nor purely deviatoric.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<u\>\"", "]"}]], "Input"],

Cell["\<\
TTTobservation: In the previous version, lode behaved differently. However, \
in the region where they differ, the stress state is at the tensile \
hydrostatic limit where LODE can be anything.\
\>", "Text",
 CellChangeTimes->{{3.420053656904852*^9, 3.420053753430005*^9}, {
  3.420054079054183*^9, 3.420054128884036*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SiCdata", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "500"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5483", ",", "2992"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5708", ",", "3122"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6526", ",", "3421"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6520", ",", "3418"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6648", ",", "3232"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7122", ",", "3506"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7214", ",", "3559"}], "}"}]}], "}"}], " ", "MPa"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SiCdata", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"SiCdata", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"PointSize", "[", "0.03", "]"}], "}"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Ff", "[", 
      RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"I1bar", ",", "0", ",", "7000*^6"}], "}"}]}], "]"}], ",", 
   "SiCdata"}], "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"I1barmin", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"-", "I1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"I1barmax", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"-", "I1"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"limitPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Ff", "[", 
     RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"I1bar", ",", "I1barmin", ",", "I1barmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "blue", "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"meridI1rJ2", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "I1"}], ",", "ROOTJ2"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"-", "I1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"meridI1rJ2", ",", "limitPlot", ",", "SiCdata"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\</home/rmbrann/SiCuniax.tif\>\"", ",", "%"}], "]"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", 
   RowBox[{"A1M", " ", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4111604699229927`*^9, 3.4111604873942747`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SiCuniaxialStrainMerid.gif\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"meridianALL", "[", 
   RowBox[{"2", ",", "scaler"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.4111576285025*^9, 3.411157638045743*^9}}],

Cell[BoxData[
 RowBox[{"showmeAll", "[", 
  RowBox[{
   RowBox[{"sigm", "/", "scaler"}], ",", 
   RowBox[{"sigs", "/", "scaler"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4200540204652967`*^9, 3.420054020989498*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"octo", "[", 
   RowBox[{"scaler", ",", 
    RowBox[{"Max", "[", "I1", "]"}]}], "]"}], ";", 
  RowBox[{"octo", "[", 
   RowBox[{"scaler", ",", 
    RowBox[{"Min", "[", "I1", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "10"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.420053936013419*^9, 3.420053939690781*^9}}],

Cell[BoxData[
 RowBox[{"stressSpace", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4200539600248737`*^9, 3.4200539630386267`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["stress-strain paths", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showhis", "[", 
   RowBox[{
    RowBox[{"-", "eps11"}], ",", "\"\<-eps11\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.538143532249683*^9, 3.5381435323161697`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/strain_time.gif\>\"", ",", "%"}], "]"}], ";"}],
   "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showhis", "[", 
   RowBox[{
    RowBox[{"-", "sig11"}], ",", "\"\<-sig11\>\""}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/stress_time.gif\>\"", ",", "%"}], "]"}], ";"}],
   "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showhis", "[", 
   RowBox[{"YIELD", ",", "\"\<YIELD\>\""}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/YIELD_time.gif\>\"", ",", "%"}], "]"}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "eps11"}], ",", 
    RowBox[{"-", "sig11"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<-eps11\>\"", ",", "\"\<-sig11\>\""}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5381435324193373`*^9, 3.53814353248668*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/stress_strain.gif\>\"", ",", "%"}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"sigm", ",", "sigs"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "vstrain"}], ",", "PRES"}], "]"}], ";"}]], "Input"],

Cell["\<\
We know that the plot of sig11 should initially equal the 11 strain times the \
constrained uniaxial elastic stiffness. This constrained stiffness is given \
by K+4G/3, where K and G are the bulk and shear moduli of the initial porous \
material. We can access these values here in mathematica. If you take a look \
at the file ending in \".math1\" you will see a list of the user inputs. They \
end in U for the values specified by the user. They end in M for the values \
after they have been modified or checked by the program. Thus, here are the \
\"user\" and \"modified\" values of the constrained modulus:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"uniStiffU", "=", 
  RowBox[{"B0U", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0U"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"uniStiffM", "=", 
  RowBox[{"B0M", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0M"}]}]}]}], "Input"],

Cell["\<\
Now we can plot the 11 stress normalized by the uniaxial constrained \
stiffness. If the code is working correctly, we then expect the slope of this \
normalized curve to initially equal 1.0. To verify this, we will plot the \
normalized curve and superimpose it with a plot of y=x.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".05"}], ",", ".05"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash", ",", "medLine"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.411158504496578*^9, 3.411158504935748*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"makeme", "[", 
     RowBox[{
      RowBox[{"-", "eps11"}], ",", 
      RowBox[{"-", 
       FractionBox["sig11", "uniStiffM"]}]}], "]"}], ",", "straight"}], "]"}],
   "*)"}]], "Input",
 CellChangeTimes->{
  3.4111585150253553`*^9, {3.453753910558003*^9, 3.453753921948131*^9}, 
   3.5381435325867987`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"eps11", ",", 
   RowBox[{"sig22", "/", "uniStiffU"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.453754162406639*^9, 3.453754167578247*^9}, 
   3.538143532683736*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CTPSM", ",", "CTI1M"}], "}"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stress ratio plots", "Section"],

Cell[BoxData[
 RowBox[{"PoisU", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0U"}], "-", 
      RowBox[{"2", " ", "G0U"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0U"}], " ", "+", " ", "G0U"}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"PoisM", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0M"}], "-", 
      RowBox[{"2", " ", "G0M"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0M"}], " ", "+", " ", "G0M"}], ")"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"PoisFacU", "=", 
  RowBox[{"PoisU", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisU"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"PoisFacM", "=", 
  RowBox[{"PoisM", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisM"}], ")"}]}]}]}], "Input"],

Cell["\<\
For uniaxial strain in the linear elastic regime, sig22 = PoisFac*sig11
Let's check...\
\>", "Text"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", ".05"}], ",", ".03"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell["\<\
The following plot shows that the stress ratio is correct during the elastic \
loading. Of course, it must change upon yielding.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{"straight", ",", 
    RowBox[{"showme", "[", 
     RowBox[{
      RowBox[{"sig11", "/", "uniStiffM"}], ",", 
      RowBox[{"sig22", "/", 
       RowBox[{"(", 
        RowBox[{"PoisFacM", " ", "uniStiffM"}], ")"}]}]}], "]"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.453753953892276*^9, 3.453753957116022*^9}}],

Cell["\<\
Here's the axial and lateral stresses, each plotted against the axial strain:\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig11", "/", "uniStiffU"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig22", "/", "uniStiffU"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5381435327830544`*^9, 3.538143532829544*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"makeme", "[", 
     RowBox[{
      RowBox[{"-", "eps11"}], ",", 
      RowBox[{"-", 
       FractionBox["sig11", "uniStiffM"]}]}], "]"}], ",", "straight"}], "]"}],
   "*)"}]], "Input",
 CellChangeTimes->{
  3.411158520273641*^9, {3.453753946468685*^9, 3.4537539510438843`*^9}, 
   3.538143532917049*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A4U", ",", "A4M"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"A1M", "-", 
    RowBox[{"A3M", " ", 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2M"}], " ", "x"}], ")"}]}]}], "+", 
    RowBox[{"A4M", " ", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"10", "^", "9"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"A1M", "-", 
    RowBox[{"A3M", " ", 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2M"}], " ", "x"}], ")"}]}]}], "+", 
    RowBox[{"A4M", " ", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"10", "^", "9"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showmeAll", "[", "SHEAR", "]"}]], "Input",
 CellChangeTimes->{{3.4537541391564407`*^9, 3.453754139978127*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "COHER", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"makeme", "[", 
     RowBox[{"eps11", ",", 
      RowBox[{"sig11", "/", "uniStiffM"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.411158525440331*^9, 3.538143533017642*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}],

Cell[BoxData[{
 RowBox[{"showmeAll", "[", "jacobian", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showmeAll", "[", "USM", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showmeAll", "[", 
  RowBox[{"jacobian", "*", "USM"}], "]"}]}], "Input",
 CellChangeTimes->{{3.453754006687924*^9, 3.4537540137228947`*^9}, {
  3.453754096555265*^9, 3.453754121450925*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["(uu) ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Uniaxial strain",
  FontColor->RGBColor[
   0.977981231403067, 0.27501335164415963`, 0.965117875944152]]
}], "Title"],

Cell["\<\
Uniaxial strain is a good test for the any yield model because it is neither \
purely isotropic nor purely deviatoric.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData["NEWXSV"], "Input",
 CellChangeTimes->{{3.418568778875449*^9, 3.4185687807657146`*^9}}],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<uu\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SiCdata", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "500"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5483", ",", "2992"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5708", ",", "3122"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6526", ",", "3421"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6520", ",", "3418"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6648", ",", "3232"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7122", ",", "3506"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7214", ",", "3559"}], "}"}]}], "}"}], " ", "MPa"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SiCdata", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"SiCdata", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"PointSize", "[", "0.03", "]"}], "}"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"SiCdata", ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Ff", "[", 
      RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"I1bar", ",", "0", ",", "7000*^6"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4300024329831657`*^9, 3.4300024373014593`*^9}}],

Cell[BoxData[{
 RowBox[{"I1barmin", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"-", "I1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"I1barmax", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"-", "I1"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"limitPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Ff", "[", 
     RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"I1bar", ",", "I1barmin", ",", "I1barmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "blue", "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"meridI1rJ2", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "I1"}], ",", "ROOTJ2"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"-", "I1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"meridI1rJ2", ",", "limitPlot", ",", "SiCdata"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\</home/rmbrann/SiCuniax.tif\>\"", ",", "%"}], "]"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", 
   RowBox[{"A1M", " ", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.41115935949104*^9, 3.411160537799108*^9}],

Cell[BoxData[
 RowBox[{"showcy", "[", 
  RowBox[{
   RowBox[{"QSSIGXX", "/", "CTPSM"}], ",", "400", ",", "lastep"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.429999920020636*^9, 3.4299999735255413`*^9}, {
  3.4300002121240396`*^9, 3.4300002169852467`*^9}, {3.430000270667693*^9, 
  3.430000276856902*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SiCuniaxialStrainMerid.gif\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"3", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.41115764253437*^9, 3.411157649317655*^9}, 
   3.411159268372735*^9, {3.4299868163126163`*^9, 3.429986819206061*^9}, {
   3.429986851709033*^9, 3.429986851864819*^9}, 3.4299869956646957`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"sigm", "/", "scaler"}], ",", 
   RowBox[{"sigs", "/", "scaler"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"octo", "[", 
   RowBox[{"scaler", ",", 
    RowBox[{"Max", "[", "I1", "]"}]}], "]"}], ";", 
  RowBox[{"octo", "[", 
   RowBox[{"scaler", ",", 
    RowBox[{"Min", "[", "I1", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4185632962679367`*^9, 3.418563301393614*^9}, {
  3.4299869797469482`*^9, 3.429986985040428*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["stress-strain paths", "Section"],

Cell[BoxData[
 RowBox[{"showhis", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", "\"\<-eps11\>\""}], "]"}]], "Input",
 CellChangeTimes->{
  3.429986916000977*^9, {3.5381435331167917`*^9, 3.538143533150682*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/strain_time.gif\>\"", ",", "%"}], "]"}], ";"}],
   "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showhis", "[", 
  RowBox[{
   RowBox[{"-", "sig11"}], ",", "\"\<-sig11\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.4299869214671707`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/stress_time.gif\>\"", ",", "%"}], "]"}], ";"}],
   "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showhis", "[", 
  RowBox[{"YIELD", ",", "\"\<YIELD\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.4299869227071657`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/YIELD_time.gif\>\"", ",", "%"}], "]"}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", 
   RowBox[{"-", "sig11"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<-eps11\>\"", ",", "\"\<-sig11\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.429986930092999*^9, {3.5381435332199917`*^9, 3.538143533287052*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/stress_strain.gif\>\"", ",", "%"}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"sigm", ",", "sigs"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "COHER"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "sigs"}], "]"}]}], "Input",
 CellChangeTimes->{{3.430002953237632*^9, 3.4300029789909697`*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "vstrain"}], ",", "PRES"}], "]"}]], "Input",
 CellChangeTimes->{3.429986938266975*^9}],

Cell["\<\
We know that the plot of sig11 should initially equal the 11 strain times the \
constrained uniaxial elastic stiffness. This constrained stiffness is given \
by K+4G/3, where K and G are the bulk and shear moduli of the initial porous \
material. We can access these values here in mathematica. If you take a look \
at the file ending in \".math1\" you will see a list of the user inputs. They \
end in U for the values specified by the user. They end in M for the values \
after they have been modified or checked by the program. Thus, here are the \
\"user\" and \"modified\" values of the constrained modulus:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"uniStiffU", "=", 
  RowBox[{"B0U", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0U"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"uniStiffM", "=", 
  RowBox[{"B0M", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0M"}]}]}]}], "Input"],

Cell["\<\
Now we can plot the 11 stress normalized by the uniaxial constrained \
stiffness. If the code is working correctly, we then expect the slope of this \
normalized curve to initially equal 1.0. To verify this, we will plot the \
normalized curve and superimpose it with a plot of y=x.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".05"}], ",", ".05"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash", ",", "medLine"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.411158530536599*^9, 3.4111585309277477`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"makeme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", 
      FractionBox["sig11", "uniStiffM"]}]}], "]"}], ",", "straight"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.411158536369204*^9, 3.411158536831377*^9}, 
   3.538143533386983*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", 
   RowBox[{"-", "sig11"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4300035260054083`*^9, {3.430004258560659*^9, 3.430004261749226*^9}, 
   3.538143533488508*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CTPSM", ",", "CTI1M"}], "}"}]], "Input"],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"TGROW", "/", "T1M"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "COHER", "]"}]}], "Input",
 CellChangeTimes->{{3.430002472939086*^9, 3.430002489457896*^9}, {
  3.430002767963484*^9, 3.430002777216674*^9}, {3.430002851562491*^9, 
  3.430002860290389*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stress ratio plots", "Section"],

Cell[BoxData[
 RowBox[{"PoisU", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0U"}], "-", 
      RowBox[{"2", " ", "G0U"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0U"}], " ", "+", " ", "G0U"}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"PoisM", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0M"}], "-", 
      RowBox[{"2", " ", "G0M"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0M"}], " ", "+", " ", "G0M"}], ")"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"PoisFacU", "=", 
  RowBox[{"PoisU", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisU"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"PoisFacM", "=", 
  RowBox[{"PoisM", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisM"}], ")"}]}]}]}], "Input"],

Cell["\<\
For uniaxial strain in the linear elastic regime, sig22 = PoisFac*sig11
Let's check...\
\>", "Text"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", ".05"}], ",", ".03"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell["\<\
The following plot shows that the stress ratio is correct during the elastic \
loading. Of course, it must change upon yielding.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"straight", ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"sig11", "/", "uniStiffM"}], ",", 
     RowBox[{"sig22", "/", 
      RowBox[{"(", 
       RowBox[{"PoisFacM", " ", "uniStiffM"}], ")"}]}]}], "]"}]}], 
  "]"}]], "Input"],

Cell["\<\
Here's the axial and lateral stresses, each plotted against the axial strain:\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig11", "/", "uniStiffU"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig22", "/", "uniStiffU"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5381435335856113`*^9, 3.538143533652*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stsfac", "=", "A1M"}], ";", 
  RowBox[{"stnfac", "=", 
   FractionBox["stsfac", 
    RowBox[{"B0M", "+", 
     FractionBox[
      RowBox[{"4", " ", "G0M"}], "3"]}]]}], ";", 
  RowBox[{"jnk1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
           "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "stnfac"]}], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
           "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "stsfac"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.5`", ",", "0"}], "]"}], ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.05`", ",", "0.02`"}], "}"}], "]"}]}], "}"}]}]}], 
    "]"}]}]}], "\n", 
 RowBox[{"jnk2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
          "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "stnfac"]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
          "QSSIGXX", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "stsfac"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01`", "]"}], ",", "blue"}], "}"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"jnk1", ",", "jnk2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.53814353375521*^9, 3.53814353381929*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", "BACKRN", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "SHEAR", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "sig11", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Von Mises Uniaxial strain",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538151583446415*^9, 3.5381515842702227`*^9}}],

Cell["\<\
Uniaxial strain is a good test for the any yield model because it is neither \
purely isotropic nor purely deviatoric.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-von-mises-unistrain\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.538151588560955*^9, 3.538151595376178*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SiCdata", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "500"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5483", ",", "2992"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5708", ",", "3122"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6526", ",", "3421"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6520", ",", "3418"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6648", ",", "3232"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7122", ",", "3506"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7214", ",", "3559"}], "}"}]}], "}"}], " ", "MPa"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SiCdata", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"SiCdata", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"PointSize", "[", "0.03", "]"}], "}"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Ff", "[", 
      RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"I1bar", ",", "0", ",", "7000*^6"}], "}"}]}], "]"}], ",", 
   "SiCdata"}], "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"I1barmin", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"-", "I1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"I1barmax", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"-", "I1"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"uslope", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", "G0U"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"3", " ", "B0U"}], ")"}]}], "/", 
   RowBox[{"Sqrt", "[", "3", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"limitPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Ff", "[", 
       RowBox[{"I1bar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M"}], 
       "]"}], ",", 
      RowBox[{"uslope", " ", "I1bar"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"I1bar", ",", "I1barmin", ",", "I1barmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash"}], "}"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"meridI1rJ2", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "I1"}], ",", "ROOTJ2"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"limitPlot", ",", "meridI1rJ2", ",", "SiCdata"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\</home/rmbrann/SiCuniax.tif\>\"", ",", "%"}], "]"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showcy", "[", 
  RowBox[{"vstrain", "+", 
   RowBox[{"I1", "/", 
    RowBox[{"(", 
     RowBox[{"3", " ", "B0M"}], ")"}]}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4111576536403437`*^9, 3.411157660158134*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["stress-strain paths", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showhis", "[", 
   RowBox[{
    RowBox[{"-", "eps11"}], ",", "\"\<-eps11\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.538143533922244*^9, 3.5381435339893217`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/strain_time.gif\>\"", ",", "%"}], "]"}], ";"}],
   "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showhis", "[", 
   RowBox[{
    RowBox[{"-", "sig11"}], ",", "\"\<-sig11\>\""}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/stress_time.gif\>\"", ",", "%"}], "]"}], ";"}],
   "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showhis", "[", 
   RowBox[{"YIELD", ",", "\"\<YIELD\>\""}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\</home/rmbrann/YIELD_time.gif\>\"", ",", "%"}], "]"}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "eps11"}], ",", 
    RowBox[{"-", "sig11"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<-eps11\>\"", ",", "\"\<-sig11\>\""}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5381435340890417`*^9, 3.538143534156459*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"MakeGraphs", ",", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"demodir", "<>", "\"\<stress_strain.gif\>\""}], ",", "%"}], 
    "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"sigm", ",", "sigs"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "vstrain"}], ",", "PRES"}], "]"}], ";"}]], "Input"],

Cell["\<\
We know that the plot of sig11 should initially equal the 11 strain times the \
constrained uniaxial elastic stiffness. This constrained stiffness is given \
by K+4G/3, where K and G are the bulk and shear moduli of the initial porous \
material. We can access these values here in mathematica. If you take a look \
at the file ending in \".math1\" you will see a list of the user inputs. They \
end in U for the values specified by the user. They end in M for the values \
after they have been modified or checked by the program. Thus, here are the \
\"user\" and \"modified\" values of the constrained modulus:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"uniStiffU", "=", 
  RowBox[{"B0U", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0U"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"uniStiffM", "=", 
  RowBox[{"B0M", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0M"}]}]}]}], "Input"],

Cell["\<\
Now we can plot the 11 stress normalized by the uniaxial constrained \
stiffness. If the code is working correctly, we then expect the slope of this \
normalized curve to initially equal 1.0. To verify this, we will plot the \
normalized curve and superimpose it with a plot of y=x.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".05"}], ",", ".05"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash", ",", "medLine"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.41115854889165*^9, 3.4111585495033693`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"makeme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", 
      FractionBox["sig11", "uniStiffM"]}]}], "]"}], ",", "straight"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.4111585547720222`*^9, 3.5381435342557497`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"eps11", ",", "sig22"}], "]"}]], "Input",
 CellChangeTimes->{3.538143534355628*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stress ratio plots", "Section"],

Cell[BoxData[
 RowBox[{"PoisU", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0U"}], "-", 
      RowBox[{"2", " ", "G0U"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0U"}], " ", "+", " ", "G0U"}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"PoisM", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0M"}], "-", 
      RowBox[{"2", " ", "G0M"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0M"}], " ", "+", " ", "G0M"}], ")"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"PoisFacU", "=", 
  RowBox[{"PoisU", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisU"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"PoisFacM", "=", 
  RowBox[{"PoisM", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisM"}], ")"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"sigHEL", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", "3", "]"}], 
   RowBox[{"(", 
    RowBox[{"A1M", "-", "A3M"}], ")"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "PoisM"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "PoisM"}]}], ")"}]}]}]}]], "Input"],

Cell["\<\
For uniaxial strain in the linear elastic regime, sig22 = PoisFac*sig11
Let's check...\
\>", "Text"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", ".05"}], ",", ".03"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell["\<\
Here's the axial and lateral stresses, each plotted against the axial strain:\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig11", "/", "uniStiffU"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig22", "/", "uniStiffU"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.538143534456266*^9, 3.538143534519142*^9}}],

Cell["\<\
The following shows a plot of the difference between the dynamic stress and \
the quasistatic stress. The dashed red box is the exact analytical solution \
for the limit asymptote.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dynamicStrengthdif", "=", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"4", " ", "G0M", " ", "T1M"}], ")"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"d11", "-", "d22"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"strengthScale", "=", 
   RowBox[{"Max", "[", "sig11", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"theorySteadyState", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         
         FractionBox[
          RowBox[{
          "dynamicStrengthdif", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "strengthScale"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", "red", ",", 
        "chainDash"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"calcDynamic", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "time", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{
           "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "-", 
           RowBox[{
           "QSSIGXX", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], "strengthScale"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.01`", "]"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"theorySteadyState", ",", "calcDynamic", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"72", " ", "8"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.411158559755814*^9, 3.411158571048931*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{"-", "eps11"}], ",", 
   RowBox[{
    RowBox[{"-", "sig11"}], "/", "sigHEL"}]}], "]"}]], "Input",
 CellChangeTimes->{3.538143534569499*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<rateLimitTestStsStn.gif\>\"", ",", "%"}], "]"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"eps11", ",", 
   RowBox[{"sig11", "/", "sigHEL"}]}], "]"}]], "Input",
 CellChangeTimes->{3.538143534640265*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"sig11", "-", "QSSIGXX"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Deviatoric \"shear\" strain with superimposed \
confining isotropic strain",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.538151604654086*^9, 3.538151605398752*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", 
  "\"\<kayenta-deviatoric-shear-with-isotropic-strain\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538151607105886*^9, 3.5381516239705544`*^9}}],

Cell[BoxData[
 RowBox[{"elasticInfo", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "4"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.425941889357174*^9}],

Cell[BoxData[
 RowBox[{"ymult", "=", 
  RowBox[{"1", "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A1M", "-", "A3M"}], ")"}], "^", "2"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticInfo", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.411157664853867*^9, 3.411157672238494*^9}}],

Cell[BoxData[
 RowBox[{"meridianALLold", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}]], "Input",
 CellChangeTimes->{3.411159454194086*^9, 3.41116054917768*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"P3M", ">", "1*^-9"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"EQPV", "/", "P3M"}], "]"}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["more plots", "Section"],

Cell["This is a plot of y=x for later use.", "Text"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "0.015`"}], ",", "0.005`"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{"eps11", ",", 
    RowBox[{"sig11", "/", 
     RowBox[{"(", 
      RowBox[{"2.", " ", "G0M"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.538143534739313*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"stressZEROyslope", ",", "straight"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
        
        FractionBox[
         RowBox[{
         "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         RowBox[{"2.`", " ", "G0M"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"blue", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.538143534837327*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", "vstrain"}], ",", 
    RowBox[{"-", "sig11"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["zig-zag strain",
 FontColor->RGBColor[0, 1, 0]]], "Title",
 CellChangeTimes->{{3.4111713694775743`*^9, 3.41117139989259*^9}, {
  3.4200716554364557`*^9, 3.4200716622875233`*^9}, {3.429987084176732*^9, 
  3.4299870851969967`*^9}, {3.538151630283544*^9, 3.538151630863019*^9}}],

Cell["Does not run at all, not even with tempTTT.dat.", "Text",
 CellChangeTimes->{{3.421681258244842*^9, 3.4216812765536947`*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<kayenta-zig-zag\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538151632610238*^9, 3.53815163725012*^9}}],

Cell[BoxData["scaler"], "Input"],

Cell[BoxData[
 RowBox[{"ymult", "=", 
  RowBox[{"1", "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A1M", "-", "A3M"}], ")"}], "^", "2"}]}]}]], "Input"],

Cell[BoxData["scalez"], "Input"],

Cell[BoxData["scaler"], "Input"],

Cell[BoxData["A1M"], "Input"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.411157676525734*^9, 3.41115768710146*^9}}],

Cell[BoxData[
 RowBox[{"sigsrange", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "400*^6"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", 
   RowBox[{"10", "^", "6"}]}], "]"}]], "Input",
 CellChangeTimes->{3.41115769153236*^9}],

Cell[BoxData[
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"2", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{3.411157693484161*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<plasticMonotonic.gif\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "600"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A2U", ",", "A3U", ",", "A4U"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"A1", ",", "A2PFU", ",", "A3", ",", "A4PFU"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"B0M", "/", 
    RowBox[{"10", "^", "6"}]}], ",", 
   RowBox[{"G0M", "/", 
    RowBox[{"10", "^", "6"}]}]}], "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"threek", "=", 
   RowBox[{"3", "B0M"}]}], ";", 
  RowBox[{"twog", "=", 
   RowBox[{"2", "G0M"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"P3M", ">", "1*^-9"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"EQPV", "/", "P3M"}], "]"}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["more plots", "Section"],

Cell["This is a plot of y=x for later use.", "Text"],

Cell[BoxData[{"red", "\[IndentingNewLine]", "chainDash"}], "Input"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "0.001`"}], ",", "0.005`"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"eps11", "-", "eps22"}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"sig11", "-", "sig22"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2.", " ", "G0M"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5381435349410563`*^9, 3.538143544864781*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"stressZEROyslope", ",", "straight"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"eps11", "+", 
       RowBox[{"2", "eps22"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"sig11", "+", 
        RowBox[{"2", "sig22"}]}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"3.", " ", "B0M"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5381435350373173`*^9, 3.538143544914366*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"stressZEROyslope", ",", "straight"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "=", "sigs"}], ";", 
  RowBox[{"z", "=", "sigm"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "r", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Tangent modulus", "Subsection"],

Cell[BoxData[{
 RowBox[{"Length", "[", "r", "]"}], "\[IndentingNewLine]", "lastep"}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"time", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"time", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"lastep", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"time", "[", 
        RowBox[{"[", "lastep", "]"}], "]"}], "-", 
       RowBox[{"time", "[", 
        RowBox[{"[", 
         RowBox[{"lastep", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zrofAL", "[", 
   RowBox[{"sigA_", ",", "sigL_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "/", "3"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"sigA", "+", 
       RowBox[{"2", "sigL"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "/", "3"}], "]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"sigA", "-", "sigL"}], ")"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"zrofAL", "[", "AL_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sigA", ",", "sigL"}], "}"}], ",", 
    RowBox[{
     RowBox[{"sigA", "=", 
      RowBox[{"AL", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"sigL", "=", 
      RowBox[{"AL", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", 
     RowBox[{"zrofAL", "[", 
      RowBox[{"sigA", ",", "sigL"}], "]"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ALofzr", "[", 
   RowBox[{"z_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "6", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "r"}], "+", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "z"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "6", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "r"}], "+", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "z"}]}], ")"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"ALofzr", "[", "zr_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z", ",", "r"}], "}"}], ",", 
    RowBox[{
     RowBox[{"z", "=", 
      RowBox[{"zr", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"r", "=", 
      RowBox[{"zr", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", 
     RowBox[{"ALofzr", "[", 
      RowBox[{"z", ",", "r"}], "]"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"epsAL", "=", 
   RowBox[{"maketab", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", "eps22"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"epszr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"zrofAL", "[", 
      RowBox[{"epsAL", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"epsz", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epszr", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"epsr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epszr", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "lastep"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"epszr", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.538143535123763*^9, 3.538143544964637*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"depsr", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"epsr", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"epsr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"lastep", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"epsr", "[", 
        RowBox[{"[", "lastep", "]"}], "]"}], "-", 
       RowBox[{"epsr", "[", 
        RowBox[{"[", 
         RowBox[{"lastep", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"depsz", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"epsz", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"epsz", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"lastep", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"epsz", "[", 
        RowBox[{"[", "lastep", "]"}], "]"}], "-", 
       RowBox[{"epsz", "[", 
        RowBox[{"[", 
         RowBox[{"lastep", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dEPSmag", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"depsr", "^", "2"}], "+", 
     RowBox[{"depsz", "^", "2"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"depszDirect", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"d11", "+", 
        RowBox[{"2", "d22"}]}], ")"}]}], "/", 
     RowBox[{"Sqrt", "[", "3", "]"}]}], "dt"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"depsrDirect", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"d11", "-", "d22"}], ")"}]}], " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", "/", "3"}], "]"}], "dt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dEPSmagDirect", "=", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"d11", "^", "2"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"d22", "^", "2"}]}]}], "]"}], "dt"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seti1i2", "[", 
   RowBox[{"2498", ",", "2503"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jnk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dEPSmagDirect", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "i1", ",", "i2"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"dEPSmagScale", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Max", "[", "jnk", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Min", "[", "jnk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jnk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"depszDirect", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "i1", ",", "i2"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"depszScale", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Max", "[", "jnk", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Min", "[", "jnk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jnk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"depsrDirect", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "i1", ",", "i2"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"depsrScale", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Max", "[", "jnk", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Min", "[", "jnk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dEPSmag", "-", "dEPSmagDirect"}], ")"}], "/", "dEPSmagScale"}],
     ",", "i1", ",", "i2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"depsz", "-", "depszDirect"}], ")"}], "/", "depszScale"}], ",", 
    "i1", ",", "i2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showcy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"depsr", "-", "depsrDirect"}], ")"}], "/", "depsrScale"}], ",",
      "i1", ",", "i2"}], "]"}], ";"}], " "}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.411170150715314*^9, 3.4111701885649652`*^9}, {
  3.411170940837345*^9, 3.411170957087901*^9}, {3.427750148822404*^9, 
  3.427750149947154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"deps11", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"eps11", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"eps11", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"lastep", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eps11", "[", 
        RowBox[{"[", "lastep", "]"}], "]"}], "-", 
       RowBox[{"eps11", "[", 
        RowBox[{"[", 
         RowBox[{"lastep", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deps22", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"eps22", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"eps22", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"lastep", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eps22", "[", 
        RowBox[{"[", "lastep", "]"}], "]"}], "-", 
       RowBox[{"eps22", "[", 
        RowBox[{"[", 
         RowBox[{"lastep", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deps11direct", "=", 
   RowBox[{"d11", " ", "dt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deps22direct", "=", 
   RowBox[{"d22", " ", "dt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"showcy", "[", "deps11", "]"}]}], "Input",
 CellChangeTimes->{
  3.411170199101839*^9, {3.538143535220901*^9, 3.538143545118515*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"deps11direct", "=", 
   RowBox[{"d11", " ", "dt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deps22direct", "=", 
   RowBox[{"d22", " ", "dt"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seti1i2", "[", 
   RowBox[{"2498", ",", "2503"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jnk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"deps11direct", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "i1", ",", "i2"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"deps11Scale", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Max", "[", "jnk", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Min", "[", "jnk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jnk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"deps22direct", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "i1", ",", "i2"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"deps22Scale", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Max", "[", "jnk", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Min", "[", "jnk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{
    RowBox[{"(", "deps11direct", ")"}], ",", "i1", ",", "i2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{
    RowBox[{"(", "deps11", ")"}], ",", "i1", ",", "i2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"showcy", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"deps11", "-", "deps11direct"}], ")"}], ",", "i1", ",", "i2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"deps22", "-", "deps22direct"}], ")"}], ",", "i1", ",", "i2"}], 
   "]"}], " "}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4111702059907093`*^9, 3.411170225420362*^9}, {
  3.4111709689251547`*^9, 3.4111709811427593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsigr", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"r", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"lastep", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"[", "lastep", "]"}], "]"}], "-", 
       RowBox[{"r", "[", 
        RowBox[{"[", 
         RowBox[{"lastep", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsigz", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"z", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"lastep", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", "lastep", "]"}], "]"}], "-", 
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"lastep", "-", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dSIGmag", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"dsigr", "^", "2"}], "+", 
     RowBox[{"dsigz", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.411170232778555*^9, 3.411170234575735*^9}}],

Cell[BoxData[{"lastep", "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "dt", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"showmeAll", "[", 
  RowBox[{"time", ",", "d11"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"maketab", "[", 
    RowBox[{"time", ",", "d11"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"depsz", "/", "dt"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "depsr", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "dEPSmag", "]"}]}], "Input",
 CellChangeTimes->{{3.41117025026943*^9, 3.4111702525216303`*^9}}],

Cell[BoxData[{
 RowBox[{"showme", "[", "depsz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "depsr", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "dEPSmag", "]"}]}], "Input",
 CellChangeTimes->{{3.411170256700164*^9, 3.4111702589537287`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nr", "=", 
   RowBox[{"depsr", "/", "dEPSmag"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nz", "=", 
   RowBox[{"depsz", "/", "dEPSmag"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.411170262820565*^9, 3.411170270641891*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ang", "=", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"depsz", ",", "depsr"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", "ang", "]"}]}], "Input",
 CellChangeTimes->{{3.411170265988741*^9, 3.411170277025618*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"ang", " ", 
   RowBox[{"180", "/", "Pi"}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seti1i2", "[", 
   RowBox[{"1", ",", "100"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabz", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"maketab", "[", 
     RowBox[{
      RowBox[{"ang", "*", 
       RowBox[{"180", "/", "Pi"}]}], ",", 
      RowBox[{"dsigz", "/", "dEPSmag"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabr", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{"maketab", "[", 
      RowBox[{
       RowBox[{"ang", "*", 
        RowBox[{"180", "/", "Pi"}]}], ",", 
       RowBox[{"dsigr", "/", "dEPSmag"}]}], "]"}], "]"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.411170286414927*^9, 3.411170298780776*^9}, {
  3.41117043385492*^9, 3.4111704354764843`*^9}, {3.4111706789998426`*^9, 
  3.411170696305766*^9}}],

Cell[BoxData[{"lastep", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "tabz", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.411170305891152*^9, 3.411170310424903*^9}, {
  3.411170689543208*^9, 3.411170691277495*^9}}],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"tabz", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"tabr", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.411170313875699*^9, 3.4111703185534782`*^9}, {
  3.411170702855505*^9, 3.411170704462832*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tabp", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"maketab", "[", 
     RowBox[{"ang", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dsigz", " ", 
          RowBox[{"Cos", "[", "ang", "]"}]}], "+", 
         RowBox[{"dsigr", " ", 
          RowBox[{"Sin", "[", "ang", "]"}]}]}], ")"}], "/", "dEPSmag"}]}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabe", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{"maketab", "[", 
      RowBox[{"ang", ",", 
       RowBox[{
        RowBox[{"threek", "*", 
         RowBox[{
          RowBox[{"Cos", "[", "ang", "]"}], "^", "2"}]}], "+", 
        RowBox[{"twog", "*", 
         RowBox[{
          RowBox[{"Sin", "[", "ang", "]"}], "^", "2"}]}]}]}], "]"}], "]"}]}], 
   ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.411170321366914*^9, 3.411170324900202*^9}, {
  3.411170707771071*^9, 3.4111707094894857`*^9}}],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"tabp", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"tabe", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.4111703290686007`*^9, 3.4111703328093*^9}, {
  3.411170712711838*^9, 3.411170714470334*^9}}],

Cell[BoxData[
 RowBox[{"refplt", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RR", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"RR", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], "/.", 
     RowBox[{"RR", "\[Rule]", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "t", "]"}], "/", "threek"}], ")"}], "^", 
          "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", "t", "]"}], "/", "twog"}], ")"}], "^", 
          "2"}]}], "]"}]}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"r", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "A1M"}], ")"}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"phasedat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dsigz", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"dsigr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "/", 
      RowBox[{"dEPSmag", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "i1", ",", "i2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"phaseplt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"phasedat", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"PointSize", "[", "0.02", "]"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"phasedat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dsigz", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"dsigr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "/", 
      RowBox[{"dEPSmag", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "tabe", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"phaseplt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"phasedat", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"PointSize", "[", "0.02", "]"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"refplt", ",", "phaseplt"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<phaseplt.gif\>\"", ",", "%", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "600"}]}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "=", "phasedat"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{"Length", "[", "u", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "ang", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"ang", " ", 
   RowBox[{"180", "/", "Pi"}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scaleu", "=", "twog"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angu1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
         "ang", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], " ", 
         "180"}], "\[Pi]"], ",", 
       FractionBox[
        RowBox[{"u", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        "scaleu"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "u", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"anguCopy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"360", "+", 
        FractionBox[
         RowBox[{
          RowBox[{
          "ang", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], " ", 
          "180"}], "\[Pi]"]}], ",", 
       FractionBox[
        RowBox[{"u", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        "scaleu"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "u", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angu", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"angu1", ",", "anguCopy"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angsort", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"angu", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "angu", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"usort", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"angu", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "angu", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"uzsort", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"usort", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "usort", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ursort", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"usort", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "usort", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"angsort", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"uzsort", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"ursort", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Length", "[", "anguCopy", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"angu", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slopeYield", "=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], 
    RowBox[{"Sqrt", "[", "3", "]"}], "A4M"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slopeFlow", "=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], 
    RowBox[{"Sqrt", "[", "3", "]"}], "A4PFM"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nr", "=", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", 
      RowBox[{"slopeYield", "^", "2"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nz", "=", 
   RowBox[{
    RowBox[{"-", "slopeYield"}], "*", "Nr"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mr", "=", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", 
      RowBox[{"slopeFlow", "^", "2"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mz", "=", 
   RowBox[{
    RowBox[{"-", "slopeFlow"}], "*", "Nr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NNN", "=", 
  RowBox[{"{", 
   RowBox[{"Nz", ",", "Nr"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"MMM", "=", 
  RowBox[{"{", 
   RowBox[{"Mz", ",", "Mr"}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["(d) debug",
 FontColor->RGBColor[1., 0.26836041809719996`, 0.9584802014190891]]], "Title"],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<d\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"5", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"meridianALL", "[", 
   RowBox[{"5", ",", "scaler"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.411157697549553*^9, 3.411157705463278*^9}, {
  3.4259422826426*^9, 3.425942296071661*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.425942416858363*^9, 3.4259424202330503`*^9}}],

Cell[BoxData["T1M"], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple deviatoric \"shear\" strain ... more plots", "Section"],

Cell["This is a plot of y=x for later use.", "Text"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A1U", ",", "A3U", ",", "RNU"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"yldINshear", "=", 
  RowBox[{"(", 
   RowBox[{"A1U", "-", "A3U"}], ")"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"sig11yld", "=", 
  RowBox[{"yldINshear", "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"3", "/", "4"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eps11yld", "=", 
  RowBox[{"sig11yld", "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", "G0U"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{3.5381435354732637`*^9}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"3", "/", "4"}], "]"}], 
    RowBox[{"Abs", "[", "sig11", "]"}]}], "-", "ROOTJ2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", "ROOTJ2", "]"}], "/", "yldINshear"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", "sig11", "]"}], "/", "sig11yld"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"ROOTJ2", " ", "/", "yldINshear"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"sig11", "/", "sig11yld"}], "]"}], ";"}]}], "Input"],

Cell["\<\
The following plot shows sig11/(2G) versus eps11, where G is the shear \
modulus. The strain path is purely deviatoric. Therefore, since yslope and \
hardmod were given in \"demo.inp\" to be zero, the demo program should \
predict a result that looks like classical nonhardening plasticity.\
\>", "Text",
 CellChangeTimes->{3.538143535626793*^9}],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"showme", "[", 
   RowBox[{
    RowBox[{"eps11", "/", "eps11yld"}], ",", 
    RowBox[{"sig11", "/", "sig11yld"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.538143535699836*^9, 3.538143535737508*^9}}],

Cell["\<\
During the initial elastic loading, the demo program is expected to predict \
that sig11=2G eps11. The following plot verifies that the demo program is \
getting this behavior correctly. In the plot below, the dashed straight line \
shows the expected initial elastic response (stress equals strain times twice \
the shear modulus).\
\>", "Text",
 CellChangeTimes->{3.538143535879251*^9}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "eps11", ",", "1", ",", "20"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "sig11", ",", "1", ",", "20"}], "]"}]}], "Input",
 CellChangeTimes->{{3.425942549088167*^9, 3.425942609644555*^9}, 
   3.538143535957836*^9}],

Cell[BoxData[{
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "eps22", ",", "1", ",", "20"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"showme", "[", 
  RowBox[{"time", ",", "sig22", ",", "1", ",", "20"}], "]"}]}], "Input",
 CellChangeTimes->{{3.425942549088167*^9, 3.425942637916337*^9}, 
   3.53814354520618*^9}],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
         "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "eps11yld"], ",", 
        FractionBox[
         RowBox[{
         "QSSIGXX", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "sig11yld"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01`", "]"}], ",", "red", ",", 
       "chainDash"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.538143536021433*^9, 3.538143536070231*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"straight", ",", "stressZEROyslope"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"stressZEROyslope", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
         "eps11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "eps11yld"], ",", 
        FractionBox[
         RowBox[{
         "sig11", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "sig11yld"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"blue", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5381435361213837`*^9, 3.538143536155232*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["(dd) DEBUG",
 FontColor->RGBColor[1., 0.2802319371328298, 0.9575036240177005]]], "Title",
 FontColor->GrayLevel[0]],

Cell["Works with tempTTT.dat, but not tempTTT2.dat", "Text",
 CellChangeTimes->{{3.42168002656229*^9, 3.4216800387621937`*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section"],

Cell[BoxData[
 RowBox[{"setRun", "[", "\"\<dd\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"meridianALLbasic", "[", 
  RowBox[{"10", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"meridianALL", "[", 
  RowBox[{"2", ",", "scaler"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"elasticInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.411157714245406*^9, 3.411157723452938*^9}, {
  3.4247267193538857`*^9, 3.4247267313908052`*^9}, {3.424729816403474*^9, 
  3.424729830785421*^9}, {3.4248127900864162`*^9, 3.424812792640766*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"OCTO1", "[", "istep", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.405724434822562*^9, 3.40572444050282*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"npic", "=", "5"}], ";", 
  RowBox[{"incstep", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"IntegerPart", "[", 
      RowBox[{"lastep", "/", "npic"}], "]"}], ",", "1"}], "]"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"OCTO1", "[", "istep", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"istep", ",", "1", ",", "lastep", ",", "incstep"}], "}"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"showme", "[", "sig33", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"elasticInfo", "[", "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["stress-strain paths", "Section"],

Cell["\<\
We know that the plot of sig11 should initially equal the 11 strain times the \
constrained uniaxial elastic stiffness. This constrained stiffness is given \
by K+4G/3, where K and G are the bulk and shear moduli of the initial porous \
material. We can access these values here in mathematica. If you take a look \
at the file ending in \".math1\" you will see a list of the user inputs. They \
end in U for the values specified by the user. They end in M for the values \
after they have been modified or checked by the program. Thus, here are the \
\"user\" and \"modified\" values of the constrained modulus:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"uniStiffU", "=", 
  RowBox[{"B0U", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0U"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"uniStiffM", "=", 
  RowBox[{"B0M", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "3"}], ")"}], "G0M"}]}]}]}], "Input"],

Cell["\<\
Now we can plot the 11 stress normalized by the uniaxial constrained \
stiffness. If the code is working correctly, we then expect the slope of this \
normalized curve to initially equal 1.0. To verify this, we will plot the \
normalized curve and superimpose it with a plot of y=x.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"straight", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".001"}], ",", ".02"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{3.411158577080525*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"straight", ",", 
   RowBox[{"makeme", "[", 
    RowBox[{
     RowBox[{"-", "eps11"}], ",", 
     RowBox[{"-", 
      FractionBox["sig11", "uniStiffM"]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.41115858211355*^9, 3.4111586034493923`*^9}, 
   3.538143536205261*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stress ratio plots", "Section"],

Cell[BoxData[
 RowBox[{"PoisU", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0U"}], "-", 
      RowBox[{"2", " ", "G0U"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0U"}], " ", "+", " ", "G0U"}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"PoisM", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "B0M"}], "-", 
      RowBox[{"2", " ", "G0M"}]}], ")"}], "/", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "B0M"}], " ", "+", " ", "G0M"}], ")"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"PoisFacU", "=", 
  RowBox[{"PoisU", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisU"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"PoisFacM", "=", 
  RowBox[{"PoisM", "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "PoisM"}], ")"}]}]}]}], "Input"],

Cell["\<\
For uniaxial strain in the linear elastic regime, sig22 = PoisFac*sig11
Let's check...\
\>", "Text"],

Cell[BoxData[
 RowBox[{"straight", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", ".05"}], ",", ".03"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"red", ",", "chainDash"}], "}"}]}]}], "]"}]}]], "Input"],

Cell["\<\
The following plot shows that the stress ratio is correct during the elastic \
loading. Of course, it must change upon yielding.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"straight", ",", 
   RowBox[{"showme", "[", 
    RowBox[{
     RowBox[{"sig11", "/", "uniStiffM"}], ",", 
     RowBox[{"sig22", "/", 
      RowBox[{"(", 
       RowBox[{"PoisFacM", " ", "uniStiffM"}], ")"}]}]}], "]"}]}], 
  "]"}]], "Input"],

Cell["\<\
Here's the axial and lateral stresses, each plotted against the axial strain:\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig11", "/", "uniStiffU"}]}], "]"}], ",", 
   RowBox[{"showme", "[", 
    RowBox[{"eps11", ",", 
     RowBox[{"sig22", "/", "uniStiffU"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.538143536255148*^9, 3.538143536288498*^9}}],

Cell[BoxData[
 RowBox[{"showme", "[", 
  RowBox[{"KAPPA", "/", "QSEL"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"geocrack", ",", 
   RowBox[{"showme", "[", "COHER", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435814374626165*^9, 3.435814384718693*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["PLAYGROUND", "Title"],

Cell["Use this as temporary work space.", "Text"]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowSize->{1102, 719},
WindowMargins->{{132, Automatic}, {Automatic, 7}},
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{611.25, 789.5625},
"PostScriptOutputFile"->"/home/rmbrann/FY/MED/demo/new.pdf"},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "Modify the definitions below to change the default appearance of all \
cells in a given style.  Make modifications to any definition using commands \
in the Format menu.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Presentation"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{24, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 12], 
         Cell[
          StyleData[All, "Condensed"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{8, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 8], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          CellLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 5, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          StyleData["Notebook"], PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, 
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"]}, {
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"], None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, CellFrameLabelMargins -> 
          6, StyleMenuListing -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{12, Inherited}, {20, 40}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 36, FontWeight -> "Bold"], 
            Cell[
             StyleData["Title", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 40}}, LineSpacing -> {1, 0}, 
             FontSize -> 44], 
            Cell[
             StyleData["Title", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 8}}, FontSize -> 20], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{2, 10}, {12, 30}}, FontSize -> 24]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], 
             CellMargins -> {{12, Inherited}, {20, 15}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Helvetica", 
             FontSize -> 24], 
            Cell[
             StyleData["Subtitle", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 20}}, LineSpacing -> {1, 0}, 
             FontSize -> 36], 
            Cell[
             StyleData["Subtitle", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 4}}, FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{2, 10}, {12, 8}}, FontSize -> 18]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], 
             CellMargins -> {{12, Inherited}, {20, 15}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsubtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Helvetica", FontSize -> 14, 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["Subsubtitle", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 20}}, LineSpacing -> {1, 0}, 
             FontSize -> 24], 
            Cell[
             StyleData["Subsubtitle", "Condensed"], 
             CellMargins -> {{8, 10}, {8, 8}}, FontSize -> 12], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{2, 10}, {12, 8}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{25, Inherited}, {8, 24}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Helvetica", FontSize -> 16, FontWeight -> "Bold"], 
            Cell[
             StyleData["Section", "Presentation"], 
             CellMargins -> {{40, 10}, {11, 32}}, LineSpacing -> {1, 0}, 
             FontSize -> 24], 
            Cell[
             StyleData["Section", "Condensed"], 
             CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 12], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{13, 0}, {7, 22}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "\[FilledSmallSquare]", 
             CellMargins -> {{22, Inherited}, {8, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsection", "Presentation"], 
             CellMargins -> {{36, 10}, {11, 32}}, LineSpacing -> {1, 0}, 
             FontSize -> 22], 
            Cell[
             StyleData["Subsection", "Condensed"], 
             CellMargins -> {{16, Inherited}, {6, 12}}, FontSize -> 12], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{9, 0}, {7, 22}}, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> 
             "\[FilledSmallSquare]", 
             CellMargins -> {{22, Inherited}, {8, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsubsection", FontFamily -> "Times", FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsubsection", "Presentation"], 
             CellMargins -> {{34, 10}, {11, 26}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Subsubsection", "Condensed"], 
             CellMargins -> {{17, Inherited}, {6, 12}}, FontSize -> 10], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{9, 0}, {7, 14}}, FontSize -> 11]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{12, 10}, {7, 7}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, Hyphenation -> 
             True, LineSpacing -> {1, 3}, CounterIncrements -> "Text", 
             FontColor -> RGBColor[1, 0, 0], Background -> 
             GrayLevel[0.900008]], 
            Cell[
             StyleData["Text", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["Text", "Condensed"], CellMargins -> {{8, 10}, {6, 6}},
              LineSpacing -> {1, 1}, FontSize -> 11], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{2, 2}, {6, 6}}, 
             TextJustification -> 0.5, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{12, 10}, {6, 6}}, 
             DefaultNewInlineCellStyle -> "None", Hyphenation -> True, 
             LineSpacing -> {1, 3}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "SmallText", FontFamily -> "Helvetica", 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Presentation"], 
             CellMargins -> {{24, 10}, {8, 8}}, LineSpacing -> {1, 5}, 
             FontSize -> 12], 
            Cell[
             StyleData["SmallText", "Condensed"], 
             CellMargins -> {{8, 10}, {5, 5}}, LineSpacing -> {1, 2}, 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, 
             FontSize -> 7]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names. Some attributes for these styles are actually set in FormatType Styles \
(in the last section of this stylesheet). ", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellMargins -> {{45, 10}, {5, 7}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
             InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
             LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
             "Input", FontWeight -> "Bold", FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Input", "Presentation"], 
             CellMargins -> {{72, Inherited}, {8, 10}}, LineSpacing -> {1, 0},
              FontSize -> 16], 
            Cell[
             StyleData["Input", "Condensed"], 
             CellMargins -> {{40, 10}, {2, 3}}, FontSize -> 11], 
            Cell[
             StyleData["Input", "Printout"], CellMargins -> {{39, 0}, {4, 6}},
              LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
           Closed]], 
         Cell[
          StyleData["InputOnly"], Evaluatable -> True, CellGroupingRules -> 
          "InputGrouping", CellHorizontalScrolling -> True, DefaultFormatType -> 
          DefaultInputFormatType, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
          InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
          LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
          "Input", StyleMenuListing -> None, FontWeight -> "Bold"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], CellMargins -> {{47, 10}, {7, 5}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, DefaultFormatType -> 
             DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
             InputForm, CounterIncrements -> "Output", FontColor -> 
             GrayLevel[0.333333], Background -> None], 
            Cell[
             StyleData["Output", "Presentation"], 
             CellMargins -> {{72, Inherited}, {10, 8}}, LineSpacing -> {1, 0},
              FontSize -> 16], 
            Cell[
             StyleData["Output", "Condensed"], 
             CellMargins -> {{41, Inherited}, {3, 2}}, FontSize -> 11], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{39, 0}, {6, 4}}, FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Message", StyleMenuListing -> None, 
             FontSize -> 11, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Presentation"], 
             CellMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 0}, FontSize -> 16], 
            Cell[
             StyleData["Message", "Condensed"], 
             CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 11], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 7, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Print", StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Presentation"], 
             CellMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 0}, FontSize -> 16], 
            Cell[
             StyleData["Print", "Condensed"], 
             CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 11], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{4, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             None, FormatType -> InputForm, CounterIncrements -> "Graphics", 
             ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
             StyleMenuListing -> None, FontFamily -> "Courier", FontSize -> 
             10], 
            Cell[
             StyleData["Graphics", "Presentation"], 
             ImageMargins -> {{62, Inherited}, {Inherited, 0}}], 
            Cell[
             StyleData["Graphics", "Condensed"], 
             ImageMargins -> {{38, Inherited}, {Inherited, 0}}, Magnification -> 
             0.6], 
            Cell[
             StyleData["Graphics", "Printout"], 
             ImageMargins -> {{30, Inherited}, {Inherited, 0}}, Magnification -> 
             0.8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Presentation"], FontSize -> 12], 
            Cell[
             StyleData["CellLabel", "Condensed"], FontSize -> 9], 
            Cell[
             StyleData["CellLabel", "Printout"], FontFamily -> "Courier", 
             FontSize -> 8, FontSlant -> "Italic", FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Inline Formatting", "Section"], 
         Cell[
         "These styles are for modifying individual words or letters in a \
cell exclusive of the cell tag.", "Text"], 
         Cell[
          StyleData["RM"], StyleMenuListing -> None, FontWeight -> "Plain", 
          FontSlant -> "Plain"], 
         Cell[
          StyleData["BF"], StyleMenuListing -> None, FontWeight -> "Bold"], 
         Cell[
          StyleData["IT"], StyleMenuListing -> None, FontSlant -> "Italic"], 
         Cell[
          StyleData["TR"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["TI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["TB"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["TBI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["MR"], StyleMenuListing -> None, FontFamily -> "Courier", 
          FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["MO"], StyleMenuListing -> None, FontFamily -> "Courier", 
          FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["MB"], StyleMenuListing -> None, FontFamily -> "Courier", 
          FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["MBO"], StyleMenuListing -> None, FontFamily -> "Courier",
           FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["SR"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["SO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["SB"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["SBO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SO10"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 10, FontWeight -> "Plain", FontSlant -> 
             "Italic"], 
            Cell[
             StyleData["SO10", "Printout"], StyleMenuListing -> None, 
             FontFamily -> "Helvetica", FontSize -> 7, FontWeight -> "Plain", 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["SO10", "EnhancedPrintout"], StyleMenuListing -> None, 
             FontFamily -> "Futura", FontSize -> 7, FontWeight -> "Plain", 
             FontSlant -> "Italic"]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Formulas and Programming", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineFormula"], CellMargins -> {{10, 4}, {0, 8}}, 
             CellHorizontalScrolling -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 1, SingleLetterItalics -> True], 
            Cell[
             StyleData["InlineFormula", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["InlineFormula", "Condensed"], 
             CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["InlineFormula", "Printout"], 
             CellMargins -> {{2, 0}, {6, 6}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayFormula"], 
             CellMargins -> {{42, Inherited}, {Inherited, Inherited}}, 
             CellHorizontalScrolling -> True, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
             UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
            Cell[
             StyleData["DisplayFormula", "Presentation"], 
             LineSpacing -> {1, 5}, FontSize -> 16], 
            Cell[
             StyleData["DisplayFormula", "Condensed"], LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["DisplayFormula", "Printout"], FontSize -> 10]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Program"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
             CellMargins -> {{10, 4}, {0, 8}}, CellHorizontalScrolling -> 
             True, LanguageCategory -> "Formula", ScriptLevel -> 1, 
             FontFamily -> "Courier"], 
            Cell[
             StyleData["Program", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["Program", "Condensed"], 
             CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["Program", "Printout"], 
             CellMargins -> {{2, 0}, {6, 6}}, FontSize -> 9]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["Hyperlink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
         "The following styles are for linking automatically to the on-line \
help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["MainBookLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["AddOnsLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["RefGuideLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["GettingStartedLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"], FontSize -> 
             16], 
            Cell[
             StyleData["OtherInformationLink", "Condensed"], FontSize -> 11], 
            
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 10, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 9, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Placeholder"], Placeholder -> True, StyleMenuListing -> 
             None, FontSlant -> "Italic", FontColor -> 
             RGBColor[0.890623, 0.864698, 0.384756], 
             TagBoxOptions -> {
              Editable -> False, Selectable -> False, StripWrapperBoxes -> 
               False}], 
            Cell[
             StyleData["Placeholder", "Presentation"]], 
            Cell[
             StyleData["Placeholder", "Condensed"]], 
            Cell[
             StyleData["Placeholder", "Printout"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrimaryPlaceholder"], StyleMenuListing -> None, 
             DrawHighlighted -> True, FontSlant -> "Italic", Background -> 
             RGBColor[0.912505, 0.891798, 0.507774], 
             TagBoxOptions -> {
              Editable -> False, Selectable -> False, StripWrapperBoxes -> 
               False}], 
            Cell[
             StyleData["PrimaryPlaceholder", "Presentation"]], 
            Cell[
             StyleData["PrimaryPlaceholder", "Condensed"]], 
            Cell[
             StyleData["PrimaryPlaceholder", "Printout"]]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options. This is particularly true of Input and Output.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, Hyphenation -> False, 
          AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12, Background -> GrayLevel[1]], 
         Cell[
          StyleData["InputForm"], InputAutoReplacements -> {}, 
          AllowInlineCells -> False, Hyphenation -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {0.6, 1}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          StyleData["InlineCell"], TextAlignment -> Left, ScriptLevel -> 1, 
          StyleMenuListing -> None], 
         Cell[
          StyleData["InlineCellEditing"], StyleMenuListing -> None, 
          Background -> RGBColor[1, 0.749996, 0.8]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Automatic Styles", "Section"], 
         Cell[
         "The cells below define styles that are used to affect the display \
of certain types of objects in typeset expressions.  For example, \
\"UnmatchedBracket\" style defines how unmatched bracket, curly bracket, and \
parenthesis characters are displayed (typically by coloring them to make them \
stand out).", "Text"], 
         Cell[
          StyleData["UnmatchedBracket"], StyleMenuListing -> None, FontColor -> 
          RGBColor[0.760006, 0.330007, 0.8]]}, Closed]]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, 2011)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "S5.84.1"->{
  Cell[229194, 6486, 141, 2, 24, "Input",
   CellTags->"S5.84.1"],
  Cell[232057, 6574, 280, 7, 63, "Input",
   CellTags->"S5.84.1"],
  Cell[251979, 7200, 139, 2, 70, "Input",
   CellTags->"S5.84.1"],
  Cell[255459, 7317, 218, 6, 63, "Input",
   CellTags->"S5.84.1"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"S5.84.1", 422140, 12356}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 112, 1, 96, "Title"],
Cell[682, 25, 481, 10, 57, "Text"],
Cell[1166, 37, 2904, 56, 286, "Text"],
Cell[4073, 95, 2836, 45, 342, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[6946, 145, 243, 5, 60, "Title"],
Cell[CellGroupData[{
Cell[7214, 154, 110, 1, 48, "Section"],
Cell[7327, 157, 1952, 37, 312, "Text"],
Cell[9282, 196, 480, 8, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[9799, 209, 174, 2, 48, "Section"],
Cell[9976, 213, 657, 11, 57, "Text"],
Cell[10636, 226, 109, 1, 42, "Text"],
Cell[10748, 229, 100, 1, 24, "Input"],
Cell[10851, 232, 553, 10, 72, "Text"],
Cell[11407, 244, 98, 1, 24, "Input"],
Cell[11508, 247, 99, 1, 24, "Input"],
Cell[11610, 250, 771, 13, 87, "Text"],
Cell[12384, 265, 248, 3, 24, "Input"],
Cell[CellGroupData[{
Cell[12657, 272, 220, 4, 38, "Subsubsection"],
Cell[12880, 278, 1233, 20, 102, "Text"],
Cell[14116, 300, 289, 6, 24, "Input"],
Cell[14408, 308, 224, 5, 42, "Text"],
Cell[14635, 315, 246, 7, 87, "Text"],
Cell[14884, 324, 177, 3, 24, "Input"],
Cell[15064, 329, 335, 6, 72, "Text"],
Cell[15402, 337, 358, 9, 24, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[15821, 353, 149, 2, 60, "Title"],
Cell[15973, 357, 454, 8, 57, "Text"],
Cell[CellGroupData[{
Cell[16452, 369, 27, 0, 48, "Section"],
Cell[16482, 371, 2345, 51, 312, "Text"],
Cell[18830, 424, 348, 5, 24, "Input"],
Cell[CellGroupData[{
Cell[19203, 433, 193, 4, 38, "Subsubsection"],
Cell[19399, 439, 841, 15, 117, "Text"],
Cell[20243, 456, 195, 3, 24, "Input"],
Cell[20441, 461, 199, 3, 24, "Input"],
Cell[20643, 466, 313, 6, 57, "Text"],
Cell[20959, 474, 175, 2, 40, "Input"],
Cell[21137, 478, 137, 1, 40, "Input"],
Cell[21277, 481, 413, 11, 57, "Text"],
Cell[21693, 494, 275, 4, 24, "Input"],
Cell[21971, 500, 855, 15, 117, "Text"],
Cell[22829, 517, 177, 3, 24, "Input"],
Cell[23009, 522, 433, 11, 72, "Text"],
Cell[23445, 535, 263, 6, 24, "Input"],
Cell[23711, 543, 898, 17, 132, "Text"],
Cell[24612, 562, 98, 1, 24, "Input"],
Cell[24713, 565, 393, 8, 55, "Input"],
Cell[25109, 575, 127, 2, 24, "Input"],
Cell[25239, 579, 180, 4, 42, "Text"],
Cell[25422, 585, 206, 5, 40, "Input"],
Cell[25631, 592, 287, 5, 42, "Text"],
Cell[25921, 599, 59, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[26017, 605, 262, 5, 38, "Subsubsection"],
Cell[26282, 612, 453, 7, 42, "Text"],
Cell[26738, 621, 319, 7, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[27106, 634, 30, 0, 48, "Section"],
Cell[27139, 636, 230, 4, 42, "Text"],
Cell[27372, 642, 379, 7, 72, "Text"],
Cell[27754, 651, 602, 16, 24, "Input"],
Cell[28359, 669, 195, 4, 24, "Input"],
Cell[28557, 675, 26, 0, 24, "Input"],
Cell[28586, 677, 191, 6, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[28826, 689, 143, 2, 60, "Title"],
Cell[CellGroupData[{
Cell[28994, 695, 27, 0, 48, "Section"],
Cell[29024, 697, 252, 4, 24, "Input"],
Cell[29279, 703, 118, 2, 24, "Input"],
Cell[29400, 707, 165, 2, 24, "Input"],
Cell[29568, 711, 299, 5, 57, "Text"],
Cell[29870, 718, 104, 1, 24, "Input"],
Cell[29977, 721, 436, 9, 55, "Input"],
Cell[30416, 732, 127, 2, 24, "Input"],
Cell[30546, 736, 321, 5, 24, "Input"],
Cell[CellGroupData[{
Cell[30892, 745, 290, 6, 38, "Subsubsection"],
Cell[31185, 753, 412, 8, 42, "Text"],
Cell[31600, 763, 345, 7, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[31994, 776, 30, 0, 48, "Section"],
Cell[32027, 778, 66, 1, 24, "Input"],
Cell[32096, 781, 1139, 35, 40, "Input"],
Cell[33238, 818, 26, 0, 24, "Input"],
Cell[33267, 820, 485, 9, 72, "Text"],
Cell[33755, 831, 271, 8, 24, "Input"],
Cell[34029, 841, 291, 6, 57, "Text"],
Cell[34323, 849, 627, 17, 24, "Input"],
Cell[34953, 868, 96, 1, 42, "Text"],
Cell[35052, 871, 816, 20, 24, "Input"],
Cell[35871, 893, 287, 7, 24, "Input"],
Cell[36161, 902, 96, 2, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[36306, 910, 165, 2, 60, "Title"],
Cell[CellGroupData[{
Cell[36496, 916, 27, 0, 48, "Section"],
Cell[36526, 918, 174, 3, 24, "Input"],
Cell[36703, 923, 434, 9, 55, "Input"],
Cell[37140, 934, 127, 2, 24, "Input"],
Cell[37270, 938, 137, 3, 24, "Input"],
Cell[37410, 943, 532, 15, 24, "Input"],
Cell[37945, 960, 195, 4, 24, "Input"],
Cell[CellGroupData[{
Cell[38165, 968, 290, 6, 38, "Subsubsection"],
Cell[38458, 976, 692, 10, 72, "Text"],
Cell[39153, 988, 322, 7, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[39524, 1001, 30, 0, 48, "Section"],
Cell[39557, 1003, 31, 0, 42, "Text"],
Cell[39591, 1005, 336, 10, 24, "Input"],
Cell[39930, 1017, 188, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[40167, 1027, 273, 4, 60, "Title"],
Cell[40443, 1033, 177, 2, 42, "Text"],
Cell[CellGroupData[{
Cell[40645, 1039, 27, 0, 48, "Section"],
Cell[40675, 1041, 218, 4, 24, "Input"],
Cell[40896, 1047, 129, 2, 24, "Input"],
Cell[41028, 1051, 386, 8, 55, "Input"],
Cell[41417, 1061, 432, 12, 36, "Input"],
Cell[41852, 1075, 350, 10, 24, "Input"],
Cell[42205, 1087, 133, 2, 24, "Input"],
Cell[42341, 1091, 137, 3, 24, "Input"],
Cell[42481, 1096, 532, 15, 24, "Input"],
Cell[43016, 1113, 99, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[43152, 1119, 30, 0, 48, "Section"],
Cell[43185, 1121, 31, 0, 42, "Text"],
Cell[43219, 1123, 336, 10, 24, "Input"],
Cell[43558, 1135, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[43796, 1145, 285, 4, 60, "Title"],
Cell[44084, 1151, 128, 1, 42, "Text"],
Cell[CellGroupData[{
Cell[44237, 1156, 27, 0, 48, "Section"],
Cell[44267, 1158, 185, 3, 24, "Input"],
Cell[44455, 1163, 336, 7, 55, "Input"],
Cell[44794, 1172, 532, 15, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[45363, 1192, 30, 0, 48, "Section"],
Cell[45396, 1194, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[45634, 1204, 252, 4, 60, "Title"],
Cell[45889, 1210, 700, 11, 72, "Text"],
Cell[CellGroupData[{
Cell[46614, 1225, 27, 0, 48, "Section"],
Cell[46644, 1227, 209, 4, 24, "Input"],
Cell[46856, 1233, 336, 7, 55, "Input"],
Cell[47195, 1242, 530, 15, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[47762, 1262, 38, 0, 48, "Section"],
Cell[47803, 1264, 461, 7, 57, "Text"],
Cell[48267, 1273, 139, 1, 40, "Input"],
Cell[48409, 1276, 306, 5, 57, "Text"],
Cell[48718, 1283, 423, 12, 24, "Input"],
Cell[49144, 1297, 295, 9, 43, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[49476, 1311, 37, 0, 28, "Section"],
Cell[49516, 1313, 98, 1, 24, "Input"],
Cell[49617, 1316, 275, 8, 40, "Input"],
Cell[49895, 1326, 110, 3, 57, "Text"],
Cell[50008, 1331, 310, 9, 24, "Input"],
Cell[50321, 1342, 152, 3, 42, "Text"],
Cell[50476, 1347, 287, 9, 24, "Input"],
Cell[50766, 1358, 103, 3, 42, "Text"],
Cell[50872, 1363, 489, 14, 24, "Input"],
Cell[51364, 1379, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[51602, 1389, 276, 4, 60, "Title"],
Cell[51881, 1395, 241, 3, 42, "Text"],
Cell[52125, 1400, 125, 1, 42, "Text"],
Cell[CellGroupData[{
Cell[52275, 1405, 69, 0, 48, "Section"],
Cell[52347, 1407, 118, 3, 42, "Text"],
Cell[52468, 1412, 348, 9, 55, "Input"],
Cell[52819, 1423, 541, 18, 40, "Input"],
Cell[53363, 1443, 687, 21, 70, "Input"],
Cell[54053, 1466, 697, 21, 70, "Input"],
Cell[54753, 1489, 491, 13, 85, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[55281, 1507, 27, 0, 28, "Section"],
Cell[55311, 1509, 234, 4, 24, "Input"],
Cell[55548, 1515, 493, 10, 117, "Text"],
Cell[56044, 1527, 336, 7, 55, "Input"],
Cell[56383, 1536, 213, 4, 42, "Text"],
Cell[56599, 1542, 303, 7, 40, "Input"],
Cell[56905, 1551, 220, 6, 24, "Input"],
Cell[57128, 1559, 529, 15, 24, "Input"],
Cell[57660, 1576, 207, 6, 24, "Input"],
Cell[57870, 1584, 101, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[58008, 1590, 30, 0, 48, "Section"],
Cell[58041, 1592, 292, 8, 24, "Input"],
Cell[58336, 1602, 237, 5, 57, "Text"],
Cell[58576, 1609, 358, 9, 55, "Input"],
Cell[58937, 1620, 196, 3, 40, "Input"],
Cell[59136, 1625, 374, 6, 57, "Text"],
Cell[59513, 1633, 89, 2, 24, "Input"],
Cell[59605, 1637, 215, 4, 42, "Text"],
Cell[59823, 1643, 88, 2, 24, "Input"],
Cell[59914, 1647, 215, 4, 72, "Text"],
Cell[60132, 1653, 63, 1, 24, "Input"],
Cell[60198, 1656, 105, 2, 24, "Input"],
Cell[60306, 1660, 253, 5, 57, "Text"],
Cell[60562, 1667, 62, 1, 24, "Input"],
Cell[60627, 1670, 65, 1, 24, "Input"],
Cell[60695, 1673, 112, 3, 42, "Text"],
Cell[60810, 1678, 61, 1, 24, "Input"],
Cell[60874, 1681, 74, 0, 42, "Text"],
Cell[60951, 1683, 128, 4, 24, "Input"],
Cell[61082, 1689, 189, 5, 24, "Input"],
Cell[61274, 1696, 2537, 65, 215, "Input"],
Cell[63814, 1763, 1978, 54, 93, "Input"],
Cell[65795, 1819, 86, 2, 24, "Input"],
Cell[65884, 1823, 1783, 50, 70, "Input"],
Cell[67670, 1875, 212, 6, 24, "Input"],
Cell[67885, 1883, 531, 12, 70, "Input"],
Cell[68419, 1897, 217, 6, 40, "Input"],
Cell[68639, 1905, 217, 6, 40, "Input"],
Cell[68859, 1913, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[69097, 1923, 151, 2, 60, "Title"],
Cell[CellGroupData[{
Cell[69273, 1929, 27, 0, 48, "Section"],
Cell[69303, 1931, 154, 2, 24, "Input"],
Cell[69460, 1935, 337, 7, 55, "Input"],
Cell[69800, 1944, 530, 15, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[70367, 1964, 30, 0, 48, "Section"],
Cell[70400, 1966, 614, 18, 40, "Input"],
Cell[71017, 1986, 145, 3, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[71199, 1994, 38, 0, 48, "Section"],
Cell[71240, 1996, 210, 5, 24, "Input"],
Cell[71453, 2003, 186, 4, 24, "Input"],
Cell[71642, 2009, 161, 4, 24, "Input"],
Cell[71806, 2015, 185, 4, 24, "Input"],
Cell[71994, 2021, 143, 3, 24, "Input"],
Cell[72140, 2026, 184, 4, 24, "Input"],
Cell[72327, 2032, 309, 9, 24, "Input"],
Cell[72639, 2043, 190, 4, 24, "Input"],
Cell[72832, 2049, 88, 2, 24, "Input"],
Cell[72923, 2053, 152, 4, 24, "Input"],
Cell[73078, 2059, 423, 12, 24, "Input"],
Cell[73504, 2073, 296, 9, 43, "Input"],
Cell[73803, 2084, 132, 3, 24, "Input"],
Cell[73938, 2089, 282, 9, 24, "Input"],
Cell[74223, 2100, 151, 4, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[74411, 2109, 37, 0, 48, "Section"],
Cell[74451, 2111, 275, 8, 40, "Input"],
Cell[74729, 2121, 110, 3, 57, "Text"],
Cell[74842, 2126, 382, 12, 24, "Input"],
Cell[75227, 2140, 152, 3, 42, "Text"],
Cell[75382, 2145, 287, 9, 24, "Input"],
Cell[75672, 2156, 103, 3, 42, "Text"],
Cell[75778, 2161, 485, 14, 24, "Input"],
Cell[76266, 2177, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[76504, 2187, 210, 3, 60, "Title"],
Cell[76717, 2192, 378, 10, 57, "Text"],
Cell[CellGroupData[{
Cell[77120, 2206, 27, 0, 48, "Section"],
Cell[77150, 2208, 164, 3, 24, "Input"],
Cell[77317, 2213, 101, 1, 24, "Input"],
Cell[77421, 2216, 222, 3, 24, "Input"],
Cell[77646, 2221, 527, 12, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[78210, 2238, 44, 0, 48, "Section"],
Cell[CellGroupData[{
Cell[78279, 2242, 100, 1, 42, "Subsection"],
Cell[78382, 2245, 113, 1, 42, "Text"],
Cell[78498, 2248, 100, 1, 24, "Input"],
Cell[78601, 2251, 183, 3, 40, "Input"],
Cell[78787, 2256, 152, 4, 24, "Input"],
Cell[78942, 2262, 80, 2, 24, "Input"],
Cell[79025, 2266, 157, 3, 24, "Input"],
Cell[79185, 2271, 1242, 39, 55, "Input"],
Cell[80430, 2312, 969, 27, 62, "Input"],
Cell[81402, 2341, 268, 7, 24, "Input"],
Cell[81673, 2350, 92, 2, 24, "Input"],
Cell[81768, 2354, 169, 3, 24, "Input"],
Cell[81940, 2359, 174, 4, 24, "Input"],
Cell[82117, 2365, 175, 4, 24, "Input"],
Cell[82295, 2371, 66, 1, 24, "Input"],
Cell[82364, 2374, 162, 5, 24, "Input"],
Cell[82529, 2381, 132, 4, 24, "Input"],
Cell[82664, 2387, 130, 4, 24, "Input"],
Cell[82797, 2393, 271, 6, 72, "Text"],
Cell[83071, 2401, 1047, 30, 81, "Input"],
Cell[84121, 2433, 217, 6, 24, "Input"],
Cell[84341, 2441, 81, 2, 24, "Input"],
Cell[84425, 2445, 168, 5, 24, "Input"],
Cell[84596, 2452, 61, 1, 24, "Input"],
Cell[84660, 2455, 128, 1, 42, "Text"],
Cell[84791, 2458, 234, 6, 24, "Input"],
Cell[85028, 2466, 95, 2, 24, "Input"],
Cell[85126, 2470, 109, 3, 42, "Text"],
Cell[85238, 2475, 210, 7, 24, "Input"],
Cell[85451, 2484, 115, 3, 24, "Input"],
Cell[85569, 2489, 207, 7, 24, "Input"],
Cell[85779, 2498, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[86029, 2509, 239, 6, 60, "Title"],
Cell[86271, 2517, 378, 10, 57, "Text"],
Cell[CellGroupData[{
Cell[86674, 2531, 27, 0, 48, "Section"],
Cell[86704, 2533, 67, 1, 24, "Input"],
Cell[86774, 2536, 181, 3, 40, "Input"],
Cell[86958, 2541, 176, 4, 24, "Input"],
Cell[87137, 2547, 157, 3, 24, "Input"],
Cell[87297, 2552, 155, 3, 24, "Input"],
Cell[87455, 2557, 234, 6, 24, "Input"],
Cell[87692, 2565, 170, 3, 24, "Input"],
Cell[87865, 2570, 80, 2, 24, "Input"],
Cell[87948, 2574, 151, 3, 24, "Input"],
Cell[88102, 2579, 1415, 42, 55, "Input"],
Cell[89520, 2623, 1026, 27, 62, "Input"],
Cell[90549, 2652, 203, 6, 24, "Input"],
Cell[90755, 2660, 92, 2, 24, "Input"],
Cell[90850, 2664, 126, 2, 24, "Input"],
Cell[90979, 2668, 129, 2, 24, "Input"],
Cell[91111, 2672, 171, 3, 24, "Input"],
Cell[91285, 2677, 62, 1, 24, "Input"],
Cell[91350, 2680, 106, 3, 24, "Input"],
Cell[91459, 2685, 129, 4, 24, "Input"],
Cell[91591, 2691, 66, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[91694, 2697, 44, 0, 48, "Section"],
Cell[91741, 2699, 162, 5, 24, "Input"],
Cell[91906, 2706, 132, 4, 24, "Input"],
Cell[92041, 2712, 130, 4, 24, "Input"],
Cell[92174, 2718, 271, 6, 72, "Text"],
Cell[92448, 2726, 1047, 30, 81, "Input"],
Cell[93498, 2758, 217, 6, 24, "Input"],
Cell[93718, 2766, 81, 2, 24, "Input"],
Cell[93802, 2770, 168, 5, 24, "Input"],
Cell[93973, 2777, 61, 1, 24, "Input"],
Cell[94037, 2780, 231, 6, 24, "Input"],
Cell[94271, 2788, 95, 2, 24, "Input"],
Cell[94369, 2792, 210, 7, 24, "Input"],
Cell[94582, 2801, 115, 3, 24, "Input"],
Cell[94700, 2806, 210, 6, 40, "Input"],
Cell[94913, 2814, 213, 6, 40, "Input"],
Cell[95129, 2822, 110, 3, 24, "Input"],
Cell[95242, 2827, 65, 0, 40, "Input"],
Cell[95310, 2829, 33, 0, 24, "Input"],
Cell[95346, 2831, 100, 1, 24, "Input"],
Cell[95449, 2834, 176, 3, 24, "Input"],
Cell[95628, 2839, 426, 10, 24, "Input"],
Cell[96057, 2851, 297, 8, 24, "Input"],
Cell[96357, 2861, 1019, 28, 40, "Input"],
Cell[97379, 2891, 366, 10, 24, "Input"],
Cell[97748, 2903, 185, 3, 24, "Input"],
Cell[97936, 2908, 174, 3, 24, "Input"],
Cell[98113, 2913, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[98351, 2923, 146, 2, 60, "Title"],
Cell[CellGroupData[{
Cell[98522, 2929, 27, 0, 48, "Section"],
Cell[98552, 2931, 151, 2, 24, "Input"],
Cell[98706, 2935, 100, 1, 24, "Input"],
Cell[98809, 2938, 336, 7, 55, "Input"],
Cell[99148, 2947, 530, 15, 24, "Input"],
Cell[99681, 2964, 317, 8, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[100035, 2977, 30, 0, 48, "Section"],
Cell[100068, 2979, 62, 1, 24, "Input"],
Cell[100133, 2982, 398, 7, 57, "Text"],
Cell[100534, 2991, 449, 12, 24, "Input"],
Cell[100986, 3005, 29, 0, 24, "Input"],
Cell[101018, 3007, 89, 2, 24, "Input"],
Cell[101110, 3011, 168, 5, 42, "Text"],
Cell[101281, 3018, 4444, 111, 287, "Input"],
Cell[105728, 3131, 75, 0, 42, "Text"],
Cell[105806, 3133, 1033, 33, 70, "Input"],
Cell[106842, 3168, 4014, 123, 115, "Input"],
Cell[110859, 3293, 229, 6, 24, "Input"],
Cell[111091, 3301, 1168, 29, 99, "Input"],
Cell[112262, 3332, 234, 6, 70, "Input"],
Cell[112499, 3340, 1007, 29, 70, "Input"],
Cell[113509, 3371, 179, 3, 24, "Input"],
Cell[113691, 3376, 1096, 31, 55, "Input"],
Cell[114790, 3409, 170, 3, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[114997, 3417, 30, 0, 48, "Section"],
Cell[115030, 3419, 65, 1, 24, "Input"],
Cell[115098, 3422, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[115336, 3432, 146, 2, 60, "Title"],
Cell[CellGroupData[{
Cell[115507, 3438, 27, 0, 48, "Section"],
Cell[115537, 3440, 154, 2, 24, "Input"],
Cell[115694, 3444, 338, 7, 55, "Input"],
Cell[116035, 3453, 529, 15, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[116601, 3473, 30, 0, 48, "Section"],
Cell[116634, 3475, 1084, 31, 100, "Input"],
Cell[117721, 3508, 202, 6, 24, "Input"],
Cell[117926, 3516, 326, 10, 24, "Input"],
Cell[118255, 3528, 52, 0, 42, "Text"],
Cell[118310, 3530, 429, 12, 24, "Input"],
Cell[118742, 3544, 319, 9, 24, "Input"],
Cell[119064, 3555, 398, 7, 57, "Text"],
Cell[119465, 3564, 102, 2, 24, "Input"],
Cell[119570, 3568, 197, 4, 24, "Input"],
Cell[119770, 3574, 105, 2, 24, "Input"],
Cell[119878, 3578, 105, 2, 24, "Input"],
Cell[119986, 3582, 182, 5, 24, "Input"],
Cell[120171, 3589, 349, 9, 24, "Input"],
Cell[120523, 3600, 163, 3, 24, "Input"],
Cell[120689, 3605, 350, 9, 24, "Input"],
Cell[121042, 3616, 164, 3, 24, "Input"],
Cell[121209, 3621, 76, 2, 24, "Input"],
Cell[121288, 3625, 89, 2, 24, "Input"],
Cell[121380, 3629, 462, 14, 24, "Input"],
Cell[121845, 3645, 345, 10, 24, "Input"],
Cell[122193, 3657, 345, 10, 24, "Input"],
Cell[122541, 3669, 303, 8, 24, "Input"],
Cell[122847, 3679, 380, 10, 24, "Input"],
Cell[123230, 3691, 167, 3, 24, "Input"],
Cell[123400, 3696, 88, 2, 24, "Input"],
Cell[123491, 3700, 163, 3, 24, "Input"],
Cell[123657, 3705, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[123895, 3715, 141, 2, 60, "Title"],
Cell[124039, 3719, 143, 3, 57, "Text"],
Cell[CellGroupData[{
Cell[124207, 3726, 27, 0, 48, "Section"],
Cell[124237, 3728, 144, 2, 24, "Input"],
Cell[124384, 3732, 207, 4, 72, "Text"],
Cell[124594, 3738, 462, 11, 55, "Input"],
Cell[125059, 3751, 215, 6, 40, "Input"],
Cell[125277, 3759, 100, 2, 24, "Input"],
Cell[125380, 3763, 401, 11, 24, "Input"],
Cell[125784, 3776, 64, 1, 24, "Input"],
Cell[125851, 3779, 206, 5, 40, "Input"],
Cell[126060, 3786, 190, 5, 24, "Input"],
Cell[126253, 3793, 318, 6, 55, "Input"],
Cell[126574, 3801, 125, 2, 24, "Input"],
Cell[126702, 3805, 224, 5, 57, "Text"],
Cell[126929, 3812, 40046, 683, 368, "Output"],
Cell[166978, 4497, 235, 7, 24, "Input"],
Cell[167216, 4506, 626, 17, 24, "Input"],
Cell[167845, 4525, 162, 3, 24, "Input"],
Cell[168010, 4530, 128, 2, 24, "Input"],
Cell[168141, 4534, 343, 7, 57, "Text"],
Cell[168487, 4543, 363, 7, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[168887, 4555, 30, 0, 28, "Section"],
Cell[168920, 4557, 967, 27, 100, "Input"],
Cell[169890, 4586, 193, 3, 40, "Input"],
Cell[170086, 4591, 105, 2, 24, "Input"],
Cell[170194, 4595, 157, 3, 24, "Input"],
Cell[170354, 4600, 157, 3, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[170548, 4608, 82, 1, 28, "Section"],
Cell[CellGroupData[{
Cell[170655, 4613, 107, 2, 24, "Input"],
Cell[170765, 4617, 6832, 118, 230, "Output"]
}, Closed]],
Cell[177612, 4738, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[177850, 4748, 163, 2, 60, "Title"],
Cell[178016, 4752, 378, 10, 57, "Text"],
Cell[CellGroupData[{
Cell[178419, 4766, 27, 0, 48, "Section"],
Cell[178449, 4768, 170, 3, 24, "Input"],
Cell[178622, 4773, 161, 3, 42, "Text"],
Cell[178786, 4778, 299, 5, 57, "Text"],
Cell[179088, 4785, 319, 6, 55, "Input"],
Cell[179410, 4793, 427, 13, 24, "Input"],
Cell[179840, 4808, 85, 2, 24, "Input"],
Cell[179928, 4812, 1083, 33, 40, "Input"],
Cell[181014, 4847, 80, 2, 24, "Input"],
Cell[181097, 4851, 271, 8, 24, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181405, 4864, 44, 0, 28, "Section"],
Cell[181452, 4866, 146, 5, 28, "Input"],
Cell[181601, 4873, 110, 3, 24, "Input"],
Cell[181714, 4878, 81, 2, 24, "Input"],
Cell[181798, 4882, 168, 5, 24, "Input"],
Cell[181969, 4889, 61, 1, 24, "Input"],
Cell[182033, 4892, 177, 4, 24, "Input"],
Cell[182213, 4898, 280, 9, 24, "Input"],
Cell[182496, 4909, 66, 1, 24, "Input"],
Cell[182565, 4912, 80, 2, 24, "Input"],
Cell[182648, 4916, 115, 3, 24, "Input"],
Cell[182766, 4921, 117, 3, 24, "Input"],
Cell[182886, 4926, 160, 4, 24, "Input"],
Cell[183049, 4932, 128, 3, 24, "Input"],
Cell[183180, 4937, 343, 7, 40, "Input"],
Cell[183526, 4946, 106, 2, 24, "Input"],
Cell[183635, 4950, 138, 3, 24, "Input"],
Cell[183776, 4955, 297, 8, 24, "Input"],
Cell[184076, 4965, 229, 7, 24, "Input"],
Cell[184308, 4974, 227, 7, 24, "Input"],
Cell[184538, 4983, 229, 7, 24, "Input"],
Cell[184770, 4992, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[185008, 5002, 180, 3, 60, "Title"],
Cell[CellGroupData[{
Cell[185213, 5009, 27, 0, 48, "Section"],
Cell[CellGroupData[{
Cell[185265, 5013, 40, 0, 42, "Subsection"],
Cell[185308, 5015, 156, 2, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[185501, 5022, 40, 0, 42, "Subsection"],
Cell[185544, 5024, 493, 10, 70, "Input"],
Cell[186040, 5036, 63, 1, 24, "Input"],
Cell[186106, 5039, 178, 3, 24, "Input"],
Cell[186287, 5044, 31, 0, 24, "Input"],
Cell[186321, 5046, 130, 3, 24, "Input"],
Cell[186454, 5051, 29, 0, 24, "Input"],
Cell[186486, 5053, 88, 2, 24, "Input"],
Cell[186577, 5057, 64, 1, 24, "Input"],
Cell[186644, 5060, 546, 16, 40, "Input"],
Cell[187193, 5078, 135, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[187377, 5088, 58, 0, 48, "Section"],
Cell[187438, 5090, 281, 6, 72, "Text"],
Cell[187722, 5098, 591, 20, 63, "Input"],
Cell[188316, 5120, 3090, 113, 151, "Input"],
Cell[191409, 5235, 2111, 77, 126, "Input"],
Cell[193523, 5314, 3928, 145, 70, "Input"],
Cell[197454, 5461, 213, 4, 42, "Text"],
Cell[197670, 5467, 1000, 27, 100, "Input"],
Cell[198673, 5496, 92, 1, 70, "Input"],
Cell[198768, 5499, 85, 2, 70, "Input"],
Cell[198856, 5503, 177, 5, 70, "Input"],
Cell[199036, 5510, 177, 5, 70, "Input"],
Cell[199216, 5517, 238, 7, 70, "Input"],
Cell[199457, 5526, 377, 8, 102, "Text"],
Cell[199837, 5536, 1820, 48, 115, "Input"],
Cell[201660, 5586, 1574, 37, 115, "Input"],
Cell[203237, 5625, 750, 18, 70, "Input"],
Cell[203990, 5645, 1088, 29, 40, "Input"],
Cell[205081, 5676, 185, 4, 24, "Input"],
Cell[205269, 5682, 1441, 44, 55, "Input"],
Cell[206713, 5728, 175, 2, 85, "Input"],
Cell[206891, 5732, 64, 1, 24, "Input"],
Cell[206958, 5735, 108, 2, 24, "Input"],
Cell[207069, 5739, 62, 1, 24, "Input"],
Cell[207134, 5742, 201, 4, 42, "Text"],
Cell[207338, 5748, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[207576, 5758, 161, 2, 60, "Title"],
Cell[CellGroupData[{
Cell[207762, 5764, 27, 0, 48, "Section"],
Cell[207792, 5766, 146, 2, 24, "Input"],
Cell[207941, 5770, 318, 6, 55, "Input"],
Cell[208262, 5778, 719, 20, 55, "Input"],
Cell[208984, 5800, 528, 15, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[209549, 5820, 30, 0, 48, "Section"],
Cell[209582, 5822, 62, 1, 24, "Input"],
Cell[209647, 5825, 326, 10, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[210010, 5840, 101, 2, 48, "Section"],
Cell[210114, 5844, 52, 0, 42, "Text"],
Cell[210169, 5846, 316, 9, 24, "Input"],
Cell[210488, 5857, 252, 7, 24, "Input"],
Cell[210743, 5866, 254, 7, 24, "Input"],
Cell[211000, 5875, 398, 7, 57, "Text"],
Cell[211401, 5884, 289, 7, 24, "Input"],
Cell[211693, 5893, 748, 21, 44, "Input"],
Cell[212444, 5916, 237, 5, 24, "Input"],
Cell[212684, 5923, 547, 16, 24, "Input"],
Cell[213234, 5941, 195, 4, 24, "Input"],
Cell[213432, 5947, 107, 2, 24, "Input"],
Cell[213542, 5951, 105, 2, 24, "Input"],
Cell[213650, 5955, 64, 1, 24, "Input"],
Cell[213717, 5958, 131, 3, 24, "Input"],
Cell[213851, 5963, 32, 0, 24, "Input"],
Cell[213886, 5965, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[214124, 5975, 183, 3, 60, "Title"],
Cell[214310, 5980, 165, 4, 57, "Text"],
Cell[CellGroupData[{
Cell[214500, 5988, 27, 0, 48, "Section"],
Cell[214530, 5990, 153, 2, 24, "Input"],
Cell[214686, 5994, 267, 8, 24, "Input"],
Cell[214956, 6004, 275, 8, 24, "Input"],
Cell[215234, 6014, 241, 6, 24, "Input"],
Cell[215478, 6022, 87, 2, 24, "Input"],
Cell[215568, 6026, 196, 4, 24, "Input"],
Cell[215767, 6032, 65, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[215869, 6038, 58, 0, 48, "Section"],
Cell[215930, 6040, 214, 5, 57, "Text"],
Cell[216147, 6047, 189, 6, 43, "Input"],
Cell[216339, 6055, 1907, 70, 142, "Input"],
Cell[218249, 6127, 2187, 81, 122, "Input"],
Cell[220439, 6210, 213, 4, 42, "Text"],
Cell[220655, 6216, 627, 17, 70, "Input"],
Cell[221285, 6235, 85, 2, 24, "Input"],
Cell[221373, 6239, 177, 5, 24, "Input"],
Cell[221553, 6246, 177, 5, 24, "Input"],
Cell[221733, 6253, 238, 7, 24, "Input"],
Cell[221974, 6262, 187, 4, 57, "Text"],
Cell[222164, 6268, 200, 5, 24, "Input"],
Cell[222367, 6275, 1820, 52, 100, "Input"],
Cell[224190, 6329, 1121, 26, 100, "Input"],
Cell[225314, 6357, 94, 2, 24, "Input"],
Cell[225411, 6361, 50, 1, 24, "Input"],
Cell[225464, 6364, 28, 0, 24, "Input"],
Cell[225495, 6366, 1086, 29, 40, "Input"],
Cell[226584, 6397, 186, 4, 24, "Input"],
Cell[226773, 6403, 175, 2, 85, "Input"],
Cell[226951, 6407, 130, 2, 40, "Input"],
Cell[227084, 6411, 208, 7, 24, "Input"],
Cell[227295, 6420, 92, 2, 24, "Input"],
Cell[227390, 6424, 187, 4, 24, "Input"],
Cell[227580, 6430, 66, 1, 24, "Input"],
Cell[227649, 6433, 32, 0, 24, "Input"],
Cell[227684, 6435, 66, 1, 24, "Input"],
Cell[227753, 6438, 66, 1, 24, "Input"],
Cell[227822, 6441, 63, 1, 24, "Input"],
Cell[227888, 6444, 63, 1, 24, "Input"],
Cell[227954, 6447, 61, 1, 24, "Input"],
Cell[228018, 6450, 97, 2, 42, "Text"],
Cell[228118, 6454, 445, 8, 70, "Input"],
Cell[228566, 6464, 418, 13, 24, "Input"],
Cell[228987, 6479, 134, 2, 24, "Input"],
Cell[229124, 6483, 67, 1, 24, "Input"],
Cell[229194, 6486, 141, 2, 24, "Input",
 CellTags->"S5.84.1"],
Cell[229338, 6490, 325, 5, 57, "Text"],
Cell[229666, 6497, 929, 30, 55, "Input"],
Cell[230598, 6529, 418, 11, 55, "Input"],
Cell[231019, 6542, 420, 11, 55, "Input"],
Cell[231442, 6555, 612, 17, 55, "Input"],
Cell[232057, 6574, 280, 7, 63, "Input",
 CellTags->"S5.84.1"],
Cell[232340, 6583, 302, 9, 24, "Input"],
Cell[232645, 6594, 108, 3, 24, "Input"],
Cell[232756, 6599, 62, 1, 24, "Input"],
Cell[232821, 6602, 619, 20, 24, "Input"],
Cell[233443, 6624, 619, 20, 24, "Input"],
Cell[234065, 6646, 811, 24, 24, "Input"],
Cell[234879, 6672, 199, 4, 24, "Input"],
Cell[235081, 6678, 130, 3, 24, "Input"],
Cell[235214, 6683, 50, 1, 24, "Input"],
Cell[235267, 6686, 650, 21, 39, "Input"],
Cell[235920, 6709, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[236158, 6719, 207, 3, 60, "Title"],
Cell[236368, 6724, 286, 6, 57, "Text"],
Cell[CellGroupData[{
Cell[236679, 6734, 27, 0, 48, "Section"],
Cell[236709, 6736, 168, 3, 24, "Input"],
Cell[236880, 6741, 267, 8, 24, "Input"],
Cell[237150, 6751, 275, 8, 24, "Input"],
Cell[237428, 6761, 241, 6, 24, "Input"],
Cell[237672, 6769, 87, 2, 24, "Input"],
Cell[237762, 6773, 217, 6, 40, "Input"],
Cell[237982, 6781, 196, 4, 24, "Input"],
Cell[238181, 6787, 65, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[238283, 6793, 58, 0, 48, "Section"],
Cell[238344, 6795, 214, 5, 57, "Text"],
Cell[238561, 6802, 187, 6, 40, "Input"],
Cell[238751, 6810, 837, 14, 117, "Text"],
Cell[239591, 6826, 118, 3, 40, "Input"],
Cell[239712, 6831, 2581, 65, 221, "Input"],
Cell[242296, 6898, 546, 16, 71, "Input"],
Cell[242845, 6916, 213, 4, 42, "Text"],
Cell[243061, 6922, 631, 17, 70, "Input"],
Cell[243695, 6941, 85, 2, 24, "Input"],
Cell[243783, 6945, 177, 5, 24, "Input"],
Cell[243963, 6952, 177, 5, 24, "Input"],
Cell[244143, 6959, 238, 7, 24, "Input"],
Cell[244384, 6968, 608, 14, 132, "Text"],
Cell[244995, 6984, 1994, 59, 100, "Input"],
Cell[246992, 7045, 606, 16, 207, "Text"],
Cell[247601, 7063, 1121, 26, 100, "Input"],
Cell[248725, 7091, 1139, 30, 40, "Input"],
Cell[249867, 7123, 186, 4, 24, "Input"],
Cell[250056, 7129, 175, 2, 85, "Input"],
Cell[250234, 7133, 130, 2, 40, "Input"],
Cell[250367, 7137, 208, 7, 24, "Input"],
Cell[250578, 7146, 111, 3, 24, "Input"],
Cell[250692, 7151, 187, 4, 24, "Input"],
Cell[250882, 7157, 66, 1, 24, "Input"],
Cell[250951, 7160, 206, 5, 40, "Input"],
Cell[251160, 7167, 188, 6, 40, "Input"],
Cell[251351, 7175, 61, 1, 24, "Input"],
Cell[251415, 7178, 97, 2, 42, "Text"],
Cell[251515, 7182, 391, 13, 70, "Input"],
Cell[251909, 7197, 67, 1, 70, "Input"],
Cell[251979, 7200, 139, 2, 70, "Input",
 CellTags->"S5.84.1"],
Cell[252121, 7204, 368, 11, 59, "Input"],
Cell[252492, 7217, 325, 5, 57, "Text"],
Cell[252820, 7224, 63, 1, 24, "Input"],
Cell[252886, 7227, 1036, 34, 85, "Input"],
Cell[253925, 7263, 462, 14, 71, "Input"],
Cell[254390, 7279, 430, 13, 55, "Input"],
Cell[254823, 7294, 633, 21, 55, "Input"],
Cell[255459, 7317, 218, 6, 63, "Input",
 CellTags->"S5.84.1"],
Cell[255680, 7325, 302, 9, 24, "Input"],
Cell[255985, 7336, 108, 3, 24, "Input"],
Cell[256096, 7341, 62, 1, 24, "Input"],
Cell[256161, 7344, 619, 20, 24, "Input"],
Cell[256783, 7366, 670, 21, 24, "Input"],
Cell[257456, 7389, 746, 23, 24, "Input"],
Cell[258205, 7414, 86, 2, 24, "Input"],
Cell[258294, 7418, 130, 3, 24, "Input"],
Cell[258427, 7423, 50, 1, 24, "Input"],
Cell[258480, 7426, 650, 21, 39, "Input"],
Cell[259133, 7449, 155, 4, 40, "Input"],
Cell[259291, 7455, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[259529, 7465, 236, 3, 60, "Title"],
Cell[259768, 7470, 33, 0, 24, "Input"],
Cell[CellGroupData[{
Cell[259826, 7474, 27, 0, 48, "Section"],
Cell[259856, 7476, 164, 3, 24, "Input"],
Cell[260023, 7481, 316, 6, 55, "Input"],
Cell[260342, 7489, 599, 16, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[260978, 7510, 68, 0, 48, "Section"],
Cell[261049, 7512, 115, 3, 24, "Input"],
Cell[261167, 7517, 109, 3, 24, "Input"],
Cell[261279, 7522, 247, 6, 40, "Input"],
Cell[261529, 7530, 201, 6, 24, "Input"],
Cell[261733, 7538, 93, 2, 24, "Input"],
Cell[261829, 7542, 90, 2, 24, "Input"],
Cell[261922, 7546, 290, 7, 24, "Input"],
Cell[262215, 7555, 263, 5, 40, "Input"],
Cell[262481, 7562, 306, 9, 24, "Input"],
Cell[262790, 7573, 417, 13, 24, "Input"],
Cell[263210, 7588, 354, 6, 57, "Text"],
Cell[263567, 7596, 290, 7, 24, "Input"],
Cell[263860, 7605, 63, 1, 24, "Input"],
Cell[263926, 7608, 63, 1, 24, "Input"],
Cell[263992, 7611, 398, 7, 57, "Text"],
Cell[264393, 7620, 47, 1, 24, "Input"],
Cell[264443, 7623, 866, 25, 46, "Input"],
Cell[265312, 7650, 433, 10, 46, "Input"],
Cell[265748, 7662, 198, 6, 24, "Input"],
Cell[265949, 7670, 342, 9, 24, "Input"],
Cell[266294, 7681, 134, 3, 24, "Input"],
Cell[266431, 7686, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[266669, 7696, 224, 3, 60, "Title"],
Cell[CellGroupData[{
Cell[266918, 7703, 27, 0, 48, "Section"],
Cell[266948, 7705, 171, 3, 24, "Input"],
Cell[267122, 7710, 335, 7, 55, "Input"],
Cell[267460, 7719, 530, 15, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[268027, 7739, 68, 0, 48, "Section"],
Cell[268098, 7741, 223, 6, 40, "Input"],
Cell[268324, 7749, 56, 0, 42, "Text"],
Cell[268383, 7751, 29, 0, 24, "Input"],
Cell[268415, 7753, 66, 1, 24, "Input"],
Cell[268484, 7756, 10412, 314, 1025, "Input"],
Cell[278899, 8072, 385, 6, 57, "Text"],
Cell[279287, 8080, 123, 3, 24, "Input"],
Cell[279413, 8085, 497, 11, 40, "Input"],
Cell[279913, 8098, 199, 5, 24, "Input"],
Cell[280115, 8105, 288, 7, 24, "Input"],
Cell[280406, 8114, 365, 11, 55, "Input"],
Cell[280774, 8127, 164, 3, 24, "Input"],
Cell[280941, 8132, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[281179, 8142, 161, 2, 60, "Title"],
Cell[CellGroupData[{
Cell[281365, 8148, 27, 0, 48, "Section"],
Cell[281395, 8150, 165, 3, 24, "Input"],
Cell[281563, 8155, 340, 7, 55, "Input"],
Cell[281906, 8164, 427, 13, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[282370, 8182, 68, 0, 48, "Section"],
Cell[282441, 8184, 52, 0, 42, "Text"],
Cell[282496, 8186, 88, 2, 24, "Input"],
Cell[282587, 8190, 109, 3, 24, "Input"],
Cell[282699, 8195, 329, 9, 40, "Input"],
Cell[283031, 8206, 201, 6, 24, "Input"],
Cell[283235, 8214, 93, 2, 24, "Input"],
Cell[283331, 8218, 90, 2, 24, "Input"],
Cell[283424, 8222, 238, 7, 40, "Input"],
Cell[283665, 8231, 518, 16, 24, "Input"],
Cell[284186, 8249, 356, 6, 57, "Text"],
Cell[284545, 8257, 259, 6, 24, "Input"],
Cell[284807, 8265, 796, 22, 46, "Input"],
Cell[285606, 8289, 398, 7, 57, "Text"],
Cell[286007, 8298, 935, 26, 46, "Input"],
Cell[286945, 8326, 265, 5, 24, "Input"],
Cell[287213, 8333, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[287451, 8343, 251, 6, 60, "Title"],
Cell[287705, 8351, 133, 1, 42, "Text"],
Cell[287841, 8354, 142, 3, 42, "Text"],
Cell[CellGroupData[{
Cell[288008, 8361, 27, 0, 48, "Section"],
Cell[288038, 8363, 67, 1, 24, "Input"],
Cell[288108, 8366, 332, 6, 42, "Text"],
Cell[288443, 8374, 952, 29, 40, "Input"],
Cell[289398, 8405, 538, 16, 55, "Input"],
Cell[289939, 8423, 215, 6, 40, "Input"],
Cell[290157, 8431, 373, 10, 24, "Input"],
Cell[290533, 8443, 141, 4, 24, "Input"],
Cell[290677, 8449, 78, 2, 24, "Input"],
Cell[290758, 8453, 113, 2, 24, "Input"],
Cell[290874, 8457, 144, 4, 24, "Input"],
Cell[291021, 8463, 216, 5, 24, "Input"],
Cell[291240, 8470, 198, 4, 24, "Input"],
Cell[291441, 8476, 335, 7, 55, "Input"],
Cell[291779, 8485, 217, 5, 24, "Input"],
Cell[291999, 8492, 235, 7, 24, "Input"],
Cell[292237, 8501, 529, 15, 24, "Input"],
Cell[292769, 8518, 129, 2, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[292935, 8525, 38, 0, 28, "Section"],
Cell[292976, 8527, 207, 5, 24, "Input"],
Cell[293186, 8534, 167, 5, 24, "Input"],
Cell[293356, 8541, 139, 4, 24, "Input"],
Cell[293498, 8547, 167, 5, 24, "Input"],
Cell[293668, 8554, 118, 3, 24, "Input"],
Cell[293789, 8559, 166, 5, 24, "Input"],
Cell[293958, 8566, 306, 9, 24, "Input"],
Cell[294267, 8577, 170, 5, 24, "Input"],
Cell[294440, 8584, 88, 2, 24, "Input"],
Cell[294531, 8588, 130, 4, 24, "Input"],
Cell[294664, 8594, 636, 9, 72, "Text"],
Cell[295303, 8605, 311, 10, 40, "Input"],
Cell[295617, 8617, 306, 5, 57, "Text"],
Cell[295926, 8624, 421, 12, 24, "Input"],
Cell[296350, 8638, 384, 12, 35, "Input"],
Cell[296737, 8652, 214, 5, 24, "Input"],
Cell[296954, 8659, 80, 2, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[297071, 8666, 37, 0, 28, "Section"],
Cell[297111, 8668, 298, 10, 24, "Input"],
Cell[297412, 8680, 308, 10, 24, "Input"],
Cell[297723, 8692, 275, 8, 40, "Input"],
Cell[298001, 8702, 110, 3, 57, "Text"],
Cell[298114, 8707, 310, 9, 24, "Input"],
Cell[298427, 8718, 152, 3, 42, "Text"],
Cell[298582, 8723, 385, 11, 24, "Input"],
Cell[298970, 8736, 103, 3, 42, "Text"],
Cell[299076, 8741, 350, 9, 24, "Input"],
Cell[299429, 8752, 382, 12, 35, "Input"],
Cell[299814, 8766, 76, 2, 24, "Input"],
Cell[299893, 8770, 363, 12, 24, "Input"],
Cell[300259, 8784, 363, 12, 24, "Input"],
Cell[300625, 8798, 134, 2, 24, "Input"],
Cell[300762, 8802, 63, 1, 24, "Input"],
Cell[300828, 8805, 315, 8, 24, "Input"],
Cell[301146, 8815, 189, 4, 24, "Input"],
Cell[301338, 8821, 348, 6, 55, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[301735, 8833, 196, 6, 60, "Title"],
Cell[301934, 8841, 142, 3, 42, "Text"],
Cell[CellGroupData[{
Cell[302101, 8848, 27, 0, 48, "Section"],
Cell[302131, 8850, 100, 1, 24, "Input"],
Cell[302234, 8853, 68, 1, 24, "Input"],
Cell[302305, 8856, 952, 29, 40, "Input"],
Cell[303260, 8887, 607, 17, 55, "Input"],
Cell[303870, 8906, 215, 6, 40, "Input"],
Cell[304088, 8914, 373, 10, 24, "Input"],
Cell[304464, 8926, 141, 4, 24, "Input"],
Cell[304608, 8932, 78, 2, 24, "Input"],
Cell[304689, 8936, 113, 2, 24, "Input"],
Cell[304805, 8940, 144, 4, 24, "Input"],
Cell[304952, 8946, 209, 5, 24, "Input"],
Cell[305164, 8953, 306, 7, 24, "Input"],
Cell[305473, 8962, 198, 4, 24, "Input"],
Cell[305674, 8968, 465, 8, 70, "Input"],
Cell[306142, 8978, 146, 4, 70, "Input"],
Cell[306291, 8984, 235, 7, 70, "Input"],
Cell[306529, 8993, 581, 16, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[307147, 9014, 38, 0, 48, "Section"],
Cell[307188, 9016, 212, 5, 24, "Input"],
Cell[307403, 9023, 167, 5, 24, "Input"],
Cell[307573, 9030, 163, 4, 24, "Input"],
Cell[307739, 9036, 167, 5, 24, "Input"],
Cell[307909, 9043, 143, 3, 24, "Input"],
Cell[308055, 9048, 166, 5, 24, "Input"],
Cell[308224, 9055, 309, 9, 24, "Input"],
Cell[308536, 9066, 170, 5, 24, "Input"],
Cell[308709, 9073, 88, 2, 24, "Input"],
Cell[308800, 9077, 248, 5, 40, "Input"],
Cell[309051, 9084, 152, 4, 24, "Input"],
Cell[309206, 9090, 636, 9, 72, "Text"],
Cell[309845, 9101, 311, 10, 40, "Input"],
Cell[310159, 9113, 306, 5, 57, "Text"],
Cell[310468, 9120, 423, 12, 24, "Input"],
Cell[310894, 9134, 324, 10, 43, "Input"],
Cell[311221, 9146, 247, 7, 24, "Input"],
Cell[311471, 9155, 80, 2, 24, "Input"],
Cell[311554, 9159, 318, 6, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[311909, 9170, 37, 0, 48, "Section"],
Cell[311949, 9172, 298, 10, 24, "Input"],
Cell[312250, 9184, 308, 10, 24, "Input"],
Cell[312561, 9196, 275, 8, 40, "Input"],
Cell[312839, 9206, 110, 3, 57, "Text"],
Cell[312952, 9211, 310, 9, 24, "Input"],
Cell[313265, 9222, 152, 3, 42, "Text"],
Cell[313420, 9227, 287, 9, 24, "Input"],
Cell[313710, 9238, 103, 3, 42, "Text"],
Cell[313816, 9243, 347, 9, 24, "Input"],
Cell[314166, 9254, 2155, 65, 172, "Input"],
Cell[316324, 9321, 64, 1, 24, "Input"],
Cell[316391, 9324, 63, 1, 24, "Input"],
Cell[316457, 9327, 63, 1, 24, "Input"],
Cell[316523, 9330, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[316761, 9340, 161, 2, 60, "Title"],
Cell[316925, 9344, 142, 3, 42, "Text"],
Cell[CellGroupData[{
Cell[317092, 9351, 27, 0, 48, "Section"],
Cell[317122, 9353, 161, 3, 24, "Input"],
Cell[317286, 9358, 952, 29, 40, "Input"],
Cell[318241, 9389, 538, 16, 55, "Input"],
Cell[318782, 9407, 215, 6, 40, "Input"],
Cell[319000, 9415, 239, 8, 24, "Input"],
Cell[319242, 9425, 529, 15, 24, "Input"],
Cell[319774, 9442, 141, 4, 24, "Input"],
Cell[319918, 9448, 113, 2, 24, "Input"],
Cell[320034, 9452, 144, 4, 24, "Input"],
Cell[320181, 9458, 166, 5, 24, "Input"],
Cell[320350, 9465, 338, 7, 55, "Input"],
Cell[320691, 9474, 427, 13, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[321155, 9492, 38, 0, 48, "Section"],
Cell[321196, 9494, 207, 5, 24, "Input"],
Cell[321406, 9501, 167, 5, 24, "Input"],
Cell[321576, 9508, 139, 4, 24, "Input"],
Cell[321718, 9514, 167, 5, 24, "Input"],
Cell[321888, 9521, 118, 3, 24, "Input"],
Cell[322009, 9526, 166, 5, 24, "Input"],
Cell[322178, 9533, 307, 9, 24, "Input"],
Cell[322488, 9544, 208, 6, 24, "Input"],
Cell[322699, 9552, 88, 2, 24, "Input"],
Cell[322790, 9556, 130, 4, 24, "Input"],
Cell[322923, 9562, 636, 9, 72, "Text"],
Cell[323562, 9573, 311, 10, 40, "Input"],
Cell[323876, 9585, 306, 5, 57, "Text"],
Cell[324185, 9592, 422, 12, 24, "Input"],
Cell[324610, 9606, 300, 9, 43, "Input"],
Cell[324913, 9617, 132, 3, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[325082, 9625, 37, 0, 48, "Section"],
Cell[325122, 9627, 298, 10, 24, "Input"],
Cell[325423, 9639, 308, 10, 24, "Input"],
Cell[325734, 9651, 275, 8, 40, "Input"],
Cell[326012, 9661, 323, 11, 24, "Input"],
Cell[326338, 9674, 110, 3, 57, "Text"],
Cell[326451, 9679, 310, 9, 24, "Input"],
Cell[326764, 9690, 103, 3, 42, "Text"],
Cell[326870, 9695, 348, 9, 24, "Input"],
Cell[327221, 9706, 204, 4, 42, "Text"],
Cell[327428, 9712, 2268, 65, 182, "Input"],
Cell[329699, 9779, 200, 6, 24, "Input"],
Cell[329902, 9787, 141, 4, 24, "Input"],
Cell[330046, 9793, 161, 4, 24, "Input"],
Cell[330210, 9799, 92, 2, 24, "Input"],
Cell[330305, 9803, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[330543, 9813, 208, 3, 97, "Title"],
Cell[CellGroupData[{
Cell[330776, 9820, 27, 0, 48, "Section"],
Cell[330806, 9822, 183, 3, 24, "Input"],
Cell[330992, 9827, 59, 1, 24, "Input"],
Cell[331054, 9830, 504, 15, 24, "Input"],
Cell[331561, 9847, 155, 5, 24, "Input"],
Cell[331719, 9854, 336, 7, 55, "Input"],
Cell[332058, 9863, 158, 3, 24, "Input"],
Cell[332219, 9868, 427, 13, 24, "Input"],
Cell[332649, 9883, 172, 5, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[332858, 9893, 29, 0, 48, "Section"],
Cell[332890, 9895, 52, 0, 42, "Text"],
Cell[332945, 9897, 316, 9, 24, "Input"],
Cell[333264, 9908, 252, 7, 24, "Input"],
Cell[333519, 9917, 102, 2, 24, "Input"],
Cell[333624, 9921, 746, 21, 44, "Input"],
Cell[334373, 9944, 151, 5, 24, "Input"],
Cell[334527, 9951, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[334765, 9961, 299, 4, 60, "Title"],
Cell[335067, 9967, 131, 1, 42, "Text"],
Cell[CellGroupData[{
Cell[335223, 9972, 27, 0, 48, "Section"],
Cell[335253, 9974, 146, 2, 24, "Input"],
Cell[335402, 9978, 32, 0, 24, "Input"],
Cell[335437, 9980, 155, 5, 24, "Input"],
Cell[335595, 9987, 32, 0, 24, "Input"],
Cell[335630, 9989, 32, 0, 24, "Input"],
Cell[335665, 9991, 29, 0, 24, "Input"],
Cell[335697, 9993, 317, 6, 55, "Input"],
Cell[336017, 10001, 109, 3, 24, "Input"],
Cell[336129, 10006, 158, 4, 24, "Input"],
Cell[336290, 10012, 134, 3, 24, "Input"],
Cell[336427, 10017, 192, 4, 24, "Input"],
Cell[336622, 10023, 26, 0, 24, "Input"],
Cell[336651, 10025, 388, 12, 55, "Input"],
Cell[337042, 10039, 150, 5, 24, "Input"],
Cell[337195, 10046, 427, 13, 24, "Input"],
Cell[337625, 10061, 172, 5, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[337834, 10071, 29, 0, 48, "Section"],
Cell[337866, 10073, 52, 0, 42, "Text"],
Cell[337921, 10075, 67, 0, 40, "Input"],
Cell[337991, 10077, 316, 9, 24, "Input"],
Cell[338310, 10088, 435, 13, 24, "Input"],
Cell[338748, 10103, 102, 2, 24, "Input"],
Cell[338853, 10107, 482, 15, 24, "Input"],
Cell[339338, 10124, 102, 2, 24, "Input"],
Cell[339443, 10128, 106, 3, 24, "Input"],
Cell[339552, 10133, 59, 1, 24, "Input"],
Cell[CellGroupData[{
Cell[339636, 10138, 37, 0, 42, "Subsection"],
Cell[339676, 10140, 94, 1, 40, "Input"],
Cell[339773, 10143, 698, 23, 24, "Input"],
Cell[340474, 10168, 962, 32, 40, "Input"],
Cell[341439, 10202, 1097, 38, 40, "Input"],
Cell[342539, 10242, 1190, 35, 85, "Input"],
Cell[343732, 10279, 1596, 52, 55, "Input"],
Cell[345331, 10333, 754, 26, 55, "Input"],
Cell[346088, 10361, 2357, 74, 130, "Input"],
Cell[348448, 10437, 1783, 55, 85, "Input"],
Cell[350234, 10494, 213, 6, 40, "Input"],
Cell[350450, 10502, 1814, 56, 130, "Input"],
Cell[352267, 10560, 1638, 53, 55, "Input"],
Cell[353908, 10615, 95, 1, 40, "Input"],
Cell[354006, 10618, 90, 2, 24, "Input"],
Cell[354099, 10622, 237, 6, 24, "Input"],
Cell[354339, 10630, 286, 5, 55, "Input"],
Cell[354628, 10637, 263, 4, 55, "Input"],
Cell[354894, 10643, 273, 7, 40, "Input"],
Cell[355170, 10652, 266, 6, 40, "Input"],
Cell[355439, 10660, 113, 3, 24, "Input"],
Cell[355555, 10665, 828, 25, 55, "Input"],
Cell[356386, 10692, 230, 4, 40, "Input"],
Cell[356619, 10698, 373, 9, 40, "Input"],
Cell[356995, 10709, 956, 29, 40, "Input"],
Cell[357954, 10740, 371, 9, 40, "Input"],
Cell[358328, 10751, 912, 28, 24, "Input"],
Cell[359243, 10781, 162, 5, 24, "Input"],
Cell[359408, 10788, 689, 21, 40, "Input"],
Cell[360100, 10811, 718, 22, 40, "Input"],
Cell[360821, 10835, 92, 2, 24, "Input"],
Cell[360916, 10839, 184, 4, 24, "Input"],
Cell[361103, 10845, 74, 2, 24, "Input"],
Cell[361180, 10849, 123, 2, 40, "Input"],
Cell[361306, 10853, 113, 3, 24, "Input"],
Cell[361422, 10858, 2901, 89, 219, "Input"],
Cell[364326, 10949, 66, 1, 24, "Input"],
Cell[364395, 10952, 80, 2, 24, "Input"],
Cell[364478, 10956, 1177, 41, 130, "Input"],
Cell[365658, 10999, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[365908, 11010, 114, 1, 60, "Title"],
Cell[CellGroupData[{
Cell[366047, 11015, 27, 0, 48, "Section"],
Cell[366077, 11017, 67, 1, 24, "Input"],
Cell[366147, 11020, 384, 8, 55, "Input"],
Cell[366534, 11030, 530, 15, 24, "Input"],
Cell[367067, 11047, 29, 0, 24, "Input"],
Cell[367099, 11049, 427, 13, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[367563, 11067, 68, 0, 48, "Section"],
Cell[367634, 11069, 52, 0, 42, "Text"],
Cell[367689, 11071, 88, 2, 24, "Input"],
Cell[367780, 11075, 109, 3, 24, "Input"],
Cell[367892, 11080, 329, 9, 40, "Input"],
Cell[368224, 11091, 201, 6, 24, "Input"],
Cell[368428, 11099, 93, 2, 24, "Input"],
Cell[368524, 11103, 90, 2, 24, "Input"],
Cell[368617, 11107, 238, 7, 40, "Input"],
Cell[368858, 11116, 356, 6, 57, "Text"],
Cell[369217, 11124, 259, 6, 24, "Input"],
Cell[369479, 11132, 398, 7, 57, "Text"],
Cell[369880, 11141, 318, 7, 40, "Input"],
Cell[370201, 11150, 317, 7, 40, "Input"],
Cell[370521, 11159, 846, 24, 46, "Input"],
Cell[371370, 11185, 102, 2, 24, "Input"],
Cell[371475, 11189, 792, 22, 46, "Input"],
Cell[372270, 11213, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[372508, 11223, 139, 2, 60, "Title"],
Cell[372650, 11227, 127, 1, 42, "Text"],
Cell[CellGroupData[{
Cell[372802, 11232, 27, 0, 48, "Section"],
Cell[372832, 11234, 68, 1, 24, "Input"],
Cell[372903, 11237, 469, 8, 55, "Input"],
Cell[373375, 11247, 532, 15, 24, "Input"],
Cell[373910, 11264, 427, 13, 24, "Input"],
Cell[374340, 11279, 63, 1, 24, "Input"],
Cell[374406, 11282, 59, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[374502, 11288, 38, 0, 48, "Section"],
Cell[374543, 11290, 636, 9, 72, "Text"],
Cell[375182, 11301, 311, 10, 40, "Input"],
Cell[375496, 11313, 306, 5, 57, "Text"],
Cell[375805, 11320, 381, 12, 24, "Input"],
Cell[376189, 11334, 322, 9, 43, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[376548, 11348, 37, 0, 48, "Section"],
Cell[376588, 11350, 298, 10, 24, "Input"],
Cell[376889, 11362, 308, 10, 24, "Input"],
Cell[377200, 11374, 275, 8, 40, "Input"],
Cell[377478, 11384, 110, 3, 57, "Text"],
Cell[377591, 11389, 310, 9, 24, "Input"],
Cell[377904, 11400, 152, 3, 42, "Text"],
Cell[378059, 11405, 287, 9, 24, "Input"],
Cell[378349, 11416, 103, 3, 42, "Text"],
Cell[378455, 11421, 348, 9, 24, "Input"],
Cell[378806, 11432, 89, 2, 24, "Input"],
Cell[378898, 11436, 189, 4, 24, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[379136, 11446, 27, 0, 60, "Title"],
Cell[379166, 11448, 49, 0, 42, "Text"]
}, Closed]]
}
]
*)

(* End of internal cache information *)
