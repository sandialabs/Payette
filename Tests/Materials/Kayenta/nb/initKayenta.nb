(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    214986,       5941]
NotebookOptionsPosition[    203220,       5589]
NotebookOutlinePosition[    205335,       5644]
CellTagsIndexPosition[    205292,       5641]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions used in MED postprocessing", "Title",
 InitializationCell->True],

Cell["\<\
Search this file for \"ElasticInfo\"
That function needs to be repaired for compatibility with version 6
I have placed a file called init.txt in the demo directory. That file shows \
how the function was originally written in version 5.\
\>", "Text",
 CellChangeTimes->{{3.405473623543212*^9, 3.405473715059599*^9}}],

Cell["\<\


        This section defines helper functions and plotting utilities that are \
used throughout MED postprocessing.


                               There is no need for you to read this section, \
but you do need to execute it at the beginning of each mathematica session.
                               
                               
         RECOMMENDATION:
         Collapse this section out of view by double-clicking the outer blue \
bar.
         To execute this section in its collapsed form, just single-click the \
outer blue bar and type SHIFT-return (or keypad ENTER)
         
         
         
         \
\>", "Text",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Starting stuff", "Section",
 InitializationCell->True],

Cell[TextData[{
 "The following resets ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " so that all previously defined variables are cleared."
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{"demodir", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"demodir", "=", "\"\<$DEMODIR\>\""}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405714470509513*^9, 3.40571450777442*^9}, {
   3.425925857661969*^9, 3.425925862484385*^9}, {3.5002322086545687`*^9, 
   3.500232243359972*^9}, {3.5002323482077913`*^9, 3.5002323558795652`*^9}, {
   3.50064636981212*^9, 3.500646371518633*^9}, {3.501184678396253*^9, 
   3.5011846873642406`*^9}, {3.501184934692163*^9, 3.501184941227192*^9}, {
   3.508874047982063*^9, 3.508874064498864*^9}, 3.508878043730671*^9, {
   3.538137014185123*^9, 3.538137017743617*^9}, {3.5381370670888166`*^9, 
   3.538137069664112*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialized", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "[", 
    RowBox[{
    "varNameString_", ",", "varDescriptionString_", ",", "varValue_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{"initialized", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"initialized", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"varNameString", "<>", "\"\<=\>\""}], ",", 
            RowBox[{"varDescriptionString", "<>", "\"\<=\>\""}], ",", 
            "varValue"}], "}"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"{", 
        RowBox[{"initialized", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "}"}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"initlist", ":=", 
  RowBox[{
   RowBox[{"Sort", "[", "initialized", "]"}], "//", 
   "MatrixForm"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{"PHONY", "=", 
  RowBox[{"-", "0.123456789*^9"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<PHONY\>\"", ",", "\"\<a fake initialization parameter\>\"", ",", 
    "PHONY"}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
If, for some reason, this automatic determination of the run directory is not \
working (or if you want to manually override this default), just insert a \
mathematica command that looks like

     rundir = \"/home/usernam/my_directory_path/demo/\"
     
Don't forget the trailing slash.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.538138114212659*^9, 3.5381381161021757`*^9}}],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.508874504888795*^9, 3.508874510070095*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rundir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"rundir", "=", "\"\<$RUNDIR\>\""}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<rundir\>\"", ",", "\"\<directory in which demo program was run\>\"", 
    ",", "rundir"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.4259259279619083`*^9, {3.425936160611156*^9, 3.425936161284445*^9}, {
   3.500232269321425*^9, 3.500232281064516*^9}, 3.500232324640505*^9, {
   3.5006463792219267`*^9, 3.500646380871447*^9}, 3.501184703595683*^9, {
   3.5011849239308033`*^9, 3.501184929477002*^9}, 3.508874162893423*^9, {
   3.508874250600349*^9, 3.508874252724967*^9}, {3.50887474616507*^9, 
   3.508874748864994*^9}, {3.538137043377763*^9, 3.538137053688383*^9}}],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "rundir", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4259364530095367`*^9, 3.4259364585007353`*^9}, {
  3.508874442361209*^9, 3.508874457901693*^9}}],

Cell[BoxData[""], "Input"],

Cell["\<\
At any time, the user can specify MakeGraphs=True.
When this is done, some of the functions will now also export pictures to the \
output directory for the simulation.\
\>", "Text",
 CellChangeTimes->{{3.405706280726447*^9, 3.4057063371024733`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MakeGraphs", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<MakeGraphs\>\"", ",", 
    "\"\<logical indicating if sim graphics should be exported\>\"", ",", 
    "MakeGraphs"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405706251550501*^9, 3.405706259100325*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grafhis", "[", 
   RowBox[{"x_", ",", "string_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"MakeGraphs", ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"demodir", "<>", "string", "<>", "\"\<.gif\>\""}], ",", 
      RowBox[{"showhis", "[", 
       RowBox[{"x", ",", "string"}], "]"}]}], "]"}], ",", 
    RowBox[{"showhis", "[", 
     RowBox[{"x", ",", "string"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<grafhis\>\"", ",", "\"\<function for exporting history plots\>\"", 
    ",", "\"\<grafhis[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"xport", "[", 
   RowBox[{"name_", ",", "grafik_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"MakeGraphs", ",", 
    RowBox[{"Export", "[", 
     RowBox[{"name", ",", "grafik"}], "]"}], ",", 
    "\"\<MakeGraphs is False\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405726201753566*^9, 3.405726269337212*^9}, {
  3.405726304456341*^9, 3.4057263175207767`*^9}, {3.4057264037791653`*^9, 
  3.405726409776284*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define physical units relative to SI", "Section",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MPa", "=", 
   RowBox[{"10", "^", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "[", 
  RowBox[{
  "\"\<MPa\>\"", ",", "\"\<megapascals per SI unit of pressure (pascal)\>\"", 
   ",", "MPa"}], "]"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialize useful CONSTANTS", "Section",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"red", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ";", 
  RowBox[{"green", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], ";", 
  RowBox[{"blue", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ";", 
  RowBox[{"RGBplotstyle", ":=", 
   RowBox[{"{", 
    RowBox[{"red", ",", "green", ",", "blue"}], "}"}]}], ";", 
  RowBox[{"fatLine", "=", 
   RowBox[{"Thickness", "[", "0.02", "]"}]}], ";", 
  RowBox[{"fatterLine", "=", 
   RowBox[{"Thickness", "[", "0.03", "]"}]}], ";", 
  RowBox[{"medLine", "=", 
   RowBox[{"Thickness", "[", "0.01", "]"}]}], ";", 
  RowBox[{"thinLine", "=", 
   RowBox[{"Thickness", "[", "0.005", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<red\>\"", ",", "\"\<personally defined color\>\"", ",", "red"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<green\>\"", ",", "\"\<personally defined color\>\"", ",", "green"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<blue\>\"", ",", "\"\<personally defined color\>\"", ",", "blue"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<RGBplotstyle\>\"", ",", "\"\<style useful for overlaid plots\>\"", 
    ",", "\"\<{red,green,blue}\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<fatLine\>\"", ",", "\"\<a bold line thickness\>\"", ",", "fatLine"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<fatterLine\>\"", ",", "\"\<a REALLY bold line thickness\>\"", ",", 
    "fatterLine"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<medLine\>\"", ",", "\"\<a moderate line thickness\>\"", ",", 
    "medLine"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "[", 
    RowBox[{
    "\"\<thinLine\>\"", ",", "\"\<a thin line thickness\>\"", ",", 
     "thinLine"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chainDash", "=", 
   RowBox[{"Dashing", "[", 
    RowBox[{"{", 
     RowBox[{"0.005", ",", "0.02", ",", "0.02", ",", "0.02"}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myColor", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{".2", ",", "0", ",", ".6"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myThickness", "=", 
   RowBox[{"Thickness", "[", "0.01", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myStyle", ":=", 
   RowBox[{"{", 
    RowBox[{"myColor", ",", "myThickness"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<chainDash\>\"", ",", "\"\<a format style for chaindashed lines\>\"", 
    ",", "chainDash"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<myColor\>\"", ",", "\"\<my favorite color for some plots\>\"", ",", 
    "myColor"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<myThickness\>\"", ",", "\"\<my favorite thickness for some plots\>\"",
     ",", "myThickness"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<myStyle\>\"", ",", "\"\<combined favorite style for plots\>\"", ",", 
    "\"\<{myColor,myThickness}\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.469549634819092*^9, 3.469549645260475*^9}, {
  3.469549702324238*^9, 3.469549706065481*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialize useful general-purpose functions", "Section",
 InitializationCell->True],

Cell["\<\
The following converts a logical (True/False) to an integer (1/0).\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"if", "[", "logical_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"logical", ",", "1", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"init", "[", 
  RowBox[{
  "\"\<if[logical]\>\"", ",", 
   "\"\<function that returns 1 if 'logical' is True, or 0 otherwise\>\"", 
   ",", "\"\<if[...]\>\""}], "]"}]}], "Input",
 InitializationCell->True],

Cell["\<\
The above \"if\" function is useful to define branched functions.  
It is much more intuitive than using the UnitStep function.

For example . . . \
\>", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Plot", "[", "   ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], 
     RowBox[{"if", "[", 
      RowBox[{"x", "\[LessEqual]", "0"}], "]"}]}], "  ", "+", "  ", 
    RowBox[{
     RowBox[{"E", "^", "x"}], " ", 
     RowBox[{"if", "[", 
      RowBox[{"x", ">", "0"}], "]"}]}]}], "   ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "7"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Note: the most recent release of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "  includes better support for Piecewise functions. This \"if\" function is \
defined here for backward compatibility with some of my old notebooks"
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], ",", 
        RowBox[{"x", "\[LessEqual]", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"E", "^", "x"}], ",", 
        RowBox[{"x", ">", "0"}]}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "7"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.405706458845078*^9, 3.4057064991058197`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Initialize useful special-purpose functions (i.e., functions especially \
designed for this demo notebook to facilitate post-processing demo output)\
\>", "Section",
 InitializationCell->True],

Cell["\<\
The setRun function allows the user to define the runID that they wish to \
post-process.
When setRun is executed, it will define demodir to be the directory where \
output files are located.
It will define the locations of the math1 and math2 files and then execute \
them to import calculation results.\
\>", "Text",
 InitializationCell->True],

Cell["\<\
The math1 file is automatically generated by the demo program. It contains \
mathematica commands that allow the material constants and  field variables \
to be available here in this mathematica notebook. Once the following command \
is executed, all of the user inputs are available as variables that end in U. \
For example, the GeoModel user-specified value for parameter P3 is P3U.  \
Sometimes, as when setting defaults for unspecified user parameters, the \
value of a parameter ultimately used in GeoModel calculations might be \
different from what was specified by the user. If, for example, the user gave \
CR=4.0 and CRPF=0.0, then the GeoModel automatically sets CRPF to equal CR. \
Therefore, in this example, CRPFU would equal zero while CRPFM would be the \
modified value of 4.0.\
\>", "Text",
 InitializationCell->True],

Cell[TextData[{
 "The following command reads the math1 file, which imports values of the \
user inputs into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". You can expect a lot of spelling warnings the first time that you execute \
this command because many variables will have similar spellings. "
}], "Text",
 InitializationCell->True],

Cell[TextData[{
 "The math1 file also defines the field variables that will be AVAILABLE for \
plotting (based on the plot input set in the demo.inp file).  If you open up \
the math1 file (not recommended except for the incurably curious), you will \
see lines that look like ... time=ReadList[demodir<>\"time\",Number]. These \
commands are loading the computed values for time from the output of the demo \
program into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " arrays that you can plot and manipulate."
}], "Text",
 InitializationCell->True],

Cell["\<\
The math2 file contains commands that perform the automatic plotting of \
variables listed in the plot section of demo.inp.\
\>", "Text",
 InitializationCell->True],

Cell["\<\
The setRun command will automatically output a set of summary graphs, based \
on what variables were preceeded with a hyphen in the \"basic geo plot \
options\" section of the demo.inp file. Variables that were not hyphened are \
available too, but are not shown automatically at execution of setRun (you \
have to ask for them explicitly).

\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{"NEWXSV", "=", "False"}], "\[IndentingNewLine]", 
 RowBox[{"BRANNONTABLES", "=", "False"}]}], "Input",
 CellChangeTimes->{{3.419872336742413*^9, 3.419872348264352*^9}, {
  3.421677101109618*^9, 3.4216771051384573`*^9}, {3.421678312184843*^9, 
  3.42167831767507*^9}, {3.4272210205342417`*^9, 3.427221021016259*^9}, {
  3.538137639409852*^9, 3.53813763996959*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numCol", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<numCol\>\"", ",", 
    "\"\<number of columns in quick plot graphics arrays\>\"", ",", 
    "numCol"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405711602524357*^9, 3.40571172908255*^9}, {
  3.4057123504642878`*^9, 3.405712435573629*^9}, {3.411499175638603*^9, 
  3.411499177006444*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setRun", "[", "runID_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runid", "=", "runID"}], ";", "\[IndentingNewLine]", 
    RowBox[{"demodir", "=", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"{", 
       RowBox[{"rundir", ",", "runid"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"math1", "=", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"demodir", ",", 
       RowBox[{"runid", "<>", "\"\<.math1\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"math2", "=", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"demodir", ",", 
       RowBox[{"runid", "<>", "\"\<.math2\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"runlog", "=", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"demodir", ",", 
       RowBox[{"runid", "<>", "\"\<.log\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"runprops", "=", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"demodir", ",", 
       RowBox[{"runid", "<>", "\"\<.props\>\""}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ReadList", "[", "math1", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"NEWXSV", ",", 
      RowBox[{"solveKapFromX", "[", "X", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"NEWXSV", ",", 
      RowBox[{"solveQSELFromX", "[", "X", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"plotz", "=", 
     RowBox[{"ReadList", "[", "math2", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"plotvarz", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{
       RowBox[{"\"\<!grep -h plotable \>\"", "<>", "runlog"}], ",", 
       "String"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"propz", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{
       RowBox[{"\"\<!cat \>\"", "<>", "runprops"}], ",", "String"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"computedVARS", "[", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"since", " ", "payette", " ", 
       RowBox[{"doesn", "'"}], "t", " ", "track", " ", "USM", " ", "like", 
       " ", "the", " ", "demo", " ", "driver"}], ",", " ", 
      RowBox[{
      "set", " ", "it", " ", "to", " ", "the", " ", "constant", " ", 
       "initial", " ", "value"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"USM", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"B0", "+", 
        RowBox[{
         RowBox[{"4", "/", "3"}], "*", "G0"}]}], ",", "lastep"}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"TableForm", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Definition", "[", "demodir", "]"}], ",", 
        RowBox[{"Definition", "[", "math1", "]"}], ",", 
        RowBox[{"Definition", "[", "math2", "]"}]}], "}"}], "]"}], "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{"Partition", "[", 
      RowBox[{"plotz", ",", "numCol", ",", "numCol", ",", "1", ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<setRun\>\"", ",", 
    "\"\<command that reads in results from a particular MED problem\>\"", 
    ",", "\"\<setRun[runID]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3992054558321133`*^9, 3.399205505540575*^9}, {
   3.399205625470237*^9, 3.399205649062454*^9}, {3.3992056809723186`*^9, 
   3.399205688952509*^9}, {3.405706613530189*^9, 3.405706648242696*^9}, {
   3.405707926391127*^9, 3.4057079289653263`*^9}, {3.40571157167374*^9, 
   3.405711577617876*^9}, {3.405711754235034*^9, 3.405711757176724*^9}, {
   3.405712250501349*^9, 3.405712274469364*^9}, {3.405712420702648*^9, 
   3.405712423212216*^9}, {3.405715767059886*^9, 3.405715783363439*^9}, {
   3.405715928956691*^9, 3.4057159859394817`*^9}, {3.405716952941164*^9, 
   3.405716953275079*^9}, {3.4057171907601624`*^9, 3.405717219676362*^9}, {
   3.405721268637484*^9, 3.4057212692937603`*^9}, {3.406070907194619*^9, 
   3.4060709235279827`*^9}, {3.410278612815094*^9, 3.4102786770096397`*^9}, {
   3.4102800179250593`*^9, 3.410280018546989*^9}, {3.410299790049426*^9, 
   3.410299790977881*^9}, {3.410300692426263*^9, 3.410300697162746*^9}, {
   3.415733654561285*^9, 3.4157336563349457`*^9}, {3.415734180079872*^9, 
   3.415734196526606*^9}, {3.418563614353929*^9, 3.41856363164974*^9}, 
   3.41856863857238*^9, {3.418568789081789*^9, 3.418568792474492*^9}, {
   3.418568977493067*^9, 3.418569023546464*^9}, {3.419857923257666*^9, 
   3.4198580552131977`*^9}, {3.419859455580134*^9, 3.41985945636316*^9}, {
   3.41987054458584*^9, 3.419870552483562*^9}, {3.4215381251011677`*^9, 
   3.4215381292730703`*^9}, {3.421538170440898*^9, 3.421538259744979*^9}, {
   3.421677011456648*^9, 3.421677025160239*^9}, {3.421759400357452*^9, 
   3.421759401614984*^9}, {3.421759443357794*^9, 3.421759537018654*^9}, {
   3.4217618297735233`*^9, 3.421761900107781*^9}, {3.4259356399233027`*^9, 
   3.425935655330558*^9}, 3.425935934978169*^9, {3.42593597367323*^9, 
   3.425935989490548*^9}, {3.4259360456780033`*^9, 3.4259360559421253`*^9}, {
   3.427221001791819*^9, 3.427221002669306*^9}, {3.508875311674339*^9, 
   3.508875312787515*^9}, {3.5381377636912193`*^9, 3.538137779550178*^9}, {
   3.538137860489581*^9, 3.538137903633523*^9}, {3.538137959864285*^9, 
   3.538137960904149*^9}, {3.5381381776967173`*^9, 3.538138181442502*^9}, {
   3.5381436317241173`*^9, 3.53814371950961*^9}, {3.538149260158092*^9, 
   3.538149345079452*^9}, {3.538149391267021*^9, 3.538149394903912*^9}, {
   3.538149469941737*^9, 3.5381494725224237`*^9}, {3.538149612596863*^9, 
   3.538149651923562*^9}, {3.538150013697239*^9, 3.5381500141519537`*^9}, {
   3.538150082329783*^9, 3.538150087088872*^9}, {3.5381740338216677`*^9, 
   3.5381741375872297`*^9}, {3.5381742091897287`*^9, 3.5381742201337423`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotable", ":=", 
   RowBox[{"(", 
    RowBox[{"plotvarz", "//", "TableForm"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plottable", ":=", "plotable"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "[", 
    RowBox[{
    "\"\<plotable\>\"", ",", 
     "\"\<type this to see keywords of plottable variables\>\"", ",", 
     "numCol"}], "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"props", ":=", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Sort", "[", "propz", "]"}], ",", "4", ",", "4", ",", "1", 
       ",", "\"\< \>\""}], "]"}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<props\>\"", ",", 
    "\"\<type props to see explicitly specified material properties\>\"", ",",
     "numCol"}], "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405714183668621*^9, 3.4057142292412663`*^9}, {
   3.4057142882740917`*^9, 3.4057143111794*^9}, {3.405714405155164*^9, 
   3.405714406003517*^9}, {3.405715179964674*^9, 3.405715354151766*^9}, {
   3.405716020374095*^9, 3.4057160226183643`*^9}, {3.405716068346383*^9, 
   3.405716082656054*^9}, {3.405716127328014*^9, 3.405716128362618*^9}, {
   3.405717075880952*^9, 3.405717087501637*^9}, {3.405717446061204*^9, 
   3.4057174535401487`*^9}, {3.405721284495727*^9, 3.405721287299852*^9}, {
   3.405721564164197*^9, 3.40572165788102*^9}, {3.4057217477787848`*^9, 
   3.405721759882708*^9}, 3.415733645694186*^9, {3.415733809274732*^9, 
   3.415733810692432*^9}, {3.41573403190479*^9, 3.4157340414898643`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions for manipulating and plotting arrays", "Section",
 CellChangeTimes->{{3.423948954087516*^9, 3.42394896246098*^9}}],

Cell["This will make a table of data pairs", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maketab", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<maketab\>\"", ",", "\"\<creates a table of {x,y} pairs\>\"", ",", 
    "\"\<maketab[x,y]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
This will convert a table of data pairs into an interpolating function. \
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"interp", "[", "tab_", "]"}], ":=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"tab", ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"interp", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"maketab", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<interp\>\"", ",", 
    "\"\<creates an interpolation function from discrete data\>\"", ",", 
    "\"\<interp[xydataTable] or interp[xlist,ylist]\>\""}], "]"}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell["This function will make a plot of x vs. cycle number.", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showcy", "[", "x_", "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<showcy\>\"", ",", 
    "\"\<command to plot a variable vs. dump cycle number\>\"", ",", 
    "\"\<showcy[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.423948898756648*^9, 3.423948899862768*^9}, {
  3.423949954230733*^9, 3.423949956005262*^9}}],

Cell["\<\
This function does the same, but also puts labels and gridlines.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{"x_", ",", "labl_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", "labl"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.42394888553703*^9, 3.423948886863508*^9}, {
  3.423949965719267*^9, 3.423949967982139*^9}}],

Cell["This function does the same but over a specified cycle range", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"showcy", "[", 
   RowBox[{"x_", ",", "imin_", ",", "imax_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
This function shows the variable as a function of time. It is the same as \
showme[time,y]\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showhis", "[", "y_", "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"TIME", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<showhis\>\"", ",", "\"\<command to plot a variable vs. time\>\"", 
    ",", "\"\<showhis[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5406337825938463`*^9}],

Cell["This is the same as showhis except it includes a label", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"showhis", "[", 
   RowBox[{"y_", ",", "labl_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"TIME", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<time\>\"", ",", "labl"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.540633786512321*^9}],

Cell["\<\
This will make a plot of y vs. x for both variables given parametrically as \
data arrays of equal length.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<showme\>\"", ",", "\"\<plot one variable vs. another variable\>\"", 
    ",", "\"\<showme[x,y]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"makeme", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"maketab", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<makeme\>\"", ",", 
    "\"\<same as showme except plot output is suppressed\>\"", ",", 
    "\"\<makeme[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419859809213635*^9, 3.419859809621169*^9}}],

Cell["\<\
The following is the same as makeme (i.e., no plot output) except that it \
allows specification of the style\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeme", "[", 
   RowBox[{"x_", ",", "y_", ",", "style_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"maketab", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "style"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.419859817332066*^9}],

Cell["\<\
This is the same as showme, except that it forces all data to show on the plot\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showmeAll", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"maketab", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"showmeAll", "[", "x_", "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<showmeAll\>\"", ",", "\"\<forces all data to be plotted\>\"", ",", 
    "\"\<showmeAll[x,y]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.453754040561687*^9, 3.453754078161622*^9}}],

Cell["The following permits labels:", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"x_", ",", "y_", ",", "labl_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"labl", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        ",", 
       RowBox[{
       "labl", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["This is the same except over a specified cycle range.", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"x_", ",", "y_", ",", "imin_", ",", "imax_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["The following permits labels:", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"showme", "[", 
   RowBox[{"x_", ",", "y_", ",", "imin_", ",", "imax_", ",", "labl_"}], "]"}],
   ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"labl", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        ",", 
       RowBox[{
       "labl", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "myStyle"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
The following supports more than one y-variable. 
The first one is plotted in violet, and the last in red according to the \
following color scheme:\
\>", "Text",
 CellChangeTimes->{{3.423956183951253*^9, 3.4239561949704723`*^9}, {
  3.4239562296799583`*^9, 3.4239562632898808`*^9}}],

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "i", "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "1", ",", ".03"}], "}"}]}], "]"}], "}"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.423955023077861*^9, 3.4239550332368393`*^9}, {
  3.423955065200328*^9, 3.423955066476822*^9}, {3.423955116391264*^9, 
  3.423955117004179*^9}, {3.423955177039487*^9, 3.423955251853413*^9}, {
  3.423956215473813*^9, 3.4239562185909567`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showmany", "[", 
   RowBox[{"x_", ",", "yyy_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "yyy", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"yyy", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", " ", 
            RowBox[{"Thick", ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"n", "-", "1"}], ")"}]}], "]"}]}], " ", "}"}]}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "yyy", "]"}]}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"init", "[", 
  RowBox[{
  "\"\<showmany\>\"", ",", "\"\<plot many variables together\>\"", ",", 
   "\"\<showmany[x,{y1,y2}]\>\""}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4239547016510963`*^9, 3.423954786929001*^9}, {
   3.423954853445697*^9, 3.423954895019883*^9}, 3.423954997811017*^9, {
   3.423955308658011*^9, 3.4239553513281717`*^9}, {3.4239553879583406`*^9, 
   3.4239554329382544`*^9}, {3.423955465732942*^9, 3.423955467714212*^9}, {
   3.42395568137211*^9, 3.423955689304866*^9}, {3.423955732131888*^9, 
   3.4239557875627937`*^9}, {3.423955916850613*^9, 3.423955922930978*^9}, {
   3.4239559613554497`*^9, 3.42395603038258*^9}}],

Cell["\<\
The following single-argument version of the showme function is equivalent to \
the showcy function\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"showme", "[", "x_", "]"}], ":=", 
   RowBox[{"showcy", "[", "x", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
The following function will plot a set of data of arbitary length (all of the \
above plot commands assume the data is of length lastep).\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showdat", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"showdat", "[", 
   RowBox[{"x_", ",", "y_", ",", "imin_", ",", "imax_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"showdat", "[", "x_", "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", "labl"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<showdat\>\"", ",", 
    "\"\<graph data tables of length differing from code-generated data\>\"", 
    ",", "\"\<showdat[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
The following will insert or delete points to resize an array to have exactly \
n points (useful for comparing arrays of different sizes). Increasing the \
number of points will retain information. Reducing number of points will \
decimate.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"resize", "[", 
    RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"na", ",", "fac", ",", "id", ",", "idl"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"na", "=", 
       RowBox[{"Length", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fac", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"na", "-", "1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"N", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"id", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "fac"}], "+", "1"}]}], ";", 
              
              RowBox[{"idl", "=", 
               RowBox[{"IntegerPart", "[", "id", "]"}]}], ";", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "idl", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", 
                    RowBox[{"idl", "+", "1"}], "]"}], "]"}], "-", 
                  RowBox[{"a", "[", 
                   RowBox[{"[", "idl", "]"}], "]"}]}], ")"}], 
                RowBox[{"FractionalPart", "[", "id", "]"}]}]}]}], ")"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", "[", 
            RowBox[{"[", "na", "]"}], "]"}], "}"}]}], "}"}], "]"}], "]"}]}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<resize\>\"", ",", 
    "\"\<interpolate an array to change its number of data points\>\"", ",", 
    "\"\<resize[array,npts]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.423950116478739*^9, 3.423950117350342*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stress-space function", "Section",
 CellChangeTimes->{{3.423949095408349*^9, 3.423949118820038*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stressSpace", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "mn", ",", "mx", ",", "axis", ",", "adat", ",", "xdat", ",",
       "ydat", ",", "zdat", ",", "val", ",", "vuctr"}], "}"}], ",", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"SIG11", ",", "SIG22", ",", "SIG33"}], "}"}], "/", 
        RowBox[{"(", "scaler", ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mn", "=", 
      RowBox[{"Min", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mx", "=", 
      RowBox[{"Max", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"axis", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"val", ",", 
        RowBox[{"{", 
         RowBox[{"val", ",", "mn", ",", "mx", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"mx", "-", "mn"}], ")"}], "/", "100"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"adat", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"axis", ",", "axis", ",", "axis"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xdat", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"val", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"val", ",", "mn", ",", "mx", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"mx", "-", "mn"}], ")"}], "/", "100"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ydat", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "val", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"val", ",", "mn", ",", "mx", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"mx", "-", "mn"}], ")"}], "/", "100"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"zdat", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "val"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"val", ",", "mn", ",", "mx", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"mx", "-", "mn"}], ")"}], "/", "100"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vuctr", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mn", ",", "mn", ",", "mn"}], "}"}], "+", 
         RowBox[{"{", 
          RowBox[{"mx", ",", "mx", ",", "mx"}], "}"}]}], ")"}], "/", "2"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"adat", ",", "xdat", ",", "ydat", ",", "zdat", ",", "data"}], 
        "}"}], ",", 
       RowBox[{"BoxRatios", "->", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "Black", ",", "Red", ",", "Green", ",", "Blue", ",", "Orange"}], 
         "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<stressSpace\>\"", ",", "\"\<show path through 3D stress space\>\"", 
    ",", "\"\<stressSpace[]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419875251951662*^9, 3.419875326369136*^9}, {
   3.4198754786187897`*^9, 3.419875488913105*^9}, {3.419875541562819*^9, 
   3.419875561599272*^9}, {3.419875797763732*^9, 3.4198758242330723`*^9}, 
   3.419875872132237*^9, {3.419876082075822*^9, 3.419876175520955*^9}, {
   3.419876222189891*^9, 3.4198762500810537`*^9}, {3.419876280429367*^9, 
   3.419876305976943*^9}, {3.419876482338965*^9, 3.419876518492322*^9}, {
   3.423949017055996*^9, 3.423949061361724*^9}, {3.540633658975933*^9, 
   3.540633661313772*^9}, {3.5406337038813543`*^9, 3.540633717185273*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GeoModel octahedral profile function", "Section",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RKfnt", "[", 
   RowBox[{"RKARG_", ",", "I1_", ",", "a2_", ",", "a3_", ",", "a4_"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rk", ",", "rkmin"}], "}"}], ",", 
    RowBox[{
     RowBox[{"rkmin", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"J3TYPEM", "\[Equal]", "1"}], ",", "0.778", ",", "0.49999"}], 
       "]"}]}], ";", 
     RowBox[{"rk", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"rkmin", ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"RKARG", ">", "0"}], ",", "RKARG", ",", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], 
              RowBox[{"(", 
               RowBox[{"a4", "+", 
                RowBox[{"a2", " ", "a3", " ", 
                 RowBox[{"E", "^", 
                  RowBox[{"(", 
                   RowBox[{"a2", " ", "I1"}], ")"}]}]}]}], ")"}]}]}], 
            ")"}]}]}], "]"}]}], "   ", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<RKfnt\>\"", ",", 
    "\"\<function for pressure varying strength ratio\>\"", ",", 
    "\"\<RKfnt[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419858518105763*^9, 3.419858592043046*^9}, {
  3.419858639342403*^9, 3.4198586441793737`*^9}, {3.419858685787137*^9, 
  3.419858696779398*^9}, {3.4198705610729723`*^9, 3.419870568549787*^9}}],

Cell[BoxData[{
 RowBox[{"RK0", ":=", 
  RowBox[{"RKfnt", "[", 
   RowBox[{"RKM", ",", "0", ",", "A2M", ",", "A3M", ",", "A4M"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"RKPF0", ":=", 
  RowBox[{"RKfnt", "[", 
   RowBox[{"RKPFM", ",", "0", ",", "A2PFM", ",", "A3M", ",", "A4PFM"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<RK0\>\"", ",", 
    "\"\<value of pressure varying strength ratio at zero pressure\>\"", ",", 
    "RK0"}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gudehus", "[", 
    RowBox[{"b_", ",", "RK_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", "b"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "RK"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", "b"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "[", 
    RowBox[{
    "\"\<gudehus\>\"", ",", "\"\<The Gudehus third invariant function\>\"", 
     ",", "\"\<gudehus[...]\>\""}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"willamWarnke", "[", 
    RowBox[{"b_", ",", "RK_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"RK", "^", "2"}]}], ")"}], 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Pi", "/", "6"}], "+", "b"}], "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "RK"}], "-", "1"}], ")"}], "^", "2"}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"RK", "^", "2"}]}], ")"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"Pi", "/", "6"}], "+", "b"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "RK"}], "-", "1"}], ")"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"RK", "^", "2"}]}], ")"}], 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"Pi", "/", "6"}], "+", "b"}], "]"}], "^", "2"}]}], "+", 
         RowBox[{"5", 
          RowBox[{"RK", "^", "2"}]}], "-", 
         RowBox[{"4", "RK"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "[", 
    RowBox[{
    "\"\<willamWarnke\>\"", ",", 
     "\"\<The Willam-Warnke third invariant function\>\"", ",", 
     "\"\<willamWarnke[...]\>\""}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mohrCoulomb", "[", 
    RowBox[{"b_", ",", "RK_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"SI", ",", "scale"}], "}"}], ",", 
     RowBox[{
      RowBox[{"SI", "=", 
       RowBox[{"3", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "RK"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", "RK"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"scale", "=", 
       RowBox[{"2", " ", 
        RowBox[{
         RowBox[{"Sqrt", "[", "3", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"3", "-", "SI"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "b", "]"}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "b", "]"}], "*", 
          RowBox[{"SI", "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], ")"}], "scale"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "[", 
    RowBox[{
    "\"\<mohrCoulomb\>\"", ",", 
     "\"\<The Mohr-Coulomb third invariant function\>\"", ",", 
     "\"\<mohrCoulomb[...]\>\""}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GAM", "[", 
   RowBox[{"J3TYPE_", ",", "RK_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Switch", "[", 
   RowBox[{"J3TYPE", ",", "1", ",", 
    RowBox[{"gudehus", "[", 
     RowBox[{"b", ",", "RK"}], "]"}], ",", "2", ",", 
    RowBox[{"willamWarnke", "[", 
     RowBox[{"b", ",", "RK"}], "]"}], ",", "3", ",", 
    RowBox[{"mohrCoulomb", "[", 
     RowBox[{"b", ",", "RK"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"GAM", "[", 
   RowBox[{"J3TYPE_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Switch", "[", 
   RowBox[{"J3TYPE", ",", "1", ",", 
    RowBox[{"gudehus", "[", 
     RowBox[{"b", ",", "RK0"}], "]"}], ",", "2", ",", 
    RowBox[{"willamWarnke", "[", 
     RowBox[{"b", ",", "RK0"}], "]"}], ",", "3", ",", 
    RowBox[{"mohrCoulomb", "[", 
     RowBox[{"b", ",", "RK0"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<GAM\>\"", ",", 
    "\"\<Fossum's GAMMA function for third-invariant dependence\>\"", ",", 
    "\"\<GAM[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"octo", "[", "scale_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "bfnt", ",", "FGAMM", ",", "Frfnt", ",", "Fradius", ",", "Fstyle", ",", 
      "GGAMM", ",", "Grfnt", ",", "Gradius", ",", "Gstyle", ",", "octoPlot"}],
      "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"bfnt", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "3"}], ")"}], 
       RowBox[{"ArcSin", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", "t"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FGAMM", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"GAM", "[", 
        RowBox[{
         RowBox[{"IntegerPart", "[", "J3TYPEM", "]"}], ",", "RK0", ",", "b"}],
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"GGAMM", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"GAM", "[", 
        RowBox[{
         RowBox[{"IntegerPart", "[", "J3TYPEM", "]"}], ",", "RKPF0", ",", 
         "b"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Frfnt", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"1", "/", 
        RowBox[{"FGAMM", "[", "b", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fradius", "[", "t_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Frfnt", "[", 
        RowBox[{"bfnt", "[", "t", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grfnt", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"1", "/", 
        RowBox[{"GGAMM", "[", "b", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Gradius", "[", "t_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Grfnt", "[", 
        RowBox[{"bfnt", "[", "t", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fstyle", "=", 
      RowBox[{"{", 
       RowBox[{"medLine", ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", ".9"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Gstyle", "=", 
      RowBox[{"{", 
       RowBox[{"thinLine", ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".8", ",", ".8", ",", ".9"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"octoPlot", "[", 
       RowBox[{"size_", ",", "radius_", ",", "style_"}], "]"}], ":=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"size", " ", 
           RowBox[{"radius", "[", "t", "]"}], 
           RowBox[{"Cos", "[", "t", "]"}]}], ",", 
          RowBox[{"size", " ", 
           RowBox[{"radius", "[", "t", "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "style"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", " ", 
      RowBox[{
       RowBox[{"octoPlot", "[", 
        RowBox[{
         RowBox[{"rmax", "/", "scale"}], ",", "Fradius", ",", "Fstyle"}], 
        "]"}], ",", 
       RowBox[{"octoPlot", "[", 
        RowBox[{
         RowBox[{"rmax", "/", "scale"}], ",", "Gradius", ",", "Gstyle"}], 
        "]"}]}], " ", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<octo\>\"", ",", 
    "\"\<function to create an image of the octahedral profile\>\"", ",", 
    "\"\<octo[scale,I1]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419859823744952*^9, 3.419859833278523*^9}, {
  3.419860278742099*^9, 3.419860302660235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"octo", "[", 
   RowBox[{"scale_", ",", "I1_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "RKatI1", ",", "RKPFatI1", ",", "bfnt", ",", "FGAMM", ",", "Frfnt", ",", 
      "Fradius", ",", "Fstyle", ",", "GGAMM", ",", "Grfnt", ",", "Gradius", 
      ",", "Gstyle", ",", "octoPlot"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RKatI1", "=", 
      RowBox[{"RKfnt", "[", 
       RowBox[{"RKM", ",", "I1", ",", "A2M", ",", "A3M", ",", "A4M"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"RKPFatI1", "=", 
      RowBox[{"RKfnt", "[", 
       RowBox[{"RKPFM", ",", "I1", ",", "A2PFM", ",", "A3M", ",", "A4PFM"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bfnt", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "3"}], ")"}], 
       RowBox[{"ArcSin", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", "t"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FGAMM", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"GAM", "[", 
        RowBox[{
         RowBox[{"IntegerPart", "[", "J3TYPEM", "]"}], ",", "RKatI1", ",", 
         "b"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"GGAMM", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"GAM", "[", 
        RowBox[{
         RowBox[{"IntegerPart", "[", "J3TYPEM", "]"}], ",", "RKPFatI1", ",", 
         "b"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Frfnt", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"1", "/", 
        RowBox[{"FGAMM", "[", "b", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fradius", "[", "t_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Frfnt", "[", 
        RowBox[{"bfnt", "[", "t", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grfnt", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"1", "/", 
        RowBox[{"GGAMM", "[", "b", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Gradius", "[", "t_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Grfnt", "[", 
        RowBox[{"bfnt", "[", "t", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fstyle", "=", 
      RowBox[{"{", 
       RowBox[{"medLine", ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", ".9"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Gstyle", "=", 
      RowBox[{"{", 
       RowBox[{"thinLine", ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".8", ",", ".8", ",", ".9"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"octoPlot", "[", 
       RowBox[{"size_", ",", "radius_", ",", "style_"}], "]"}], ":=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"size", " ", 
           RowBox[{"radius", "[", "t", "]"}], 
           RowBox[{"Cos", "[", "t", "]"}]}], ",", 
          RowBox[{"size", " ", 
           RowBox[{"radius", "[", "t", "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "style"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"octoPlot", "[", 
        RowBox[{
         RowBox[{"rmax", "/", "scale"}], ",", "Fradius", ",", "Fstyle"}], 
        "]"}], ",", 
       RowBox[{"octoPlot", "[", 
        RowBox[{
         RowBox[{"rmax", "/", "scale"}], ",", "Gradius", ",", "Gstyle"}], 
        "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419859839340556*^9, 3.4198598463417397`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atan", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"ArcTan", "[", 
   RowBox[{"x", ",", "y"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atan", "[", 
   RowBox[{"0", ",", "0"}], "]"}], ":=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atan", "[", 
    RowBox[{"0.", ",", "0."}], "]"}], ":=", "0."}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LodeX", "[", 
   RowBox[{"Txx_", ",", "Tyy_", ",", "Tzz_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Tyy", "-", "Txx"}], ")"}], "/", 
   RowBox[{"Sqrt", "[", "2", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<LodeX\>\"", ",", 
    "\"\<returns x-Lode coordinate for true triaxial loading\>\"", ",", 
    "\"\<LodeX[xx,yy,zz]\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LodeY", "[", 
   RowBox[{"Txx_", ",", "Tyy_", ",", "Tzz_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "Tzz"}], "-", "Txx", "-", "Tyy"}], ")"}], "/", 
   RowBox[{"Sqrt", "[", "6", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<LodeY\>\"", ",", 
    "\"\<returns y-Lode coordinate for true triaxial loading\>\"", ",", 
    "\"\<LodeY[xx,yy,zz]\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrueLode", "[", 
   RowBox[{"TlodeX_", ",", "TlodeY_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"atan", "[", 
      RowBox[{
       RowBox[{"TlodeX", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"TlodeY", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], 
     RowBox[{"(", 
      RowBox[{"180", "/", "Pi"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "TlodeX", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<TrueLode\>\"", ",", 
    "\"\<returns the full-range Lode angle for triaxial loading\>\"", ",", 
    "\"\<TrueLode[TlodeX,TlodeY]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"OCTO1", "[", "istep_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "RKatI1", ",", "RKPFatI1", ",", "bfnt", ",", "FGAMM", ",", "Frfnt", ",", 
      "Fradius", ",", "Fstyle", ",", "range", ",", "octoPlot"}], "}"}], ",", 
    RowBox[{
     RowBox[{"range", "=", 
      RowBox[{"1.1`", " ", "rmax"}]}], ";", 
     RowBox[{"i1", "=", 
      RowBox[{
      "I1", "\[LeftDoubleBracket]", "istep", "\[RightDoubleBracket]"}]}], ";", 
     RowBox[{"RKatI1", "=", 
      RowBox[{"RKfnt", "[", 
       RowBox[{"RKM", ",", "i1", ",", "A2M", ",", "A3M", ",", "A4M"}], 
       "]"}]}], ";", 
     RowBox[{
      RowBox[{"bfnt", "[", "t_", "]"}], ":=", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"ArcSin", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "t"}], "]"}], "]"}]}]}], ";", 
     RowBox[{
      RowBox[{"FGAMM", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"GAM", "[", 
        RowBox[{
         RowBox[{"IntegerPart", "[", "J3TYPEM", "]"}], ",", "RKatI1", ",", 
         "b"}], "]"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"Frfnt", "[", "b_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       FractionBox["1", 
        RowBox[{"FGAMM", "[", "b", "]"}]], "]"}]}], ";", 
     RowBox[{
      RowBox[{"Fradius", "[", "t_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Frfnt", "[", 
        RowBox[{"bfnt", "[", "t", "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"Fstyle", "=", 
      RowBox[{"{", 
       RowBox[{"thinLine", ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"octoPlot", "[", 
       RowBox[{"size_", ",", "radius_", ",", "ctr_", ",", "style_"}], "]"}], ":=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"size", " ", 
            RowBox[{"radius", "[", "t", "]"}], " ", 
            RowBox[{"Cos", "[", "t", "]"}]}], "+", 
           RowBox[{
           "ctr", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{
           RowBox[{"size", " ", 
            RowBox[{"radius", "[", "t", "]"}], " ", 
            RowBox[{"Sin", "[", "t", "]"}]}], "+", 
           RowBox[{
           "ctr", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"2", " ", "72"}]}]}], "]"}]}], ";", 
     RowBox[{"center", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "LodeXbs", "\[LeftDoubleBracket]", "istep", "\[RightDoubleBracket]"}],
         ",", 
        RowBox[{
        "LodeYbs", "\[LeftDoubleBracket]", "istep", 
         "\[RightDoubleBracket]"}]}], "}"}]}], ";", 
     RowBox[{"jnk0", "=", 
      RowBox[{"octoPlot", "[", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", "A1M"}], ",", "Fradius", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"medLine", ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     
     RowBox[{"jnk1", "=", 
      RowBox[{"octoPlot", "[", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"A1M", "-", "RNM"}], ")"}]}], ",", "Fradius", ",", "center",
         ",", "Fstyle"}], "]"}]}], ";", 
     RowBox[{"jnk2", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "LodeXsig", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "LodeYsig", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "istep"}], "}"}]}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"2", " ", "72"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "fatterLine", "}"}]}]}], "]"}]}], ";", 
     RowBox[{"Show", "[", 
      RowBox[{"jnk2", ",", "jnk1", ",", "jnk0", ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41985985376915*^9, 3.419859865470046*^9}, {
  3.540633667826417*^9, 3.540633673480341*^9}}],

Cell["\<\
jnk0 is the limit surface (blue)
jnk1 is the yield surface (green)
jnk2 is the stress path (black)\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OCTO1", "[", "istep_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i1", ",", "RKatI1", ",", "RKPFatI1", ",", "bfnt", ",", "FGAMM", ",", 
       "Frfnt", ",", "Fradius", ",", "Fstyle", ",", "octoPlot", ",", "jnk0", 
       ",", "jnk1", ",", "jnk2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"range", "=", 
       RowBox[{"1.1`", " ", "rmax"}]}], ";", 
      RowBox[{"i1", "=", 
       RowBox[{
       "I1", "\[LeftDoubleBracket]", "istep", "\[RightDoubleBracket]"}]}], 
      ";", 
      RowBox[{"RKatI1", "=", 
       RowBox[{"RKfnt", "[", 
        RowBox[{"RKM", ",", "I1", ",", "A2M", ",", "A3M", ",", "A4M"}], 
        "]"}]}], ";", 
      RowBox[{
       RowBox[{"bfnt", "[", "t_", "]"}], ":=", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"ArcSin", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "t"}], "]"}], "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"FGAMM", "[", "b_", "]"}], ":=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"GAM", "[", 
         RowBox[{
          RowBox[{"IntegerPart", "[", "J3TYPEM", "]"}], ",", "RKatI1", ",", 
          "b"}], "]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"Frfnt", "[", "b_", "]"}], ":=", 
       RowBox[{"Evaluate", "[", 
        FractionBox["1", 
         RowBox[{"FGAMM", "[", "b", "]"}]], "]"}]}], ";", 
      RowBox[{
       RowBox[{"Fradius", "[", "t_", "]"}], ":=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Frfnt", "[", 
         RowBox[{"bfnt", "[", "t", "]"}], "]"}], "]"}]}], ";", 
      RowBox[{"Fstyle", "=", 
       RowBox[{"{", 
        RowBox[{"medLine", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "}"}]}], ";", 
      RowBox[{"Gstyle", "=", 
       RowBox[{"{", 
        RowBox[{"thinLine", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "}"}]}], ";", 
      RowBox[{
       RowBox[{"octoPlot", "[", 
        RowBox[{"size_", ",", "radius_", ",", "style_"}], "]"}], ":=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"size", " ", 
            RowBox[{"radius", "[", "t", "]"}], " ", 
            RowBox[{"Cos", "[", "t", "]"}]}], ",", 
           RowBox[{"size", " ", 
            RowBox[{"radius", "[", "t", "]"}], " ", 
            RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "style"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"octoPlot", "[", 
        RowBox[{"size_", ",", "radius_", ",", "ctr_", ",", "style_"}], "]"}], 
       ":=", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"size", " ", 
             RowBox[{"radius", "[", "t", "]"}], " ", 
             RowBox[{"Cos", "[", "t", "]"}]}], "+", 
            RowBox[{
            "ctr", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{
            RowBox[{"size", " ", 
             RowBox[{"radius", "[", "t", "]"}], " ", 
             RowBox[{"Sin", "[", "t", "]"}]}], "+", 
            RowBox[{
            "ctr", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"2", " ", "72"}]}]}], "]"}]}], ";", 
      RowBox[{"center", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LodeXbs", "\[LeftDoubleBracket]", "istep", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LodeYbs", "\[LeftDoubleBracket]", "istep", 
          "\[RightDoubleBracket]"}]}], "}"}]}], ";", 
      RowBox[{"jnk0", "=", 
       RowBox[{"octoPlot", "[", 
        RowBox[{
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Ff", "[", 
           RowBox[{
            RowBox[{"-", "i1"}], ",", "A1M", ",", "A2M", ",", "A3M", ",", 
            "A4M"}], "]"}]}], ",", "Fradius", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"medLine", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"jnk1", "=", 
       RowBox[{"octoPlot", "[", 
        RowBox[{
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Ff", "[", 
             RowBox[{
              RowBox[{"-", "i1"}], ",", "A1M", ",", "A2M", ",", "A3M", ",", 
              "A4M"}], "]"}], "-", "RNM"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"Fc", "[", 
            RowBox[{
             RowBox[{"-", "i1"}], ",", 
             RowBox[{"-", 
              RowBox[{
              "KAPPA", "\[LeftDoubleBracket]", "istep", 
               "\[RightDoubleBracket]"}]}], ",", "CRM", ",", "A1M", ",", 
             "A2M", ",", "A3M", ",", "A4M"}], "]"}]]}], ",", "Fradius", ",", 
         "center", ",", "Fstyle"}], "]"}]}], ";", 
      RowBox[{"jnk2", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "LodeXsig", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "LodeYsig", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "istep"}], "}"}]}], "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"2", " ", "72"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", "fatterLine", "}"}]}]}], "]"}]}], ";", 
      RowBox[{"Show", "[", 
       RowBox[{"jnk0", ",", "jnk1", ",", "jnk2"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<OCTO1\>\"", ",", 
    "\"\<draws yield and limit octahedral profiles at a specified \
timestep\>\"", ",", "\"\<OCTO1[istep]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.418563165975206*^9, 3.418563168004678*^9}, {
  3.418563230825151*^9, 3.4185632525214043`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"octoLOHI", "[", "scale_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"MakeGraphs", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"demodir", "<>", "\"\<octoLO.gif\>\""}], ",", 
        RowBox[{"octo", "[", 
         RowBox[{"scale", ",", 
          RowBox[{"Max", "[", "I1", "]"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"demodir", "<>", "\"\<octoHI.gif\>\""}], ",", 
        RowBox[{"octo", "[", 
         RowBox[{"scale", ",", 
          RowBox[{"Min", "[", "I1", "]"}]}], "]"}]}], "]"}]}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"octo", "[", 
       RowBox[{"scale", ",", 
        RowBox[{"Max", "[", "I1", "]"}]}], "]"}], ";", 
      RowBox[{"octo", "[", 
       RowBox[{"scale", ",", 
        RowBox[{"Min", "[", "I1", "]"}]}], "]"}]}], ")"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<octoLOHI\>\"", ",", 
    "\"\<plots the octahedral profiles at the max and min pressures\>\"", 
    ",", "\"\<octoLOHI[scale]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["GeoModel meridional yield function", "Section",
 InitializationCell->True],

Cell["\<\
The following defines the Ff, ff, Fc, fc, Xbar, and rootJ2merid yield \
functions for the GeoModel. 

Note: 
Use exps when defining scalar-argument functions. 
Use Exps when defining array-argument functions.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sign", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Abs", "[", "x", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"UnitStep", "[", "y", "]"}]}], "-", "1"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<sign\>\"", ",", 
    "\"\<transfers the numerical sign (pos or neg) of y to x\>\"", ",", 
    "\"\<sign[x,y]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eunderflow", "=", 
   RowBox[{"-", "34.53877639491"}]}], ";", 
  RowBox[{"eoverflow", "=", "92.1034037"}], ";", 
  RowBox[{
   RowBox[{"exps", "[", "x_", "]"}], ":=", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"x", ",", "eunderflow"}], "]"}], ",", "eoverflow"}], "]"}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Exps", "[", "a_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"exps", "[", 
     RowBox[{"a", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<exps\>\"", ",", 
    "\"\<identical to the exponential function with over/underflow cut-offs\>\
\"", ",", "\"\<exps[x]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Ff", "[", 
    RowBox[{"I1bar_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "a4_"}], "]"}],
    ":=", 
   RowBox[{"a1", "-", 
    RowBox[{"a3", " ", 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a2"}], " ", "I1bar"}], ")"}]}]}], "+", 
    RowBox[{"a4", " ", "I1bar"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<Ff\>\"", ",", "\"\<function for the limit surface\>\"", ",", 
    "\"\<Ff[...]\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ff", "[", 
    RowBox[{
    "I1bar_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "a4_", ",", "N_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"Ff", "[", 
     RowBox[{"I1bar", ",", "a1", ",", "a2", ",", "a3", ",", "a4"}], "]"}], 
    "-", "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<ff\>\"", ",", 
    "\"\<same as Ff, but without the kinematic hardening shift\>\"", ",", 
    "\"\<ff\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xbar", "[", 
   RowBox[{
   "kappaBar_", ",", "CR_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "a4_"}], 
   "]"}], ":=", 
  RowBox[{"kappaBar", "+", 
   RowBox[{"CR", " ", 
    RowBox[{"Ff", "[", 
     RowBox[{"kappaBar", ",", "a1", ",", "a2", ",", "a3", ",", "a4"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<Xbar\>\"", ",", 
    "\"\<Fossum's X function for I1 vs. volumetric plastic strain\>\"", ",", 
    "\"\<Xbar\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fc", "[", 
    RowBox[{
    "I1bar_", ",", "kappaBar_", ",", "CR_", ",", "a1_", ",", "a2_", ",", 
     "a3_", ",", "a4_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"I1bar", "-", "kappaBar"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"I1bar", "-", "kappaBar"}], "]"}], "+", 
          RowBox[{"(", 
           RowBox[{"I1bar", "-", "kappaBar"}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Xbar", "[", 
              RowBox[{
              "kappaBar", ",", "CR", ",", "a1", ",", "a2", ",", "a3", ",", 
               "a4"}], "]"}], "-", "kappaBar"}], ")"}], "^", "2"}]}], 
         ")"}]}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<Fc\>\"", ",", "\"\<Fossum's Fc function (for the elliptical cap)\>\"",
     ",", "\"\<Fc\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fc", "[", 
    RowBox[{
    "I1bar_", ",", "kappaBar_", ",", "CR_", ",", "a1_", ",", "a2_", ",", 
     "a3_", ",", "a4_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Fc", "[", 
     RowBox[{
     "I1bar", ",", "kappaBar", ",", "CR", ",", "a1", ",", "a2", ",", "a3", 
      ",", "a4"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<fc\>\"", ",", "\"\<Square root of the Fc function\>\"", ",", 
    "\"\<fc\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rootJ2merid", "[", 
    RowBox[{
    "I1bar_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "a4_", ",", "N_", ",", 
     "kappaBar_", ",", "CR_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ff", "[", 
       RowBox[{"I1bar", ",", "a1", ",", "a2", ",", "a3", ",", "a4"}], "]"}], 
      "-", "N"}], ")"}], 
    RowBox[{"fc", "[", 
     RowBox[{
     "I1bar", ",", "kappaBar", ",", "CR", ",", "a1", ",", "a2", ",", "a3", 
      ",", "a4"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<rootJ2merid\>\"", ",", 
    "\"\<function for Sqrt[J2] vs. I1 at yield\>\"", ",", 
    "\"\<rootJ2merid[...]\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"merid", "[", 
   RowBox[{
   "zbar_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "a4_", ",", "N_", ",", 
    "kappaBar_", ",", "CR_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Sqrt", "[", "2", "]"}], ")"}], " ", 
   RowBox[{"rootJ2merid", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Sqrt", "[", "3", "]"}], ")"}], " ", "zbar"}], ",", "a1", ",", 
     "a2", ",", "a3", ",", "a4", ",", "N", ",", "kappaBar", ",", "CR"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<merid\>\"", ",", 
    "\"\<function for Lode radius vs. Lode z at yield\>\"", ",", 
    "\"\<merid[...]\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"limitCurve", "[", 
   RowBox[{"zbar_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "a4_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", "2", "]"}], 
   RowBox[{"Ff", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", "3", "]"}], "zbar"}], ",", "a1", ",", "a2", ",", 
     "a3", ",", "a4"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<limitCurve\>\"", ",", 
    "\"\<function for Lode radius vs. Lode z at limit\>\"", ",", 
    "\"\<limitCurve[...]\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"limitCurveTXE", "[", 
    RowBox[{
    "RK0_", ",", "zbar_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "a4_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], 
    RowBox[{"Ff", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", "3", "]"}], "zbar"}], ",", "a1", ",", "a2", ",", 
      "a3", ",", "a4"}], "]"}], " ", 
    RowBox[{"RKfnt", "[", 
     RowBox[{"RKM", ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", "3", "]"}]}], "zbar"}], ",", "a2", ",", "a3", 
      ",", "a4"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<limitCurveTXE\>\"", ",", "\"\<same as limitCurve except TXE\>\"", 
    ",", "\"\<limitCurveTXE[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.429983752606564*^9, 3.429983801919424*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EVP", "[", "XbarArg_", "]"}], ":=", 
  RowBox[{"P3M", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"exps", "[", 
      RowBox[{
       RowBox[{"P1M", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "XbarArg"}], "-", "P0M"}], ")"}]}], "-", 
       RowBox[{"P2M", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "XbarArg"}], "-", "P0M"}], ")"}], "^", "2"}]}]}], 
      "]"}], "-", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<EVP\>\"", ",", 
    "\"\<returns plastic volumetric strain in terms of I1 for the cap\>\"", 
    ",", "\"\<EVP[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"solveKapFromX", "[", "X_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"kkk", ",", "oscale", ",", "kscale", ",", "kapsol"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KAPPA", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"kkk", ",", 
        RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"oscale", "=", "B0M"}], ";", "\[IndentingNewLine]", 
     RowBox[{"kscale", " ", "=", " ", "B0M"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"obj1", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"X", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"Xbar", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"KAPPA", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "CRM", ",", "A1M", 
                 ",", "A2M", ",", "A3M", ",", "A4M"}], "]"}]}], ")"}], "/", 
             "oscale"}], ")"}], "/.", 
           RowBox[{
            RowBox[{"kkk", "[", "i", "]"}], "\[Rule]", 
            RowBox[{"kscale", "  ", "kappabar1"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"kapsol", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"obj1", ",", 
           RowBox[{"{", 
            RowBox[{"kappabar1", ",", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/", "kscale"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"KAPPA", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
         RowBox[{
          RowBox[{"kscale", " ", "kappabar1"}], "/.", "kapsol"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solveQSELFromX", "[", "QSX_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"kkk", ",", "oscale", ",", "kscale", ",", "qskapsol"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"QSEL", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"kkk", ",", 
        RowBox[{"Length", "[", "QSX", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"oscale", "=", "B0M"}], ";", "\[IndentingNewLine]", 
     RowBox[{"kscale", " ", "=", " ", "B0M"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"obj2", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"QSX", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"Xbar", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"QSEL", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "CRM", ",", "A1M", 
                 ",", "A2M", ",", "A3M", ",", "A4M"}], "]"}]}], ")"}], "/", 
             "oscale"}], ")"}], "/.", 
           RowBox[{
            RowBox[{"kkk", "[", "i", "]"}], "\[Rule]", 
            RowBox[{"kscale", "  ", "kappabar2"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qskapsol", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"obj2", ",", 
           RowBox[{"{", 
            RowBox[{"kappabar2", ",", 
             RowBox[{
              RowBox[{"QSX", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/", "kscale"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"QSEL", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
         RowBox[{
          RowBox[{"kscale", " ", "kappabar2"}], "/.", "qskapsol"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "QSX", "]"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.4102788085401373`*^9, 3.410279024794931*^9}, {
   3.410279098131495*^9, 3.410279101738564*^9}, {3.410279141866251*^9, 
   3.410279224573349*^9}, {3.410279495776216*^9, 3.410279506562854*^9}, {
   3.410279545746937*^9, 3.41027977752104*^9}, {3.410279882801238*^9, 
   3.41027995894547*^9}, 3.410299991436503*^9, {3.41030026468752*^9, 
   3.410300265491078*^9}, {3.410300735688601*^9, 3.410300772009102*^9}, {
   3.410300876617591*^9, 3.4103008828642817`*^9}, {3.410300952905422*^9, 
   3.4103009538471937`*^9}, {3.4103009838556356`*^9, 
   3.4103009850629597`*^9}, {3.4103010150815363`*^9, 
   3.4103010295032187`*^9}, {3.4103011722639637`*^9, 3.410301187812673*^9}, {
   3.410303796931466*^9, 3.410304004063916*^9}, {3.411158950367614*^9, 
   3.411158965726303*^9}, {3.4126034649414787`*^9, 3.412603472254035*^9}, {
   3.4126061817836657`*^9, 3.412606262484191*^9}, {3.412606313808689*^9, 
   3.412606334442243*^9}, {3.412606405084543*^9, 3.412606417290859*^9}, {
   3.412606448647484*^9, 3.4126064594336977`*^9}, {3.4126067396877737`*^9, 
   3.4126067427577763`*^9}, {3.412607640977191*^9, 3.4126076841197233`*^9}, {
   3.4126080248566008`*^9, 3.4126080253874893`*^9}, {3.413304804564309*^9, 
   3.413304811634129*^9}, {3.4133081776648417`*^9, 3.413308213020481*^9}, {
   3.413314187140131*^9, 3.4133141923970003`*^9}, {3.414240945366392*^9, 
   3.4142409842918453`*^9}, {3.4142411454388237`*^9, 3.41424120925593*^9}, {
   3.4142412823108673`*^9, 3.4142412864552917`*^9}, {3.4142413766818857`*^9, 
   3.41424137719466*^9}, {3.414243562175468*^9, 3.414243668220907*^9}, {
   3.414243699516452*^9, 3.4142437577590723`*^9}, {3.414244049990054*^9, 
   3.414244050603607*^9}, {3.4142442669857063`*^9, 3.414244286278923*^9}, {
   3.414262600591415*^9, 3.414262604393978*^9}, {3.41426273591851*^9, 
   3.41426276017905*^9}}],

Cell["\<\
Here is a testing playground. Simply set values for the test parameters to \
explore the shape of the yield surface. The plot for ff is scaled by ffmax. \
The plot for fc is scaled by fcmax. The plot for rootJ2merid is scaled by \
ffmax*fcmax.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1test", "=", "3"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a2test", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a3test", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a4test", "=", "0.2`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kappaBartest", "=", "6"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CRtest", "=", "3"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ntest", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I1lo", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I1hi", "=", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ffhi", "=", 
   RowBox[{"ff", "[", 
    RowBox[{
    "I1hi", ",", "a1test", ",", "a2test", ",", "a3test", ",", "a4test", ",", 
     "Ntest"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"scaleff", "=", "ffhi"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fchi", "=", 
   RowBox[{"fc", "[", 
    RowBox[{
    "kappaBartest", ",", "kappaBartest", ",", "CRtest", ",", "a1test", ",", 
     "a2test", ",", "a3test", ",", "a4test"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"scalefc", "=", "fchi"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rangetest", "=", "1"}], ";"}], "\n", 
 RowBox[{"fftest", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"ff", "[", 
      RowBox[{
      "I1bar", ",", "a1test", ",", "a2test", ",", "a3test", ",", "a4test", 
       ",", "Ntest"}], "]"}], "scaleff"], ",", 
    RowBox[{"{", 
     RowBox[{"I1bar", ",", "I1lo", ",", "I1hi"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "rangetest"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "red", "}"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], "\n", 
 RowBox[{"fctest", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"fc", "[", 
      RowBox[{
      "I1bar", ",", "kappaBartest", ",", "CRtest", ",", "a1test", ",", 
       "a2test", ",", "a3test", ",", "a4test"}], "]"}], "scalefc"], ",", 
    RowBox[{"{", 
     RowBox[{"I1bar", ",", "I1lo", ",", "I1hi"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "blue", "}"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], "\n", 
 RowBox[{"rootJ2meridtest", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"scaleff", " ", "scalefc"}]], 
     RowBox[{"rootJ2merid", "[", 
      RowBox[{
      "I1bar", ",", "a1test", ",", "a2test", ",", "a3test", ",", "a4test", 
       ",", "Ntest", ",", "kappaBartest", ",", "CRtest"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"I1bar", ",", "I1lo", ",", "I1hi"}], "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"rootJ2meridtest", ",", "fftest", ",", "fctest"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"rootJ2merid", "[", 
      RowBox[{
      "I1bar", ",", "a1test", ",", "a2test", ",", "a3test", ",", "a4test", 
       ",", "Ntest", ",", "kappaBartest", ",", "CRtest"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"I1bar", ",", "I1lo", ",", "I1hi"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "green", "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"merid", "[", 
      RowBox[{
      "zbar", ",", "a1test", ",", "a2test", ",", "a3test", ",", "a4test", ",",
        "Ntest", ",", "kappaBartest", ",", "CRtest"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"zbar", ",", 
       RowBox[{"I1lo", "/", 
        RowBox[{"Sqrt", "[", "3", "]"}]}], ",", 
       RowBox[{"I1hi", "/", 
        RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], "]"}]], "Input"],

Cell["\<\
The following finds lode coordinates, both absolute and in the principal \
sector. 
The arguments are the eigenvalues in any order. In practice, I would want to \
use eigenvalues ordered x,y,z. 

Example useage:

jnk=Table[LodeCoords[QSSIGXX[[i]], QSSIGYY[[i]], QSSIGZZ[[i]]],{i,1,lastep}]
qssigAX=Table[jnk[[i, indexAbsolute, indexCartesian,indexX]],{i,1,lastep}]
qssigAY=Table[jnk[[i, indexAbsolute, indexCartesian,indexY]],{i,1,lastep}]
qssigAZ=Table[jnk[[i, indexAbsolute, indexCartesian,indexZ]],{i,1,lastep}]
qssigAR=Table[jnk[[i, indexAbsolute, indexPolar,indexR]],{i,1,lastep}]
qssigAT=Table[jnk[[i, indexAbsolute, indexPolar,indexT]],{i,1,lastep}]
qssigSX=Table[jnk[[i, indexSector, indexCartesian,indexX]],{i,1,lastep}]
qssigSY=Table[jnk[[i, indexSector, indexCartesian,indexY]],{i,1,lastep}]
qssigSZ=Table[jnk[[i, indexSector, indexCartesian,indexZ]],{i,1,lastep}]
qssigSR=Table[jnk[[i, indexSector, indexPolar,indexR]],{i,1,lastep}]
qssigST=Table[jnk[[i, indexSector, indexPolar,indexT]],{i,1,lastep}]

This functionality will be needed in the enhanced meridional profile function \
(MeridanALL).\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"indexAbsolute", "=", "1"}], ";", 
  RowBox[{"indexSector", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"indexCartesian", "=", "1"}], ";", 
  RowBox[{"indexPolar", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"indexR", "=", "1"}], ";", 
  RowBox[{"indexT", "=", "2"}], ";", 
  RowBox[{"indexZ", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"indexX", "=", "1"}], ";", 
  RowBox[{"indexY", "=", "2"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LodeCoords", "[", 
   RowBox[{"a1_", ",", "a2_", ",", "a3_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "y", ",", "z", ",", "truex", ",", "truey", ",", "radius", ",", 
      "trueLode", ",", "Lode"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"truex", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a3", "-", "a1"}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"truey", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"a1", "+", "a3", "-", 
          RowBox[{"2", "a2"}]}], ")"}]}], "/", 
       RowBox[{"Sqrt", "[", "6", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"a1", "+", "a2", "+", "a3"}], ")"}]}], "/", 
       RowBox[{"Sqrt", "[", "3", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"radius", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"truex", "^", "2"}], "+", 
         RowBox[{"truey", "^", "2"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trueLode", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"truex", "\[Equal]", "0"}], "&&", 
         RowBox[{"truey", "\[Equal]", "0"}]}], ",", "0", ",", 
        RowBox[{"Simplify", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"truex", ",", "truey"}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Lode", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "3"}], ")"}], 
       RowBox[{"ArcSin", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", "trueLode"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"radius", " ", 
       RowBox[{"Cos", "[", "Lode", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"radius", " ", 
       RowBox[{"Sin", "[", "Lode", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"truex", ",", "truey", ",", "z"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"radius", ",", "trueLode", ",", "z"}], "}"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"radius", ",", "Lode", ",", "z"}], "}"}]}], "}"}]}], 
      "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<LodeCoords\>\"", ",", 
    "\"\<returns lode Cartesian and cylindrical coordinates\>\"", ",", 
    "\"\<LodeCoords[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Here is a test of the above function. 
The first index in the result is 1 for absolute, 2 for sector.
The second index in the result is 1 for cartesian, 2 for cylindrical.

The absolute and sector results will agree only when the eigenvalues are \
ordered a3 >= a2 >= a1\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"LodeCoords", "[", 
    RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"testAC", "=", 
  RowBox[{"Part", "[", 
   RowBox[{"test", ",", "indexAbsolute", ",", "indexCartesian"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"testAP", "=", 
  RowBox[{"Part", "[", 
   RowBox[{"test", ",", "indexAbsolute", ",", "indexPolar"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"testSC", "=", 
  RowBox[{"Part", "[", 
   RowBox[{"test", ",", "indexSector", ",", "indexCartesian"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"testSP", "=", 
  RowBox[{"Part", "[", 
   RowBox[{"test", ",", "indexSector", ",", "indexPolar"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"test", ",", "indexAbsolute"}], "]"}]], "Input"],

Cell["\<\
The following function will compute derived variables, pres, sigm, \
sigd11,sigd22,sigd33,sigs, and it will finish by plotting the path through \
isomorphic stress space. Note: the variable PRES is output by the model. We \
are computing \"pres\" to verify that equals PRES from the code.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xplotz", "[", 
   RowBox[{"lyst_", ",", "key_", ",", "description_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"plotz", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"plotz", ",", 
       RowBox[{"{", 
        RowBox[{"grafhis", "[", 
         RowBox[{"lyst", ",", 
          RowBox[{"{", "key", "}"}]}], "]"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"plotvarz", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"plotvarz", ",", 
       RowBox[{"{", 
        RowBox[{"key", "<>", "\"\< =\>\"", "<>", "description"}], "}"}]}], 
      "]"}]}], ";"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xpropz", "[", 
   RowBox[{"value_", ",", "key_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"propz", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"propz", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<{\>\"", "<>", "key", "<>", "\"\< = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"FortranForm", "[", "value", "]"}], "]"}], "<>", 
        "\"\<}\>\""}], "}"}]}], "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.40571613584411*^9, 3.405716150756995*^9}, {
  3.405716195516345*^9, 3.405716238676106*^9}, {3.4057163030361156`*^9, 
  3.4057163686281443`*^9}, {3.405716407452227*^9, 3.40571659746168*^9}, {
  3.405717357402935*^9, 3.405717391152467*^9}, {3.405720678085367*^9, 
  3.405720680240656*^9}, {3.4057211716152678`*^9, 3.405721175211568*^9}, {
  3.4057213803647833`*^9, 3.405721436865073*^9}, {3.40572148073206*^9, 
  3.405721520288403*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"computedVARS", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xpropz", "[", 
      RowBox[{
       RowBox[{"geocrack", "=", 
        RowBox[{
         RowBox[{"Round", "[", "JOBFAILU", "]"}], "\[NotEqual]", "0"}]}], 
       ",", "\"\<geocrack\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"geocrack", ",", 
       RowBox[{
        RowBox[{"xpropz", "[", 
         RowBox[{
          RowBox[{"A1U", "=", 
           RowBox[{"A1M", "=", "STRENIU"}]}], ",", "\"\<A1U\>\""}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"xpropz", "[", 
         RowBox[{
          RowBox[{"A2U", "=", 
           RowBox[{"A2M", "=", 
            FractionBox["FSLOPEIU", "STRENIU"]}]}], ",", "\"\<A2U\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"xpropz", "[", 
         RowBox[{
          RowBox[{"A3U", "=", 
           RowBox[{"A3M", "=", 
            RowBox[{"STRENIU", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"FSLOPEIU", " ", "PEAKI1IU"}], "STRENIU"]}]]}]}]}], 
          ",", "\"\<A3U\>\""}], "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"pres", "=", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "3"]}], " ", 
         RowBox[{"(", 
          RowBox[{"SIG11", "+", "SIG22", "+", "SIG33"}], ")"}]}]}], ",", 
       "\"\<pres\>\"", ",", "\"\<pressure = - tr(stress)/3\>\""}], "]"}], ";", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"vstrain", "=", 
        RowBox[{"STRAIN11", "+", "STRAIN22", "+", "STRAIN33"}]}], ",", 
       "\"\<vstrain\>\"", ",", "\"\<volumetric strain\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"sigm", "=", 
        RowBox[{"-", 
         FractionBox["I1", 
          SqrtBox["3"]]}]}], ",", "\"\<sigm\>\"", ",", 
       "\"\<isomorphic mean stress = -I1/Sqrt[3]\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"sigd11", "=", 
        RowBox[{"SIG11", "+", "PRES"}]}], ",", "\"\<sigd11\>\"", ",", 
       "\"\<11 component of stress deviator\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"sigd22", "=", 
        RowBox[{"SIG22", "+", "PRES"}]}], ",", "\"\<sigd22\>\"", ",", 
       "\"\<22 component of stress deviator\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"sigd33", "=", 
        RowBox[{"SIG33", "+", "PRES"}]}], ",", "\"\<sigd33\>\"", ",", 
       "\"\<33 component of stress deviator\>\""}], "]"}], ";", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"sigs", "=", 
        SqrtBox[
         RowBox[{
          RowBox[{"sigd11", " ", "sigd11"}], "+", 
          RowBox[{"sigd22", " ", "sigd22"}], "+", 
          RowBox[{"sigd33", " ", "sigd33"}]}]]}], " ", ",", "\"\<sigs\>\"", 
       ",", "\"\<isomorphic shear stress\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"sigmrange", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Min", "[", "sigm", "]"}], ",", 
        RowBox[{"Max", "[", "sigm", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sigsrange", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"sigs", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"UnitStep", "[", "LODE", "]"}]}], "-", "1"}], ")"}]}], 
         "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"sigs", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"UnitStep", "[", "LODE", "]"}]}], "-", "1"}], ")"}]}], 
         "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{
       RowBox[{"punyEPS", "=", "0.0001"}], ",", "\"\<punyEPS\>\""}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"punyI1", "=", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{"B0M", "+", 
         FractionBox["B1M", "2"]}], ")"}], " ", "punyEPS"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{"punyI1", ",", "\"\<punyI1\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"scaleRJ2", "=", 
      RowBox[{"A1M", "-", 
       RowBox[{"A3M", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "A2M"}], " ", "punyI1"}]]}], "+", 
       RowBox[{"A4M", " ", "punyI1"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{
       RowBox[{"scaleI1", "=", 
        RowBox[{"Abs", "[", "P0M", "]"}]}], ",", "\"\<scaleI1\>\""}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{
       RowBox[{"scalez", "=", 
        FractionBox["scaleI1", 
         SqrtBox["3"]]}], ",", "\"\<scaleI1\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"scaler", "=", 
      RowBox[{"scaleRJ2", " ", 
       SqrtBox["2"]}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"scaler", ">", 
        RowBox[{"2", " ", "G0M", " ", "1000"}]}], ",", 
       RowBox[{
        RowBox[{"scaler", "=", 
         RowBox[{"2", " ", "G0M"}]}], ";", 
        RowBox[{"scaleRJ2", "=", 
         FractionBox["scaler", 
          SqrtBox["2"]]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{"scaler", ",", "\"\<scaler\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{"scaleRJ2", ",", "\"\<scaleRJ2\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{
       RowBox[{"j3type", "=", 
        RowBox[{"IntegerPart", "[", "J3TYPEM", "]"}]}], ",", 
       "\"\<j3type\>\""}], "]"}], ";", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"RK", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RKfnt", "[", 
           RowBox[{"RKM", ",", 
            RowBox[{
            "I1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",",
             "A2M", ",", "A3M", ",", "A4M"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "I1", "]"}]}], "}"}]}], "]"}]}], ",", 
       "\"\<RK\>\"", ",", "\"\<value of the RK function\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"RKPF", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RKfnt", "[", 
           RowBox[{"RKPFM", ",", 
            RowBox[{
            "I1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",",
             "A2PFM", ",", "A3M", ",", "A4PFM"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "I1", "]"}]}], "}"}]}], "]"}]}], ",", 
       "\"\<RKPF\>\"", ",", "\"\<value of RKPF function\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"GAMMA", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"GAM", "[", 
           RowBox[{"j3type", ",", 
            RowBox[{"RK", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "180"], " ", 
                 RowBox[{
                 "LODE", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], " ", "\[Pi]"}], ",", 
                RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}]}], "]"}], ",", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "LODE", "]"}]}], "}"}]}], "]"}]}], ",", 
       "\"\<GAMMA\>\"", ",", "\"\<J3type \[CapitalGamma] function\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"lode", "=", 
        FractionBox[
         RowBox[{"LODE", " ", "\[Pi]"}], "180"]}], ",", "\"\<lode\>\"", ",", 
       "\"\<Lode angle in radians\>\""}], "]"}], ";", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"GAMMAopposite", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"GAM", "[", 
           RowBox[{"j3type", ",", 
            RowBox[{
             FractionBox["1", "3"], " ", 
             RowBox[{"ArcSin", "[", 
              RowBox[{"Sin", "[", 
               RowBox[{
                FractionBox["3", "180"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "LODE", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "+", "180"}], ")"}], " ", 
                "\[Pi]"}], "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "LODE", "]"}]}], "}"}]}], "]"}]}], ",", 
       "\"\<GAMMAopposite\>\"", ",", 
       "\"\<value of J3Type \[CapitalGamma] function on opposite side of YS\>\
\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"LodeXsig", "=", 
        RowBox[{"LodeX", "[", 
         RowBox[{"SIG11", ",", "SIG22", ",", "SIG33"}], "]"}]}], ",", 
       "\"\<LodeXsig\>\"", ",", "\"\<Lode Cartesian x-coordinate\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"LodeYsig", "=", 
        RowBox[{"LodeY", "[", 
         RowBox[{"SIG11", ",", "SIG22", ",", "SIG33"}], "]"}]}], ",", 
       "\"\<LodeYsig\>\"", ",", "\"\<Lode Cartesian y-coordinate\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"LodeXbs", "=", 
        RowBox[{"LodeX", "[", 
         RowBox[{"QSBSXX", ",", "QSBSYY", ",", "QSBSZZ"}], "]"}]}], ",", 
       "\"\<LodeXbs\>\"", ",", 
       "\"\<Lode Cartesian x-coordinate for backstress\>\""}], "]"}], ";", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"LodeYbs", "=", 
        RowBox[{"LodeY", "[", 
         RowBox[{"QSBSXX", ",", "QSBSYY", ",", "QSBSZZ"}], "]"}]}], ",", 
       "\"\<LodeYbs\>\"", ",", 
       "\"\<Lode Cartesian y-coordinate for backstress\>\""}], "]"}], ";", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"trueLodesig", "=", 
        RowBox[{"TrueLode", "[", 
         RowBox[{"LodeXsig", ",", "LodeYsig"}], "]"}]}], ",", 
       "\"\<trueLodesig\>\"", ",", "\"\<wide range Lode Angle\>\""}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"porosity", "=", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "EQPV"}], "-", "P3U"}]]}]}], ",", "\"\<porosity\>\"", 
       ",", "\"\<volume fraction of pores\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"computedX", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "QSEL", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "-", 
           RowBox[{"CRM", " ", 
            RowBox[{"(", 
             RowBox[{"A1M", "-", 
              RowBox[{"A3M", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"A2M", " ", 
                 RowBox[{
                 "QSEL", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}]}]]}], "-", 
              RowBox[{"A4M", " ", 
               RowBox[{
               "QSEL", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "QSEL", "]"}]}], "}"}]}], "]"}]}], ",", 
       "\"\<computedX\>\"", ",", 
       "\"\<X branch point (should equal KAPPA)\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xplotz", "[", 
      RowBox[{
       RowBox[{"computedEVP", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"P3M", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"P1M", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "computedX", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "-", "P0M"}], ")"}]}], "-", 
               RowBox[{"P2M", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "computedX", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "-", "P0M"}], ")"}], "2"]}]}]],
              "-", "1"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "computedX", "]"}]}], "}"}]}], "]"}]}], 
       ",", "\"\<computedEVP\>\"", ",", 
       "\"\<computed plastic volumetric strain\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{
       RowBox[{"uniStiffU", "=", 
        RowBox[{"B0U", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", "/", "3"}], ")"}], "G0U"}]}]}], ",", 
       "\"\<uniStiffU\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xpropz", "[", 
      RowBox[{
       RowBox[{"uniStiffM", "=", 
        RowBox[{"B0M", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", "/", "3"}], ")"}], "G0M"}]}]}], ",", 
       "\"\<uniStiffM\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"meridpath", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"sigm", ",", "sigs"}], "}"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", "myStyle", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "sigsrange"}]}], "]"}]}], ";"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<computedVARS\>\"", ",", 
    "\"\<evaluates GeoModel variables that might be useful in \
calculations\>\"", ",", "\"\<computedVARS[]\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<geocrack\>\"", ",", "\"\<True if the calculation includes damage\>\"",
     ",", "\"\<geocrack\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<pres\>\"", ",", 
    "\"\<pressure determined in Mathemcatica from stress components\>\"", 
    ",", "\"\<pres\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<PRES\>\"", ",", "\"\<pressure reported in simulation output\>\"", 
    ",", "\"\<PRES\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<vstrain\>\"", ",", 
    "\"\<volumetric strain computed in Mathematic from trace of strain \>\"", 
    ",", "\"\<vstrain\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<EVOL\>\"", ",", 
    "\"\<volumetric strain computed within the simulation \>\"", ",", 
    "\"\<EVOL\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<sigm\>\"", ",", "\"\<z Lode coordinate (isomorphic mean stress)\>\"", 
    ",", "\"\<sigm\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<sigd<ij>\>\"", ",", "\"\<components of the stress deviator\>\"", ",", 
    "\"\<sigd11,22,33\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<sigs\>\"", ",", "\"\<r Lode coordinate (isomorphic shear stress)\>\"",
     ",", "\"\<sigs\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<sigsrange\>\"", ",", 
    "\"\<range of r-Lode coordinate during the simulation\>\"", ",", 
    "sigsrange"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<scaleRJ2\>\"", ",", 
    "\"\<a characteristic scale for ROOTJ2 (to normalize plots)\>\"", ",", 
    "scaleRJ2"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<scalez\>\"", ",", 
    "\"\<characteristic scale for z-Lode coordinate\>\"", ",", "scalez"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<j3type\>\"", ",", "\"\<integer value of J3TYPE\>\"", ",", "j3type"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<GAMMA\>\"", ",", 
    "\"\<pressure varying value of the GAMMA function\>\"", ",", 
    "\"\<GAMMA\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<lode\>\"", ",", "\"\<Lode angle in radians\>\"", ",", 
    "\"\<lode\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<GAMMAopposite\>\"", ",", 
    "\"\<value of the GAMMA function on the opposite side of yield \
surface\>\"", ",", "\"\<GAMMAopposite\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<LodeXsig\>\"", ",", "\"\<true x-Cartesian-Lode coordinate\>\"", ",", 
    "\"\<LodeXsig\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<LodeYsig\>\"", ",", "\"\<true y-Cartesian-Lode coordinate\>\"", ",", 
    "\"\<LodeYsig\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<LodeXbs\>\"", ",", "\"\<same as LodeXsig, but for backstress\>\"", 
    ",", "\"\<LodeXbs\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<LodeYbs\>\"", ",", "\"\<same as LodeYsig, but for backstress\>\"", 
    ",", "\"\<LodeYbs\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<trueLodesig\>\"", ",", "\"\<true Lode angle\>\"", ",", 
    "\"\<trueLodesig\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<porosity\>\"", ",", 
    "\"\<estimate for porosity based on volumetric plastic strain\>\"", ",", 
    "\"\<porosity\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<RK\>\"", ",", "\"\<pressure varying value of the strength ratio\>\"", 
    ",", "\"\<RK\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<RKPF\>\"", ",", 
    "\"\<pressure varying strength ratio for the nonassociative \
potential\>\"", ",", "\"\<RKPF\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<computedX\>\"", ",", "\"\<value of I1 at the cap\>\"", ",", 
    "\"\<computedX\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<computedEVP\>\"", ",", 
    "\"\<Mathematica computed EVP (should equal code's EVP)\>\"", ",", 
    "\"\<computedEVP\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<meridpath\>\"", ",", "\"\<plot of sigs vs. sigm\>\"", ",", 
    "\"\<meridpath\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405716641627369*^9, 3.405716676674819*^9}, {
   3.405717560331315*^9, 3.4057186188926783`*^9}, {3.405718655740797*^9, 
   3.405718809435481*^9}, {3.4057189040725183`*^9, 3.405719169316427*^9}, {
   3.4057192033158417`*^9, 3.4057192991575823`*^9}, 3.40571933225812*^9, {
   3.405719386451227*^9, 3.405719452310029*^9}, {3.4057195630856953`*^9, 
   3.40571959138731*^9}, {3.405719628770523*^9, 3.405719632747294*^9}, {
   3.4057197241992064`*^9, 3.405719738419931*^9}, {3.405719787409749*^9, 
   3.405719792368268*^9}, {3.405719968065686*^9, 3.405719987518594*^9}, 
   3.405720024600854*^9, {3.405720070688553*^9, 3.4057200831653767`*^9}, {
   3.405720186262504*^9, 3.4057201887320013`*^9}, {3.4057202700461683`*^9, 
   3.4057203286425133`*^9}, {3.405720429574952*^9, 3.405720461988948*^9}, {
   3.405720501996357*^9, 3.4057205503947277`*^9}, {3.405720589932693*^9, 
   3.405720626858781*^9}, {3.405722030285434*^9, 3.405722068621129*^9}, {
   3.405724631653171*^9, 3.4057246929781017`*^9}, 3.405726733654969*^9, {
   3.405727031549101*^9, 3.40572704890937*^9}, {3.41985809164112*^9, 
   3.419858115962222*^9}, {3.4198581554426603`*^9, 3.4198584171786327`*^9}, {
   3.41985882972614*^9, 3.419858862427417*^9}, {3.419859055083626*^9, 
   3.419859092760866*^9}, {3.419859403545274*^9, 3.419859440128854*^9}, {
   3.419859490668715*^9, 3.4198594921366873`*^9}, 3.419868600413208*^9, {
   3.4198689092805967`*^9, 3.419868944377493*^9}, {3.419868983735647*^9, 
   3.419869071874354*^9}, {3.429983239866373*^9, 3.42998326331584*^9}, {
   3.538143485218431*^9, 3.5381435078153276`*^9}, {3.5381500396210413`*^9, 
   3.538150070933196*^9}, {3.538150120904052*^9, 3.538150241826352*^9}, {
   3.538150283906578*^9, 3.5381503259504433`*^9}, {3.5381503675165367`*^9, 
   3.538150388810636*^9}, {3.538150446881487*^9, 3.53815059129313*^9}, {
   3.538150681165711*^9, 3.538150685793936*^9}, {3.5381511055481987`*^9, 
   3.538151111351915*^9}, {3.540633703576057*^9, 3.540633717087429*^9}, {
   3.5406338668529463`*^9, 3.540633870492413*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"meridianALLold", "[", 
   RowBox[{"nmerid_", ",", "scale_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"rmin", "=", 
      RowBox[{
      "sigsrange", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     ";", 
     RowBox[{"rmax", "=", 
      RowBox[{
      "sigsrange", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     ";", 
     RowBox[{"zbarMin", "=", 
      FractionBox[
       RowBox[{"Min", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", 
     RowBox[{"zbarMax", "=", 
      FractionBox[
       RowBox[{"Max", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"zbarMax", "-", "zbarMin"}], "<", 
        FractionBox["B0M", 
         SuperscriptBox["10", "9"]]}], ",", 
       RowBox[{
        RowBox[{"zbarMax", "=", "1"}], ";", 
        RowBox[{"zbarMin", "=", 
         RowBox[{"-", "1"}]}]}]}], "]"}], ";", 
     RowBox[{"dm", "=", 
      RowBox[{"IntegerPart", "[", 
       FractionBox[
        RowBox[{"lastep", "-", "1"}], 
        RowBox[{"Min", "[", 
         RowBox[{"nmerid", ",", 
          RowBox[{"lastep", "-", "1"}]}], "]"}]], "]"}]}], ";", 
     RowBox[{"mstep", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"kkk", ",", 
        RowBox[{"{", 
         RowBox[{"kkk", ",", "1", ",", "lastep", ",", "dm"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"meridTABLE", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "scale"], 
         RowBox[{"merid", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", "A3M",
            ",", "A4M", ",", 
           RowBox[{"RNM", " ", 
            RowBox[{"GFUN", "\[LeftDoubleBracket]", 
             RowBox[{
             "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"KAPPA", "\[LeftDoubleBracket]", 
             RowBox[{
             "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}]}], ",", "CRM"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "mstep", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"meridFam", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "meridTABLE", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "green", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01`"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"limitcurve", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"limitCurve", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", "A3M",
            ",", "A4M"}], "]"}], "scale"], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01`"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "blue", "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"meridpathscaled", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["sigm", "scale"], ",", 
           FractionBox["sigs", "scale"]}], "}"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         FractionBox["sigsrange", "scale"]}]}], "]"}]}], ";", 
     RowBox[{"Show", "[", 
      RowBox[{"meridFam", ",", "limitcurve", ",", "meridpathscaled", ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"72", " ", "8"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4057267898490973`*^9, 3.405726797771789*^9}, {
  3.419859870857367*^9, 3.419859880515524*^9}}],

Cell["\<\
The following function will show the path through stress space overlayed on \
top of all yield surfaces for the calculation. The argument nmerid equals the \
total number of yield surfaces you want visible.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"meridianALLbasicNOFLOW", "[", 
   RowBox[{"nmerid_", ",", "scale_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"rmin", "=", 
      RowBox[{
      "sigsrange", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     ";", 
     RowBox[{"rmax", "=", 
      RowBox[{
      "sigsrange", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     ";", 
     RowBox[{"zbarMin", "=", 
      FractionBox[
       RowBox[{"Min", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", 
     RowBox[{"zbarMax", "=", 
      FractionBox[
       RowBox[{"Max", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"zbarMax", "-", "zbarMin"}], "<", 
        FractionBox["B0M", 
         SuperscriptBox["10", "9"]]}], ",", 
       RowBox[{
        RowBox[{"zbarMax", "=", "1"}], ";", 
        RowBox[{"zbarMin", "=", 
         RowBox[{"-", "1"}]}]}]}], "]"}], ";", 
     RowBox[{"dm", "=", 
      RowBox[{"IntegerPart", "[", 
       FractionBox[
        RowBox[{"lastep", "-", "1"}], 
        RowBox[{"Min", "[", 
         RowBox[{"nmerid", ",", 
          RowBox[{"lastep", "-", "1"}]}], "]"}]], "]"}]}], ";", 
     RowBox[{"mstep", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"kkk", ",", 
        RowBox[{"{", 
         RowBox[{"kkk", ",", "1", ",", "lastep", ",", "dm"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"meridTABLE", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "scale"], 
         RowBox[{"merid", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", "A3M",
            ",", "A4M", ",", 
           RowBox[{"RNM", " ", 
            RowBox[{"GFUN", "\[LeftDoubleBracket]", 
             RowBox[{
             "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"KAPPA", "\[LeftDoubleBracket]", 
             RowBox[{
             "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}]}], ",", "CRM"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "mstep", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"meridFam", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "meridTABLE", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "green", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01`"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"limitcurve", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"limitCurve", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", "A3M",
            ",", "A4M"}], "]"}], "scale"], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01`"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "blue", "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"meridpathscaled", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["sigm", "scale"], ",", 
           FractionBox["sigs", "scale"]}], "}"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         FractionBox["sigsrange", "scale"]}]}], "]"}]}], ";", 
     RowBox[{"Show", "[", 
      RowBox[{"meridFam", ",", "limitcurve", ",", "meridpathscaled", ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"72", " ", "8"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405726821528336*^9, 3.4057268264925823`*^9}, {
  3.419859886153762*^9, 3.419859891371387*^9}}],

Cell["\<\
The following function will show the path through stress space overlayed on \
top of all yield surfaces for the calculation. The argument nmerid equals the \
total number of yield surfaces you want visible.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meridianALLbasic", "[", 
   RowBox[{"nmerid_", ",", "scale_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"rmin", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "sigsrange", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         " ", 
         RowBox[{"Max", "[", "GAMMA", "]"}]}], ",", "0"}], "]"}]}], ";", 
     RowBox[{"rmax", "=", 
      RowBox[{
       RowBox[{
       "sigsrange", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       " ", 
       RowBox[{"Max", "[", "GAMMA", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"zbarMin", "=", 
      FractionBox[
       RowBox[{"Min", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", 
     RowBox[{"zbarMax", "=", 
      FractionBox[
       RowBox[{"Max", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"zbarMax", "-", "zbarMin"}], "<", 
        FractionBox["B0M", 
         SuperscriptBox["10", "9"]]}], ",", 
       RowBox[{
        RowBox[{"zbarMax", "=", "1"}], ";", 
        RowBox[{"zbarMin", "=", 
         RowBox[{"-", "1"}]}]}]}], "]"}], ";", 
     RowBox[{"dm", "=", 
      RowBox[{"IntegerPart", "[", 
       FractionBox[
        RowBox[{"lastep", "-", "1"}], 
        RowBox[{"Min", "[", 
         RowBox[{"nmerid", ",", 
          RowBox[{"lastep", "-", "1"}]}], "]"}]], "]"}]}], ";", 
     RowBox[{"mstep", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"kkk", ",", 
        RowBox[{"{", 
         RowBox[{"kkk", ",", "1", ",", "lastep", ",", "dm"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"meridTABLE", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "scale"], 
         RowBox[{"merid", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", "A3M",
            ",", "A4M", ",", 
           RowBox[{"RNM", " ", 
            RowBox[{"GFUN", "\[LeftDoubleBracket]", 
             RowBox[{
             "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"KAPPA", "\[LeftDoubleBracket]", 
             RowBox[{
             "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}]}], ",", "CRM"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "mstep", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"meridFam", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "meridTABLE", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "green", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01`"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"limitcurve", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"limitCurve", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", "A3M",
            ",", "A4M"}], "]"}], "scale"], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01`"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "1"}], "]"}], ",", 
           RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"limitcurvePF", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"limitCurve", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2PFM", ",", 
           "A3M", ",", "A4PFM"}], "]"}], "scale"], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.05"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"red", ",", 
           RowBox[{"Thickness", "[", "0.003", "]"}], ",", "Dashed"}], "}"}]}],
         ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prinlineTXC", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SqrtBox["2"], " ", "z"}], "+", 
         FractionBox[
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"Min", "[", 
            RowBox[{"CTPSM", ",", 
             SuperscriptBox["10.0", "10"]}], "]"}]}], "scale"]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Hue", "[", "0.5", "]"}], ",", "chainDash", ",", "Thick"}],
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prinlineTXE", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", "z"}], "+", 
           FractionBox[
            RowBox[{
             SqrtBox["6"], " ", 
             RowBox[{"Min", "[", 
              RowBox[{"CTPSM", ",", 
               SuperscriptBox["10.0", "10"]}], "]"}]}], "scale"]}], ")"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["rmin", "scale"], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Hue", "[", "0.5", "]"}], ",", "chainDash", ",", "Thick"}],
           "}"}]}]}], "]"}]}], ";", 
     RowBox[{"Print", "[", "\"\<cyan chaindash=prinline\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"meridpathscaled", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["sigm", "scale"], ",", 
           FractionBox[
            RowBox[{"sigs", " ", "GAMMA"}], "scale"]}], "}"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         FractionBox["sigsrange", "scale"]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thickness", "[", "0.005`", "]"}], "}"}]}]}], "]"}]}], ";", 
     
     RowBox[{"Show", "[", 
      RowBox[{
      "prinlineTXC", ",", "prinlineTXE", ",", "meridFam", ",", "limitcurve", 
       ",", "limitcurvePF", ",", "meridpathscaled", ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"72", " ", "8"}]}]}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<meridianALLbasic\>\"", ",", 
    "\"\<function that creates a basic view of the meridional path\>\"", ",", 
    "\"\<meridianALLbasic[number_of_profiles,scale]\>\""}], "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405726860551372*^9, 3.405726913384657*^9}, {
   3.419859896602022*^9, 3.4198599033307734`*^9}, 3.4198692775487223`*^9, {
   3.419869631561158*^9, 3.419869638945099*^9}, {3.419869898665882*^9, 
   3.419869909388465*^9}, 3.419870577794692*^9, {3.424781928990024*^9, 
   3.424781949955542*^9}, 3.424782010700017*^9, {3.42478209206145*^9, 
   3.4247820954910316`*^9}, {3.424782515837706*^9, 3.424782534114623*^9}, {
   3.4247852245406227`*^9, 3.424785230075769*^9}, {3.4259986016841373`*^9, 
   3.4259986760065804`*^9}, {3.425998715873589*^9, 3.4259987205251293`*^9}, {
   3.425998759689168*^9, 3.425998784555303*^9}, {3.42599882128338*^9, 
   3.425998836669231*^9}, {3.425998879106892*^9, 3.425998959369644*^9}, {
   3.4259990366403723`*^9, 3.425999050742949*^9}, {3.5381730872664757`*^9, 
   3.538173116531654*^9}, {3.5406335847032337`*^9, 3.540633601709779*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"yval", "[", 
   RowBox[{"r_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{"2", "r", " ", 
   RowBox[{"Sin", "[", "theta", "]"}]}]}]], "Input",
 InitializationCell->True],

Cell["\<\
The following function will show the path through stress space overlayed on \
top of all yield surfaces for the calculation. The argument nmerid equals the \
total number of yield surfaces you want visible.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meridianALL", "[", 
   RowBox[{"nmerid_", ",", "scale_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gamSHR", ",", "prng", ",", 
      RowBox[{"limitCurveTXCcolor", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", ".8", ",", "0"}], "]"}]}], ",", 
      RowBox[{"limitCurveTXEcolor", "=", 
       RowBox[{"Hue", "[", "0.1", "]"}]}], ",", 
      RowBox[{"prinLinecolor", "=", 
       RowBox[{"Hue", "[", "0.5", "]"}]}], ",", 
      RowBox[{"meridFamColor", "=", "green"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rmin", "=", 
      RowBox[{
      "sigsrange", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     ";", 
     RowBox[{"rmax", "=", 
      RowBox[{
      "sigsrange", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"zbarMin", "=", 
      FractionBox[
       RowBox[{"Min", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", 
     RowBox[{"zbarMax", "=", 
      FractionBox[
       RowBox[{"Max", "[", 
        RowBox[{"-", "I1"}], "]"}], 
       SqrtBox["3"]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prng", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"rmin", " ", "1.2"}], "scale"], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"rmax", " ", "1.2"}], "scale"]}]}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"rmax", " ", "1.2"}], "scale"], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"rmin", " ", "1.2"}], "scale"]}]}], "]"}]}], "}"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"prng", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"prng", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "<", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{"zbarMax", "-", "zbarMin"}], ")"}], "scale"]}], ",", 
       RowBox[{"prng", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mean", "[", "prng", "]"}], "-", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"zbarMax", "-", "zbarMin"}], ")"}], 
            RowBox[{"2", "scale"}]]}], ",", 
          RowBox[{
           RowBox[{"Mean", "[", "prng", "]"}], "+", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"zbarMax", "-", "zbarMin"}], ")"}], 
            RowBox[{"2", "scale"}]]}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"zbarMax", "-", "zbarMin"}], "<", 
        FractionBox["B0M", 
         SuperscriptBox["10", "9"]]}], ",", 
       RowBox[{
        RowBox[{"zbarMax", "=", "1"}], ";", 
        RowBox[{"zbarMin", "=", 
         RowBox[{"-", "1"}]}]}]}], "]"}], ";", 
     RowBox[{"dm", "=", 
      RowBox[{"IntegerPart", "[", 
       FractionBox[
        RowBox[{"lastep", "-", "1"}], 
        RowBox[{"Min", "[", 
         RowBox[{"nmerid", ",", 
          RowBox[{"lastep", "-", "1"}]}], "]"}]], "]"}]}], ";", 
     RowBox[{"mstep", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"kkk", ",", 
        RowBox[{"{", 
         RowBox[{"kkk", ",", "2", ",", "lastep", ",", "dm"}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"mstep", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"mstep", ",", 
        RowBox[{"{", "lastep", "}"}]}], "]"}]}], ";", 
     RowBox[{"meridTABLE", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"yval", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"merid", "[", 
               RowBox[{
                RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", 
                "A3M", ",", "A4M", ",", 
                RowBox[{"RNM", " ", 
                 RowBox[{"GFUN", "\[LeftDoubleBracket]", 
                  RowBox[{
                  "mstep", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                ",", 
                RowBox[{"-", 
                 RowBox[{"KAPPA", "\[LeftDoubleBracket]", 
                  RowBox[{
                  "mstep", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                ",", "CRM"}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"scale", " ", 
                RowBox[{"GAMMA", "\[LeftDoubleBracket]", 
                 RowBox[{
                 "mstep", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
               ")"}]}], ",", 
             RowBox[{"lode", "\[LeftDoubleBracket]", 
              RowBox[{
              "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "\[RightDoubleBracket]"}]}], "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"yval", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"merid", "[", 
                RowBox[{
                 RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", 
                 "A3M", ",", "A4M", ",", 
                 RowBox[{"RNM", " ", 
                  RowBox[{"GFUN", "\[LeftDoubleBracket]", 
                   RowBox[{
                   "mstep", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                 ",", 
                 RowBox[{"-", 
                  RowBox[{"KAPPA", "\[LeftDoubleBracket]", 
                   RowBox[{
                   "mstep", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                 ",", "CRM"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"scale", " ", 
                 RowBox[{"GAMMAopposite", "\[LeftDoubleBracket]", 
                  RowBox[{
                  "mstep", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                ")"}]}], ",", 
              RowBox[{"lode", "\[LeftDoubleBracket]", 
               RowBox[{
               "mstep", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
             "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "mstep", "]"}]}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"meridFam", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "meridTABLE", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "meridFamColor", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"rmax", " ", "1.01"}], "scale"]}], ",", 
           FractionBox[
            RowBox[{"rmax", " ", "1.01"}], "scale"]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"limitcurve", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"limitCurve", "[", 
          RowBox[{
           RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", "A3M",
            ",", "A4M"}], "]"}], "scale"], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "prng"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"limitCurveTXCcolor", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "0.01"}], "}"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"gamSHR", "=", 
      RowBox[{"GAM", "[", 
       RowBox[{"j3type", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prinlineTXC", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SqrtBox["2"], " ", "z"}], "+", 
         FractionBox[
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"Min", "[", 
            RowBox[{"CTPSM", ",", 
             SuperscriptBox["10.0", "10"]}], "]"}]}], "scale"]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "prng"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"prinLinecolor", ",", "chainDash"}], "}"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"prinlineTXE", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"-", "1"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", "z"}], "+", 
           FractionBox[
            RowBox[{
             SqrtBox["6"], " ", 
             RowBox[{"Min", "[", 
              RowBox[{"CTPSM", ",", 
               SuperscriptBox["10.0", "10"]}], "]"}]}], "scale"]}], ")"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "prng"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"prinLinecolor", ",", "chainDash"}], "}"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"limitcurveBot", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"limitCurveTXE", "[", 
            RowBox[{"RK0", ",", 
             RowBox[{"scale", " ", "zbar"}], ",", "A1M", ",", "A2M", ",", 
             "A3M", ",", "A4M"}], "]"}], " "}], "scale"]}], ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", 
          FractionBox["zbarMin", "scale"], ",", 
          FractionBox["zbarMax", "scale"]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "prng"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"limitCurveTXEcolor", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "0.01"}], "}"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
     RowBox[{"meridpathscaled", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            FractionBox[
             RowBox[{
             "sigm", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "scale"], ",", 
            FractionBox[
             RowBox[{"yval", "[", 
              RowBox[{
               RowBox[{
               "sigs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                ",", 
               RowBox[{
               "lode", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "]"}], "scale"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         FractionBox["sigsrange", "scale"]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "myThickness", "}"}]}]}], "]"}]}], ";", 
     RowBox[{"meridtest", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
       "meridFam", ",", "limitcurve", ",", "limitcurveBot", ",", 
        "prinlineTXC", ",", "prinlineTXE", ",", "meridpathscaled", ",", 
        RowBox[{"PlotRange", "\[Rule]", "prng"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"72", " ", "8"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<  dash=limitCurveTXE\>\"", ",", 
         RowBox[{"FontColor", "\[Rule]", "limitCurveTXEcolor"}]}], "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<  solid=meridFam\>\"", ",", 
         RowBox[{"FontColor", "\[Rule]", "meridFamColor"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<  dash=limitCurveTXC\>\"", ",", 
         RowBox[{"FontColor", "\[Rule]", "limitCurveTXCcolor"}]}], "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<  chaindash=prinLine\>\"", ",", 
         RowBox[{"FontColor", "\[Rule]", "prinLinecolor"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"MakeGraphs", ",", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"demodir", "<>", "\"\<meridPath.gif\>\""}], ",", 
         RowBox[{"Show", "[", "meridtest", "]"}]}], "]"}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{"meridtest", ",", 
         RowBox[{"PlotRange", "\[Rule]", "prng"}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<meridianALL\>\"", ",", 
    "\"\<function that creates a rotated side view of the meridional \
path\>\"", ",", "\"\<meridianALL\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4057269243277187`*^9, 3.4057269699860363`*^9}, {
   3.419859685569943*^9, 3.419859708380878*^9}, {3.419859907580935*^9, 
   3.419859907875722*^9}, {3.419860452297772*^9, 3.419860482909443*^9}, 
   3.419860520441485*^9, {3.419860558706339*^9, 3.419860575162117*^9}, {
   3.419860770680642*^9, 3.419860824401404*^9}, 3.419861850810796*^9, {
   3.419868743763522*^9, 3.419868746031158*^9}, 3.419869333400319*^9, {
   3.419869458140071*^9, 3.41986945995973*^9}, {3.4198694971754503`*^9, 
   3.419869549649311*^9}, 3.419869579658777*^9, 3.419869734338271*^9, {
   3.419869793055779*^9, 3.419869806715849*^9}, {3.419870044810533*^9, 
   3.4198701002617807`*^9}, {3.4198702071801977`*^9, 
   3.4198702082437983`*^9}, {3.4198702400745287`*^9, 
   3.4198702528994207`*^9}, {3.419870339771027*^9, 3.4198703711551933`*^9}, {
   3.419870529928566*^9, 3.419870531108718*^9}, 3.419870586707109*^9, {
   3.424782546126584*^9, 3.4247825594793158`*^9}, {3.4247826235937853`*^9, 
   3.424782643101655*^9}, {3.4247826883979588`*^9, 3.4247826934111443`*^9}, {
   3.424782737243177*^9, 3.42478275134408*^9}, {3.424784984033972*^9, 
   3.424785073028201*^9}, {3.424785110000188*^9, 3.4247852394512053`*^9}, {
   3.425999121103553*^9, 3.4259991327306557`*^9}, {3.4259992034567757`*^9, 
   3.425999254477006*^9}, {3.425999293507263*^9, 3.425999385001214*^9}, {
   3.4259994269248047`*^9, 3.425999464112282*^9}, {3.425999510943894*^9, 
   3.425999529224997*^9}, {3.425999646710227*^9, 3.4259996620721416`*^9}, {
   3.42599969228823*^9, 3.425999739661669*^9}, {3.4259997720351477`*^9, 
   3.425999795102441*^9}, {3.425999859908134*^9, 3.425999883351934*^9}, {
   3.425999914497759*^9, 3.425999920462243*^9}, {3.425999989410307*^9, 
   3.4260000622112923`*^9}, {3.426000103578046*^9, 3.426000170908527*^9}, {
   3.4260002389164057`*^9, 3.426000309405396*^9}, {3.426000378177369*^9, 
   3.426000397231732*^9}, {3.426000469535245*^9, 3.426000602594226*^9}, {
   3.426000633902649*^9, 3.426000651291781*^9}, {3.429980018621532*^9, 
   3.429980035709508*^9}, {3.4299802574438467`*^9, 3.429980270155471*^9}, {
   3.429980323075348*^9, 3.429980329854218*^9}, {3.429980594853672*^9, 
   3.429980653718169*^9}, {3.4299807690100107`*^9, 3.4299808369748917`*^9}, {
   3.4299808973131847`*^9, 3.4299809054616117`*^9}, {3.429980972118299*^9, 
   3.429981149307021*^9}, {3.429981207334662*^9, 3.429981273233685*^9}, {
   3.429981346864284*^9, 3.429981415925001*^9}, {3.4299814638516493`*^9, 
   3.42998146785117*^9}, {3.429981550205002*^9, 3.4299816603301973`*^9}, {
   3.429981733260857*^9, 3.429981770968315*^9}, {3.429981826969248*^9, 
   3.429981914093853*^9}, {3.4299819584055643`*^9, 3.429981970127756*^9}, {
   3.429982018529559*^9, 3.429982178583358*^9}, {3.4299822346455917`*^9, 
   3.429982279453908*^9}, {3.429982311388666*^9, 3.429982326172287*^9}, {
   3.429982364255123*^9, 3.429982383233035*^9}, {3.429982492221986*^9, 
   3.429982492730876*^9}, {3.429983460539513*^9, 3.429983553890417*^9}, {
   3.429983665063881*^9, 3.429983678195759*^9}, {3.4299861317193108`*^9, 
   3.429986132622003*^9}, {3.429986194916751*^9, 3.4299861954196177`*^9}, {
   3.4299862320910587`*^9, 3.42998623257953*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"meridianALL", "[", 
   RowBox[{
   "nmerid_", ",", "zbarLO_", ",", "zbarHI_", ",", "rLO_", ",", "rHI_"}], 
   "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"dm", "=", 
     RowBox[{"IntegerPart", "[", 
      FractionBox[
       RowBox[{"lastep", "-", "1"}], 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"nmerid", ",", "1"}], "]"}], ",", 
         RowBox[{"lastep", "-", "1"}]}], "]"}]], "]"}]}], ";", 
    RowBox[{"mstep", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"kkk", ",", 
       RowBox[{"{", 
        RowBox[{"kkk", ",", "1", ",", "lastep", ",", "dm"}], "}"}]}], "]"}]}],
     ";", 
    RowBox[{"meridTABLE", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"merid", "[", 
        RowBox[{"zbar", ",", "A1M", ",", "A2M", ",", "A3M", ",", "A4M", ",", 
         RowBox[{"RNM", " ", 
          RowBox[{"GFUN", "\[LeftDoubleBracket]", 
           RowBox[{
           "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"KAPPA", "\[LeftDoubleBracket]", 
           RowBox[{
           "mstep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "\[RightDoubleBracket]"}]}], ",", "CRM"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "mstep", "]"}]}], "}"}]}], "]"}]}], ";", 
    RowBox[{"meridFam", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", "meridTABLE", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"zbar", ",", "zbarLO", ",", "zbarHI"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "green", "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"rLO", ",", "rHI"}], "}"}]}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}]}], ";", 
    RowBox[{"Show", "[", 
     RowBox[{"meridFam", ",", "meridpath"}], "]"}]}], ")"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["GeoModel Elastic Info", "Section",
 InitializationCell->True],

Cell["\<\
This function will echo the elastic parameters, and tell the values of fack \
and facg for ubiquitous jointing (these are \"reduction factors\" on the \
moduli).
A 4x4 plot will be drawn that shows how the nonlinear elastic moduli vary \
throughout the course of the calculation.
On the first two plots, the thick black line is the actual modulus, while the \
thin green line is the modulus WITHOUT the elastic plastic coupling term \
(still reduced by fack and facg if applicable).\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"elasticInfo", "=."}], ";", 
  RowBox[{"ClearAll", "[", "elasticInfo", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"elasticInfo", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "RAT", ",", "facN", ",", "facS", ",", "p11", ",", "p12", ",", "p21", 
       ",", "p22", ",", "barg", ",", "garg", ",", "bkmoda", ",", "shmoda"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"RAT", "=", 
       FractionBox["G0M", "B0M"]}], ";", 
      RowBox[{"facN", "=", 
       FractionBox[
        RowBox[{"RJSM", " ", "RKNM"}], "B0M"]}], ";", 
      RowBox[{"facS", "=", 
       FractionBox[
        RowBox[{"RJSM", " ", "RKSM"}], "G0M"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xpropz", "[", 
       RowBox[{
        RowBox[{"PoisU", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "B0U"}], "-", 
             RowBox[{"2", " ", "G0U"}]}], ")"}], "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", "B0U"}], " ", "+", " ", "G0U"}], ")"}]}]}], 
        ",", "\"\<PoisU\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xpropz", "[", 
       RowBox[{
        RowBox[{"PoisM", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "B0M"}], "-", 
             RowBox[{"2", " ", "G0M"}]}], ")"}], "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", "B0M"}], " ", "+", " ", "G0M"}], ")"}]}]}], 
        ",", "\"\<PoisM\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"TableForm", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<bulk modulus parameters =\>\"", ",", "B0M", ",", "B1M", ",", 
            "B2M", ",", "B3M", ",", "B4M"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<shear modulus parameters =\>\"", ",", "G0M", ",", "G1M", ",", 
            "G2M", ",", "G3M", ",", "G4M"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<joint degredation of bulk modulus, facK=\>\"", ",", 
            RowBox[{"facK", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"RJSM", ">", "0"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{".75", "*", "facN"}], "+", "RAT"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{".75", "*", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "facN"}], ")"}]}], "+", "RAT"}], 
                 ")"}]}], ",", "1"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<joint degredation of shear modulus, facG=\>\"", ",", 
            RowBox[{"facG", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"RJSM", ">", "0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{".6", "+", "facS"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "facS"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"4.", "/", "15"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"facK", "-", "1"}], ")"}], "*", "RAT"}]}], ",", 
               "1"}], "]"}]}]}], "}"}]}], "}"}], "]"}], "]"}], ";", 
      RowBox[{"absI1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "QSSIGXX", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "+", 
              RowBox[{
              "QSSIGYY", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "+", 
              RowBox[{
              "QSSIGZZ", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
           FractionBox["1", "1000000000000000000000000000000000000000"]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "I1", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"rootJ2qs", "=", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["QSSIGXX", "2"], "+", 
             SuperscriptBox["QSSIGYY", "2"], "+", 
             SuperscriptBox["QSSIGZZ", "2"], "-", 
             RowBox[{"QSSIGXX", " ", "QSSIGYY"}], "-", 
             RowBox[{"QSSIGYY", " ", "QSSIGZZ"}], "-", 
             RowBox[{"QSSIGZZ", " ", "QSSIGXX"}]}], ")"}]}], "+", 
          SuperscriptBox["QSSIGXY", "2"], "+", 
          SuperscriptBox["QSSIGYZ", "2"], "+", 
          SuperscriptBox["QSSIGZX", "2"]}], ")"}]}]}], ";", 
      RowBox[{"barg", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["B4M", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"EVP", "[", 
               RowBox[{"Xbar", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{
                  "QSEL", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], ",", "CRM", ",", "A1M", ",", 
                 "A2M", ",", "A3M", ",", "A4M"}], "]"}], "]"}], "]"}], ",", 
             FractionBox["1", 
              SuperscriptBox["10", "60"]]}], "]"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "EQPV", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"garg", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["G4M", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
              "EQPS", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}], ",", 
             FractionBox["1", 
              SuperscriptBox["10", "60"]]}], "]"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "EQPS", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"bkmoda", "=", 
       RowBox[{"facK", " ", 
        RowBox[{"(", 
         RowBox[{"B0M", "+", 
          RowBox[{"B1M", " ", 
           RowBox[{"Exps", "[", 
            RowBox[{"-", 
             FractionBox["B2M", "absI1"]}], "]"}]}]}], ")"}]}]}], ";", 
      RowBox[{"shmoda", "=", 
       FractionBox[
        RowBox[{"facG", " ", 
         RowBox[{"(", 
          RowBox[{"G0M", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"G1M", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "G2M"}], " ", "rootJ2qs"}]]}]}], ")"}]}], 
          ")"}]}], 
        RowBox[{"1", "-", "G1M"}]]}], ";", 
      RowBox[{"bkmodA", "=", 
       RowBox[{"facK", " ", 
        RowBox[{"(", 
         RowBox[{"B0M", "+", 
          RowBox[{"B1M", " ", 
           RowBox[{"Exps", "[", 
            RowBox[{"-", 
             FractionBox["B2M", "absI1"]}], "]"}]}], "-", 
          RowBox[{"B3M", " ", 
           RowBox[{"Exps", "[", "barg", "]"}]}]}], ")"}]}]}], ";", 
      RowBox[{"shmodA", "=", 
       RowBox[{"facG", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"G0M", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"G1M", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "G2M"}], " ", "rootJ2qs"}]]}]}], ")"}]}], 
           RowBox[{"1", "-", "G1M"}]], "-", 
          RowBox[{"G3M", " ", 
           RowBox[{"Exps", "[", "garg", "]"}]}]}], ")"}]}]}], ";", 
      RowBox[{"poisA", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"3", " ", "bkmodA"}], "-", 
         RowBox[{"2", " ", "shmodA"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "bkmodA"}], "+", "shmodA"}], ")"}]}]]}], ";", 
      RowBox[{"usmA", "=", 
       RowBox[{"bkmodA", "+", 
        FractionBox[
         RowBox[{"4", " ", "shmodA"}], "3"]}]}], ";", 
      RowBox[{"p11", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "TIME", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                ",", 
               FractionBox[
                RowBox[{
                "bkmodA", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "B0M"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<time\>\"", ",", "\"\<bkmodA/B0M\>\""}], "}"}]}], 
           ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", "fatLine", "}"}]}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "TIME", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                ",", 
               FractionBox[
                RowBox[{
                "bkmoda", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "B0M"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<time\>\"", ",", "\"\<bkmoda/B0M\>\""}], "}"}]}], 
           ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"thinLine", ",", "green"}], "}"}]}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"p12", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "TIME", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                ",", 
               FractionBox[
                RowBox[{
                "shmodA", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "G0M"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<time\>\"", ",", "\"\<shmodA/G0M\>\""}], "}"}]}], 
           ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", "fatLine", "}"}]}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "TIME", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                ",", 
               FractionBox[
                RowBox[{
                "shmoda", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "G0M"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<time\>\"", ",", "\"\<shmoda/G0M\>\""}], "}"}]}], 
           ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"thinLine", ",", "green"}], "}"}]}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"p21", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "TIME", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                ",", 
               FractionBox[
                RowBox[{
                "USM", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                RowBox[{"B0M", "+", 
                 FractionBox[
                  RowBox[{"4", " ", "G0M"}], "3"]}]]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<time\>\"", ",", "\"\<USM/USM_initial\>\""}], 
             "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", "fatLine", "}"}]}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "TIME", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                ",", 
               FractionBox[
                RowBox[{
                "usmA", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"B0M", "+", 
                 FractionBox[
                  RowBox[{"4", " ", "G0M"}], "3"]}]]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<time\>\"", ",", "\"\<usmA/USM_initial\>\""}], 
             "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", "red", "}"}]}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"p22", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "TIME", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "poisA", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "lastep"}], "}"}]}], "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<time\>\"", ",", "\"\<poisA\>\""}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", "blue", "}"}]}]}], "]"}]}], ";", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p11", ",", "p12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p21", ",", "p22"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"72", " ", "8"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<elasticInfo\>\"", ",", 
    "\"\<function that computes elastic constants and other things \
elastic\>\"", ",", "\"\<elasticInfo[]\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<bkmodA\>\"", ",", "\"\<nonlinear bulk modulus\>\"", ",", 
    "\"\<{bkmodA}\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<shmodA\>\"", ",", "\"\<nonlinear shear modulus\>\"", ",", 
    "\"\<{shmodA}\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<poisA\>\"", ",", "\"\<nonlinear poisson ratio\>\"", ",", 
    "\"\<{poisA}\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<usmA\>\"", ",", 
    "\"\<computed nonlinear constrained modulus = K+4G/3\>\"", ",", 
    "\"\<{usmA}\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<USM\>\"", ",", 
    "\"\<constrained modulus output from code (should equal usmA)\>\"", ",", 
    "\"\<{USM}\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"constrainedModulus", ":=", 
  RowBox[{"B0M", "+", 
   FractionBox[
    RowBox[{"4", " ", "G0M"}], "3"]}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<constrainedModulus\>\"", ",", "\"\<initial constrained modulus\>\"", 
    ",", "\"\<USM\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.405714980262347*^9, 3.405715007153701*^9}, {
  3.405725046703648*^9, 3.405725103773999*^9}, {3.419859718247046*^9, 
  3.419859758474032*^9}, {3.540633736277467*^9, 3.5406337665800858`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Functions and constants used in comparisons with exact solutions\
\>", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExactStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", ".5", ",", "0"}], "]"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
     RowBox[{"Dashing", "[", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.01"}], "}"}], "]"}]}], "}"}]}], ";"}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ErrorStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{".7", ",", ".7", ",", ".85"}], "]"}], ",", 
     RowBox[{"PointSize", "[", "0.03", "]"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mdlErrorTab", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"scl", ",", "exactordinate", ",", "npnts"}], "}"}], ",", 
    RowBox[{
     RowBox[{"scl", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", "EXACTordinate", "]"}], "-", 
         RowBox[{"Min", "[", "EXACTordinate", "]"}]}], ")"}]}]}], ";", 
     RowBox[{"exactordinate", "=", 
      RowBox[{"interp", "[", 
       RowBox[{"EXACTabscissa", ",", "EXACTordinate"}], "]"}]}], ";", 
     RowBox[{"npnts", "=", 
      RowBox[{"Length", "[", "MODELordinate", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MODELordinate", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"exactordinate", "[", 
            RowBox[{"MODELabscissa", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}], "scl"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "npnts"}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<mdlErrorTab\>\"", ",", 
    "\"\<function to compute model error table\>\"", ",", 
    "\"\<mdlErrorTab[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MODELerror", "=."}], ";", 
  RowBox[{"Clear", "[", "MODELerror", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODELerror", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"jnk", ",", "npnts"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"jnk", "=", 
      RowBox[{"mdlErrorTab", "[", 
       RowBox[{
       "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
        "MODELordinate"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"npnts", "=", 
      RowBox[{"Length", "[", "jnk", "]"}]}], ";", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"jnk", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "npnts"}], "}"}]}], "]"}], "]"}], "/",
         "npnts"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<MODELerror\>\"", ",", 
    "\"\<function that returns overall model error\>\"", ",", 
    "\"\<MODELerror[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Use the following to generate a plot of the normalized error (normalization \
is such that the displayed error will range from scaleLO at the lowest error \
point to scaleHI at the highest Error point.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showMODELerror", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_", ",", "scaleLO_", ",", "scaleHI_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"jnk", ",", "ermax", ",", "eta"}], "}"}], ",", 
    RowBox[{
     RowBox[{"jnk", "=", 
      RowBox[{"mdlErrorTab", "[", 
       RowBox[{
       "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
        "MODELordinate"}], "]"}]}], ";", 
     RowBox[{"ermax", "=", 
      RowBox[{"Max", "[", "jnk", "]"}]}], ";", 
     RowBox[{"eta", "=", 
      FractionBox["jnk", "ermax"]}], ";", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"scaleLO", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"scaleHI", "-", "scaleLO"}], ")"}], " ", "eta"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "ErrorStyle"}]}], "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<showMODELerror\>\"", ",", 
    "\"\<function generating a plot of model error\>\"", ",", 
    "\"\<showMODELerror[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Use the following to set scaleLO and scaleHI to the low and high values of \
the MODEL response function. This is useful to combine plots of model \
response with visualization of the error.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"showMODELerror", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"jnk", ",", "ermax", ",", "scaledErr", ",", "npnts"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"jnk", "=", 
      RowBox[{"mdlErrorTab", "[", 
       RowBox[{
       "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
        "MODELordinate"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ermax", "=", 
      RowBox[{"Max", "[", "jnk", "]"}]}], ";", 
     RowBox[{"npnts", "=", 
      RowBox[{"Length", "[", "MODELordinate", "]"}]}], ";", 
     RowBox[{"scLO", "=", 
      RowBox[{"Min", "[", "MODELordinate", "]"}]}], ";", 
     RowBox[{"scHI", "=", 
      RowBox[{"Max", "[", "MODELordinate", "]"}]}], ";", 
     RowBox[{"scaledErr", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MODELabscissa", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"scLO", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"scHI", "-", "scLO"}], ")"}], "*", 
            RowBox[{
             RowBox[{"jnk", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "/", "ermax"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "npnts"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"scaledErr", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "ErrorStyle"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"showMODELerrori", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"jnk", ",", "ermax", ",", "scaledErr", ",", "npnts"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"jnk", "=", 
      RowBox[{"mdlErrorTab", "[", 
       RowBox[{
       "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
        "MODELordinate"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ermax", "=", 
      RowBox[{"Max", "[", "jnk", "]"}]}], ";", 
     RowBox[{"npnts", "=", 
      RowBox[{"Length", "[", "MODELordinate", "]"}]}], ";", 
     RowBox[{"scLO", "=", 
      RowBox[{"Min", "[", "MODELordinate", "]"}]}], ";", 
     RowBox[{"scHI", "=", 
      RowBox[{"Max", "[", "MODELordinate", "]"}]}], ";", 
     RowBox[{"scaledErr", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MODELabscissa", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"scLO", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"scHI", "-", "scLO"}], ")"}], "*", 
            RowBox[{
             RowBox[{"jnk", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "/", "ermax"}]}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "npnts"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"scaledErr", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "ErrorStyle"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<showMODELerrori\>\"", ",", 
    "\"\<creates but does not display the model error plot\>\"", ",", 
    "\"\<showMODELerrori[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.4198597646899157`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"compare", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"makeme", "[", 
     RowBox[{"EXACTabscissa", ",", "EXACTordinate", ",", "ExactStyle"}], 
     "]"}], ",", 
    RowBox[{"makeme", "[", 
     RowBox[{"MODELabscissa", ",", "MODELordinate", ",", "ModelStyle"}], 
     "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"2", " ", "4", " ", "72"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<compare\>\"", ",", 
    "\"\<gives a plot of computed and exact results\>\"", ",", 
    "\"\<compare[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419859769742669*^9, 3.4198597705461063`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"comparei", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"makeme", "[", 
     RowBox[{"EXACTabscissa", ",", "EXACTordinate", ",", "ExactStyle"}], 
     "]"}], ",", 
    RowBox[{"makeme", "[", 
     RowBox[{"MODELabscissa", ",", "MODELordinate", ",", "ModelStyle"}], 
     "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"2", " ", "4", " ", "72"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<comparei\>\"", ",", 
    "\"\<creates but does not display the model comparison plot\>\"", ",", 
    "\"\<comparei[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41985977707078*^9, 3.419859777666471*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"compare", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_", ",", "label_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"makeme", "[", 
     RowBox[{"EXACTabscissa", ",", "EXACTordinate", ",", "ExactStyle"}], 
     "]"}], ",", 
    RowBox[{"makeme", "[", 
     RowBox[{"MODELabscissa", ",", "MODELordinate", ",", "ModelStyle"}], 
     "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"2", " ", "4", " ", "72"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"label", "<>", "\"\< log10error: \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"MODELerror", "[", 
        RowBox[{
        "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
         "MODELordinate"}], "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419859784335609*^9, 3.419859785147049*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"comparei", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_", ",", "label_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"makeme", "[", 
     RowBox[{"EXACTabscissa", ",", "EXACTordinate", ",", "ExactStyle"}], 
     "]"}], ",", 
    RowBox[{"makeme", "[", 
     RowBox[{"MODELabscissa", ",", "MODELordinate", ",", "ModelStyle"}], 
     "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"2", " ", "4", " ", "72"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"label", "<>", "\"\< log10error: \>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"MODELerror", "[", 
        RowBox[{
        "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
         "MODELordinate"}], "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419859790119651*^9, 3.419859790683014*^9}}],

Cell["\<\
The following will make the \"compare\" plot and overlay with it the error \
plot scaled appropriately to appear on the same plot.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cmpr", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"comparei", "[", 
     RowBox[{
     "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
      "MODELordinate"}], "]"}], ",", 
    RowBox[{"showMODELerrori", "[", 
     RowBox[{
     "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
      "MODELordinate"}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"4", " ", "72"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<cmpr\>\"", ",", 
    "\"\<overlays a comparison plot with a scaled error plot\>\"", ",", 
    "\"\<cmpr[...]\>\""}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.419859797769587*^9, 3.419859798458144*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmpr", "[", 
   RowBox[{
   "EXACTabscissa_", ",", "EXACTordinate_", ",", "MODELabscissa_", ",", 
    "MODELordinate_", ",", "label_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"comparei", "[", 
     RowBox[{
     "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
      "MODELordinate", ",", "label"}], "]"}], ",", 
    RowBox[{"showMODELerrori", "[", 
     RowBox[{
     "EXACTabscissa", ",", "EXACTordinate", ",", "MODELabscissa", ",", 
      "MODELordinate"}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"4", " ", "72"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4198598032370462`*^9, 3.419859803744433*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Picking i1 i2 ranges", "Section",
 CellChangeTimes->{{3.411170751692163*^9, 3.4111707567695436`*^9}}],

Cell["\<\
If a sim didn't run, commands that aim to show results over a specified range \
from i1 to i2 can spew errors. The following function should be used to set \
i1 and i2\
\>", "Text",
 CellChangeTimes->{{3.4111707596977243`*^9, 3.4111708049890623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seti1i2", "[", 
   RowBox[{"i1try_", ",", "i2try_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i1try", ">", "lastep"}], ",", 
      RowBox[{"i1", "=", "1"}], ",", 
      RowBox[{"i1", "=", "i1try"}]}], "]"}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i2try", ">", "lastep"}], ",", 
      RowBox[{"i2", "=", "lastep"}], ",", 
      RowBox[{"i2", "=", "i2try"}]}], "]"}], ";"}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.411170449734508*^9, 3.411170617104581*^9}, 
   3.411170654907902*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{
   "\"\<seti1i2\>\"", ",", "\"\<sets values to temporary i1 and i2\>\"", ",", 
    "\"\<seti1i2[i1value,i2value]\>\""}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.411170837959819*^9, 3.411170887840724*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary of initialized variables", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Sort", "[", "initlist", "]"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1066, 829},
WindowMargins->{{Automatic, 175}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], CellMargins -> {{60, 10}, {7, 7}}, 
    InputAutoReplacements -> {"TeX" -> FormBox[
        StyleBox[
         RowBox[{"T", 
           AdjustmentBox[
           "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 0.5], 
           "X"}], SingleLetterItalics -> False], TraditionalForm], "LaTeX" -> 
      FormBox[
        StyleBox[
         RowBox[{"L", 
           StyleBox[
            AdjustmentBox[
            "A", BoxMargins -> {{-0.5, -0.3}, {0, 0}}, 
             BoxBaselineShift -> -0.4], FontSize -> Smaller], "T", 
           AdjustmentBox[
           "E", BoxMargins -> {{-0.3, 0}, {0, 0}}, BoxBaselineShift -> 0.5], 
           "X"}], SingleLetterItalics -> False], TraditionalForm], "mma" -> 
      "Mathematica", "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
      "gridMathematica" -> FormBox[
        RowBox[{"grid", 
          AdjustmentBox[
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
      "webMathematica" -> FormBox[
        RowBox[{"web", 
          AdjustmentBox[
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], ParentList}, 
    LineSpacing -> {1, 3}, CounterIncrements -> "Text", MenuSortingValue -> 
    1400, MenuCommandKey -> "7", FontColor -> RGBColor[0, 0, 1], Background -> 
    RGBColor[0.9098039215686274, 0.9294117647058824, 0.9333333333333333]]}, 
  Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, 2011)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 80, 1, 76, "Title",
 InitializationCell->True],
Cell[650, 25, 326, 6, 72, "Text"],
Cell[979, 33, 674, 21, 252, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1678, 58, 60, 1, 67, "Section",
 InitializationCell->True],
Cell[1741, 61, 187, 6, 42, "Text",
 InitializationCell->True],
Cell[1931, 69, 103, 2, 27, "Input",
 InitializationCell->True],
Cell[2037, 73, 100, 2, 27, "Input"],
Cell[2140, 77, 771, 14, 43, "Input",
 InitializationCell->True],
Cell[2914, 93, 1094, 33, 103, "Input",
 InitializationCell->True],
Cell[4011, 128, 286, 8, 43, "Input",
 InitializationCell->True],
Cell[4300, 138, 406, 10, 102, "Text",
 InitializationCell->True],
Cell[4709, 150, 197, 4, 27, "Input",
 InitializationCell->True],
Cell[4909, 156, 877, 19, 58, "Input",
 InitializationCell->True],
Cell[5789, 177, 216, 4, 27, "Input",
 InitializationCell->True],
Cell[6008, 183, 26, 0, 27, "Input"],
Cell[6037, 185, 259, 5, 57, "Text"],
Cell[6299, 192, 385, 10, 43, "Input",
 InitializationCell->True],
Cell[6687, 204, 671, 18, 43, "Input",
 InitializationCell->True],
Cell[7361, 224, 483, 12, 27, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[7881, 241, 82, 1, 67, "Section",
 InitializationCell->True],
Cell[7966, 244, 284, 8, 43, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[8287, 257, 73, 1, 67, "Section",
 InitializationCell->True],
Cell[8363, 260, 3740, 106, 313, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[12140, 371, 89, 1, 67, "Section",
 InitializationCell->True],
Cell[12232, 374, 117, 3, 42, "Text",
 InitializationCell->True],
Cell[12352, 379, 385, 10, 43, "Input",
 InitializationCell->True],
Cell[12740, 391, 198, 6, 87, "Text",
 InitializationCell->True],
Cell[12941, 399, 443, 14, 27, "Input"],
Cell[13387, 415, 291, 7, 42, "Text",
 InitializationCell->True],
Cell[13681, 424, 560, 17, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14278, 446, 202, 4, 89, "Section",
 InitializationCell->True],
Cell[14483, 452, 355, 8, 72, "Text",
 InitializationCell->True],
Cell[14841, 462, 847, 13, 102, "Text",
 InitializationCell->True],
Cell[15691, 477, 346, 8, 57, "Text",
 InitializationCell->True],
Cell[16040, 487, 558, 11, 72, "Text",
 InitializationCell->True],
Cell[16601, 500, 174, 4, 42, "Text",
 InitializationCell->True],
Cell[16778, 506, 393, 9, 87, "Text",
 InitializationCell->True],
Cell[17174, 517, 387, 6, 43, "Input"],
Cell[17564, 525, 462, 12, 43, "Input",
 InitializationCell->True],
Cell[18029, 539, 6142, 124, 388, "Input",
 InitializationCell->True],
Cell[24174, 665, 1821, 42, 118, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[26032, 712, 130, 1, 67, "Section"],
Cell[26165, 715, 79, 1, 42, "Text",
 InitializationCell->True],
Cell[26247, 718, 722, 22, 43, "Input",
 InitializationCell->True],
Cell[26972, 742, 123, 3, 42, "Text",
 InitializationCell->True],
Cell[27098, 747, 769, 23, 58, "Input",
 InitializationCell->True],
Cell[27870, 772, 96, 1, 42, "Text",
 InitializationCell->True],
Cell[27969, 775, 864, 24, 43, "Input",
 InitializationCell->True],
Cell[28836, 801, 115, 3, 42, "Text",
 InitializationCell->True],
Cell[28954, 806, 908, 24, 43, "Input",
 InitializationCell->True],
Cell[29865, 832, 103, 1, 42, "Text",
 InitializationCell->True],
Cell[29971, 835, 573, 16, 27, "Input",
 InitializationCell->True],
Cell[30547, 853, 141, 4, 42, "Text",
 InitializationCell->True],
Cell[30691, 859, 582, 16, 43, "Input",
 InitializationCell->True],
Cell[31276, 877, 97, 1, 42, "Text",
 InitializationCell->True],
Cell[31376, 880, 545, 15, 27, "Input",
 InitializationCell->True],
Cell[31924, 897, 157, 4, 42, "Text",
 InitializationCell->True],
Cell[32084, 903, 560, 16, 43, "Input",
 InitializationCell->True],
Cell[32647, 921, 556, 16, 43, "Input",
 InitializationCell->True],
Cell[33206, 939, 160, 4, 42, "Text",
 InitializationCell->True],
Cell[33369, 945, 406, 11, 27, "Input",
 InitializationCell->True],
Cell[33778, 958, 129, 3, 42, "Text",
 InitializationCell->True],
Cell[33910, 963, 944, 25, 58, "Input",
 InitializationCell->True],
Cell[34857, 990, 72, 1, 42, "Text",
 InitializationCell->True],
Cell[34932, 993, 669, 19, 27, "Input",
 InitializationCell->True],
Cell[35604, 1014, 96, 1, 42, "Text",
 InitializationCell->True],
Cell[35703, 1017, 611, 17, 27, "Input",
 InitializationCell->True],
Cell[36317, 1036, 72, 1, 42, "Text",
 InitializationCell->True],
Cell[36392, 1039, 958, 27, 43, "Input",
 InitializationCell->True],
Cell[37353, 1068, 293, 6, 57, "Text"],
Cell[37649, 1076, 616, 15, 27, "Input"],
Cell[38268, 1093, 2127, 48, 178, "Input",
 InitializationCell->True],
Cell[40398, 1143, 150, 4, 42, "Text",
 InitializationCell->True],
Cell[40551, 1149, 164, 5, 27, "Input",
 InitializationCell->True],
Cell[40718, 1156, 188, 4, 42, "Text",
 InitializationCell->True],
Cell[40909, 1162, 1776, 50, 73, "Input",
 InitializationCell->True],
Cell[42688, 1214, 291, 6, 57, "Text",
 InitializationCell->True],
Cell[42982, 1222, 2251, 62, 118, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[45270, 1289, 106, 1, 67, "Section"],
Cell[45379, 1292, 4037, 103, 193, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[49453, 1400, 82, 1, 67, "Section",
 InitializationCell->True],
Cell[49538, 1403, 1565, 43, 73, "Input",
 InitializationCell->True],
Cell[51106, 1448, 538, 15, 58, "Input",
 InitializationCell->True],
Cell[51647, 1465, 4691, 149, 238, "Input",
 InitializationCell->True],
Cell[56341, 1616, 3991, 108, 223, "Input",
 InitializationCell->True],
Cell[60335, 1726, 4136, 109, 238, "Input",
 InitializationCell->True],
Cell[64474, 1837, 2150, 65, 148, "Input",
 InitializationCell->True],
Cell[66627, 1904, 5622, 152, 253, "Input",
 InitializationCell->True],
Cell[72252, 2058, 122, 4, 72, "Text"],
Cell[72377, 2064, 7963, 210, 318, "Input",
 InitializationCell->True],
Cell[80343, 2276, 1187, 34, 73, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[81567, 2315, 80, 1, 67, "Section",
 InitializationCell->True],
Cell[81650, 2318, 259, 8, 102, "Text",
 InitializationCell->True],
Cell[81912, 2328, 518, 17, 43, "Input",
 InitializationCell->True],
Cell[82433, 2347, 996, 31, 58, "Input",
 InitializationCell->True],
Cell[83432, 2380, 6238, 184, 298, "Input",
 InitializationCell->True],
Cell[89673, 2566, 742, 24, 43, "Input",
 InitializationCell->True],
Cell[90418, 2592, 6188, 140, 313, "Input"],
Cell[96609, 2734, 294, 6, 57, "Text",
 InitializationCell->True],
Cell[96906, 2742, 2764, 80, 401, "Input"],
Cell[99673, 2824, 1050, 27, 58, "Input"],
Cell[100726, 2853, 1159, 23, 297, "Text",
 InitializationCell->True],
Cell[101888, 2878, 534, 14, 88, "Input",
 InitializationCell->True],
Cell[102425, 2894, 2889, 82, 178, "Input",
 InitializationCell->True],
Cell[105317, 2978, 321, 8, 102, "Text",
 InitializationCell->True],
Cell[105641, 2988, 740, 20, 88, "Input"],
Cell[106384, 3010, 95, 2, 27, "Input"],
Cell[106482, 3014, 339, 6, 57, "Text",
 InitializationCell->True],
Cell[106824, 3022, 1517, 37, 58, "Input"],
Cell[108344, 3061, 21494, 559, 1502, "Input",
 InitializationCell->True],
Cell[129841, 3622, 4700, 126, 307, "Input",
 InitializationCell->True],
Cell[134544, 3750, 257, 5, 57, "Text",
 InitializationCell->True],
Cell[134804, 3757, 4708, 126, 324, "Input",
 InitializationCell->True],
Cell[139515, 3885, 257, 5, 57, "Text",
 InitializationCell->True],
Cell[139775, 3892, 9485, 246, 574, "Input",
 InitializationCell->True],
Cell[149263, 4140, 201, 6, 27, "Input",
 InitializationCell->True],
Cell[149467, 4148, 257, 5, 57, "Text",
 InitializationCell->True],
Cell[149727, 4155, 17142, 405, 896, "Input",
 InitializationCell->True],
Cell[166872, 4562, 2077, 55, 136, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[168986, 4622, 67, 1, 67, "Section",
 InitializationCell->True],
Cell[169056, 4625, 533, 10, 72, "Text",
 InitializationCell->True],
Cell[169592, 4637, 17208, 457, 917, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[186837, 5099, 118, 3, 67, "Section",
 InitializationCell->True],
Cell[186958, 5104, 270, 8, 27, "Input",
 InitializationCell->True],
Cell[187231, 5114, 295, 10, 27, "Input",
 InitializationCell->True],
Cell[187529, 5126, 273, 8, 27, "Input",
 InitializationCell->True],
Cell[187805, 5136, 1539, 44, 88, "Input",
 InitializationCell->True],
Cell[189347, 5182, 1395, 39, 88, "Input",
 InitializationCell->True],
Cell[190745, 5223, 252, 5, 42, "Text",
 InitializationCell->True],
Cell[191000, 5230, 1252, 35, 105, "Input",
 InitializationCell->True],
Cell[192255, 5267, 241, 5, 42, "Text",
 InitializationCell->True],
Cell[192499, 5274, 1693, 47, 88, "Input",
 InitializationCell->True],
Cell[194195, 5323, 1969, 54, 103, "Input",
 InitializationCell->True],
Cell[196167, 5379, 853, 23, 58, "Input",
 InitializationCell->True],
Cell[197023, 5404, 865, 23, 58, "Input",
 InitializationCell->True],
Cell[197891, 5429, 966, 24, 121, "Input",
 InitializationCell->True],
Cell[198860, 5455, 967, 24, 121, "Input",
 InitializationCell->True],
Cell[199830, 5481, 181, 4, 47, "Text",
 InitializationCell->True],
Cell[200014, 5487, 899, 25, 99, "Input",
 InitializationCell->True],
Cell[200916, 5514, 736, 19, 77, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[201689, 5538, 107, 1, 73, "Section"],
Cell[201799, 5541, 261, 5, 67, "Text"],
Cell[202063, 5548, 620, 18, 32, "Input",
 InitializationCell->True],
Cell[202686, 5568, 297, 7, 32, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[203020, 5580, 78, 1, 73, "Section",
 InitializationCell->True],
Cell[203101, 5583, 91, 2, 32, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
